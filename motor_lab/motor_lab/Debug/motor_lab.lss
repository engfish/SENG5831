
motor_lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  000038c4  00003958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000038c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000da  008001be  008001be  00003a16  2**0
                  ALLOC
  3 .stab         0000369c  00000000  00000000  00003a18  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000569f  00000000  00000000  000070b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  0000c753  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000a8  00000000  00000000  0000c7af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000f3a  00000000  00000000  0000c857  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000469  00000000  00000000  0000d791  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000058c  00000000  00000000  0000dbfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002a8  00000000  00000000  0000e188  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000005e8  00000000  00000000  0000e430  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000b3a  00000000  00000000  0000ea18  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000e0  00000000  00000000  0000f552  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
       c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      1c:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__vector_7>
      20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      2c:	0c 94 01 11 	jmp	0x2202	; 0x2202 <__vector_11>
      30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      40:	0c 94 b8 04 	jmp	0x970	; 0x970 <__vector_16>
      44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      50:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <__vector_20>
      54:	0c 94 a7 10 	jmp	0x214e	; 0x214e <__vector_21>
      58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      70:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__vector_28>
      74:	0c 94 d0 10 	jmp	0x21a0	; 0x21a0 <__vector_29>
      78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      80:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
      88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	63 64       	ori	r22, 0x43	; 67
      8e:	69 6e       	ori	r22, 0xE9	; 233
      90:	6f 70       	andi	r22, 0x0F	; 15
      92:	73 75       	andi	r23, 0x53	; 83
      94:	78 58       	subi	r23, 0x88	; 136
      96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d0 e4       	ldi	r29, 0x40	; 64
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	11 e0       	ldi	r17, 0x01	; 1
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e4 ec       	ldi	r30, 0xC4	; 196
      ac:	f8 e3       	ldi	r31, 0x38	; 56
      ae:	00 e0       	ldi	r16, 0x00	; 0
      b0:	0b bf       	out	0x3b, r16	; 59
      b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
      b4:	07 90       	elpm	r0, Z+
      b6:	0d 92       	st	X+, r0
      b8:	ae 3b       	cpi	r26, 0xBE	; 190
      ba:	b1 07       	cpc	r27, r17
      bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
      be:	22 e0       	ldi	r18, 0x02	; 2
      c0:	ae eb       	ldi	r26, 0xBE	; 190
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
      c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
      c8:	a8 39       	cpi	r26, 0x98	; 152
      ca:	b2 07       	cpc	r27, r18
      cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
      ce:	0e 94 54 06 	call	0xca8	; 0xca8 <main>
      d2:	0c 94 60 1c 	jmp	0x38c0	; 0x38c0 <_exit>

000000d6 <__bad_interrupt>:
      d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <is_digital_input_high>:
	io->pinRegister = 0;
	io->portRegister = 0;
	io->ddrRegister = 0;
	io->bitmask = 0;

	if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
      da:	88 30       	cpi	r24, 0x08	; 8
      dc:	48 f4       	brcc	.+18     	; 0xf0 <is_digital_input_high+0x16>
	{
		io->pinRegister = (unsigned char*)&PIND;
		io->portRegister = (unsigned char*)&PORTD;
		io->ddrRegister = (unsigned char*)&DDRD;
		io->bitmask = 1 << pin;
      de:	91 e0       	ldi	r25, 0x01	; 1
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <is_digital_input_high+0xa>
      e2:	99 0f       	add	r25, r25
      e4:	8a 95       	dec	r24
      e6:	ea f7       	brpl	.-6      	; 0xe2 <is_digital_input_high+0x8>
      e8:	89 2f       	mov	r24, r25
	io->ddrRegister = 0;
	io->bitmask = 0;

	if (pin < 8)			// pin 0 = PD0, ..., 7 = PD7
	{
		io->pinRegister = (unsigned char*)&PIND;
      ea:	e9 e2       	ldi	r30, 0x29	; 41
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	29 c0       	rjmp	.+82     	; 0x142 <is_digital_input_high+0x68>
		io->ddrRegister = (unsigned char*)&DDRD;
		io->bitmask = 1 << pin;
	}

#if defined(_ORANGUTAN_SVP) || defined(_ORANGUTAN_X2)
	else if (pin < 16)		// pin 8 = PB0, ..., 15 = PB7
      f0:	80 31       	cpi	r24, 0x10	; 16
      f2:	50 f4       	brcc	.+20     	; 0x108 <is_digital_input_high+0x2e>
	{
		io->pinRegister = (unsigned char*)&PINB;
		io->portRegister = (unsigned char*)&PORTB;
		io->ddrRegister = (unsigned char*)&DDRB;
		io->bitmask = 1 << (pin - 8);
      f4:	98 ef       	ldi	r25, 0xF8	; 248
      f6:	98 0f       	add	r25, r24
      f8:	81 e0       	ldi	r24, 0x01	; 1
      fa:	01 c0       	rjmp	.+2      	; 0xfe <is_digital_input_high+0x24>
      fc:	88 0f       	add	r24, r24
      fe:	9a 95       	dec	r25
     100:	ea f7       	brpl	.-6      	; 0xfc <is_digital_input_high+0x22>
	}

#if defined(_ORANGUTAN_SVP) || defined(_ORANGUTAN_X2)
	else if (pin < 16)		// pin 8 = PB0, ..., 15 = PB7
	{
		io->pinRegister = (unsigned char*)&PINB;
     102:	e3 e2       	ldi	r30, 0x23	; 35
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	1d c0       	rjmp	.+58     	; 0x142 <is_digital_input_high+0x68>
		io->portRegister = (unsigned char*)&PORTB;
		io->ddrRegister = (unsigned char*)&DDRB;
		io->bitmask = 1 << (pin - 8);
	}
	else if (pin < 24)		// pin 16 = PC0, ..., 23 = PC7
     108:	88 31       	cpi	r24, 0x18	; 24
     10a:	50 f4       	brcc	.+20     	; 0x120 <is_digital_input_high+0x46>
	{
		io->pinRegister = (unsigned char*)&PINC;
		io->portRegister = (unsigned char*)&PORTC;
		io->ddrRegister = (unsigned char*)&DDRC;
		io->bitmask = 1 << (pin - 16);
     10c:	90 ef       	ldi	r25, 0xF0	; 240
     10e:	98 0f       	add	r25, r24
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <is_digital_input_high+0x3c>
     114:	88 0f       	add	r24, r24
     116:	9a 95       	dec	r25
     118:	ea f7       	brpl	.-6      	; 0x114 <is_digital_input_high+0x3a>
		io->ddrRegister = (unsigned char*)&DDRB;
		io->bitmask = 1 << (pin - 8);
	}
	else if (pin < 24)		// pin 16 = PC0, ..., 23 = PC7
	{
		io->pinRegister = (unsigned char*)&PINC;
     11a:	e6 e2       	ldi	r30, 0x26	; 38
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	11 c0       	rjmp	.+34     	; 0x142 <is_digital_input_high+0x68>
		io->portRegister = (unsigned char*)&PORTC;
		io->ddrRegister = (unsigned char*)&DDRC;
		io->bitmask = 1 << (pin - 16);
	}
	else if (pin < 32)		// pin 24 = PA7, ..., 31 = PA0
     120:	80 32       	cpi	r24, 0x20	; 32
     122:	60 f4       	brcc	.+24     	; 0x13c <is_digital_input_high+0x62>
	{
		io->pinRegister = (unsigned char*)&PINA;
		io->portRegister = (unsigned char*)&PORTA;
		io->ddrRegister = (unsigned char*)&DDRA;
		io->bitmask = 1 << (31 - pin);
     124:	2f e1       	ldi	r18, 0x1F	; 31
     126:	30 e0       	ldi	r19, 0x00	; 0
     128:	28 1b       	sub	r18, r24
     12a:	31 09       	sbc	r19, r1
     12c:	81 e0       	ldi	r24, 0x01	; 1
     12e:	01 c0       	rjmp	.+2      	; 0x132 <is_digital_input_high+0x58>
     130:	88 0f       	add	r24, r24
     132:	2a 95       	dec	r18
     134:	ea f7       	brpl	.-6      	; 0x130 <is_digital_input_high+0x56>
		io->ddrRegister = (unsigned char*)&DDRC;
		io->bitmask = 1 << (pin - 16);
	}
	else if (pin < 32)		// pin 24 = PA7, ..., 31 = PA0
	{
		io->pinRegister = (unsigned char*)&PINA;
     136:	e0 e2       	ldi	r30, 0x20	; 32
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	03 c0       	rjmp	.+6      	; 0x142 <is_digital_input_high+0x68>
static inline void get_io_registers(struct IOStruct* io, unsigned char pin)
{
	io->pinRegister = 0;
	io->portRegister = 0;
	io->ddrRegister = 0;
	io->bitmask = 0;
     13c:	80 e0       	ldi	r24, 0x00	; 0
// gets a structure with pointers to the three digital I/O registers associated
// with the specified pin (DDR, PORT, and PIN) along with a bitmask with a
// 1 in the position of the specified pin and 0s everywhere else.
static inline void get_io_registers(struct IOStruct* io, unsigned char pin)
{
	io->pinRegister = 0;
     13e:	e0 e0       	ldi	r30, 0x00	; 0
     140:	f0 e0       	ldi	r31, 0x00	; 0

// low-level method for reading the value of the PIN register for an pin or set of pins
// described by an IOStruct pointer.
static inline unsigned char get_digital_input_value(struct IOStruct* ioPin)
{
	return *(ioPin->pinRegister) & ioPin->bitmask;
     142:	90 81       	ld	r25, Z
static inline unsigned char is_digital_input_high(unsigned char pin)
{
	struct IOStruct registers;
	get_io_registers(&registers, pin);
	return get_digital_input_value(&registers);
}
     144:	89 23       	and	r24, r25
     146:	08 95       	ret

00000148 <UpdatePID>:
unsigned char receive_buffer_position = 0;
unsigned char command_buffer_position = 0;

//Return speed value for motor given the new value (speed/position)
int UpdatePID(double newValue)
{
     148:	4f 92       	push	r4
     14a:	5f 92       	push	r5
     14c:	6f 92       	push	r6
     14e:	7f 92       	push	r7
     150:	8f 92       	push	r8
     152:	9f 92       	push	r9
     154:	af 92       	push	r10
     156:	bf 92       	push	r11
     158:	cf 92       	push	r12
     15a:	df 92       	push	r13
     15c:	ef 92       	push	r14
     15e:	ff 92       	push	r15
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	00 d0       	rcall	.+0      	; 0x166 <UpdatePID+0x1e>
     166:	00 d0       	rcall	.+0      	; 0x168 <UpdatePID+0x20>
     168:	cd b7       	in	r28, 0x3d	; 61
     16a:	de b7       	in	r29, 0x3e	; 62
     16c:	6b 01       	movw	r12, r22
     16e:	7c 01       	movw	r14, r24
	double pTerm, dTerm, iTerm;
	
	pTerm = globalPID.pGain * (globalPID.desiredValue - newValue); // calculate the proportional term
     170:	60 91 5f 02 	lds	r22, 0x025F
     174:	70 91 60 02 	lds	r23, 0x0260
     178:	88 27       	eor	r24, r24
     17a:	77 fd       	sbrc	r23, 7
     17c:	80 95       	com	r24
     17e:	98 2f       	mov	r25, r24
     180:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     184:	a7 01       	movw	r20, r14
     186:	96 01       	movw	r18, r12
     188:	0e 94 c0 11 	call	0x2380	; 0x2380 <__subsf3>
     18c:	4b 01       	movw	r8, r22
     18e:	5c 01       	movw	r10, r24
     190:	20 91 57 02 	lds	r18, 0x0257
     194:	30 91 58 02 	lds	r19, 0x0258
     198:	40 91 59 02 	lds	r20, 0x0259
     19c:	50 91 5a 02 	lds	r21, 0x025A
     1a0:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     1a4:	69 83       	std	Y+1, r22	; 0x01
     1a6:	7a 83       	std	Y+2, r23	; 0x02
     1a8:	8b 83       	std	Y+3, r24	; 0x03
     1aa:	9c 83       	std	Y+4, r25	; 0x04
	
	globalPID.iState += (globalPID.desiredValue - newValue);
     1ac:	20 91 47 02 	lds	r18, 0x0247
     1b0:	30 91 48 02 	lds	r19, 0x0248
     1b4:	40 91 49 02 	lds	r20, 0x0249
     1b8:	50 91 4a 02 	lds	r21, 0x024A
     1bc:	c5 01       	movw	r24, r10
     1be:	b4 01       	movw	r22, r8
     1c0:	0e 94 c1 11 	call	0x2382	; 0x2382 <__addsf3>
     1c4:	4b 01       	movw	r8, r22
     1c6:	5c 01       	movw	r10, r24
     1c8:	60 93 47 02 	sts	0x0247, r22
     1cc:	70 93 48 02 	sts	0x0248, r23
     1d0:	80 93 49 02 	sts	0x0249, r24
     1d4:	90 93 4a 02 	sts	0x024A, r25
	if (globalPID.iState > globalPID.iMax) globalPID.iState = globalPID.iMax;
     1d8:	40 90 4b 02 	lds	r4, 0x024B
     1dc:	50 90 4c 02 	lds	r5, 0x024C
     1e0:	60 90 4d 02 	lds	r6, 0x024D
     1e4:	70 90 4e 02 	lds	r7, 0x024E
     1e8:	a3 01       	movw	r20, r6
     1ea:	92 01       	movw	r18, r4
     1ec:	0e 94 74 13 	call	0x26e8	; 0x26e8 <__gesf2>
     1f0:	18 16       	cp	r1, r24
     1f2:	84 f0       	brlt	.+32     	; 0x214 <UpdatePID+0xcc>
	else if (globalPID.iState < globalPID.iMin) globalPID.iState = globalPID.iMin;
     1f4:	40 90 4f 02 	lds	r4, 0x024F
     1f8:	50 90 50 02 	lds	r5, 0x0250
     1fc:	60 90 51 02 	lds	r6, 0x0251
     200:	70 90 52 02 	lds	r7, 0x0252
     204:	a3 01       	movw	r20, r6
     206:	92 01       	movw	r18, r4
     208:	c5 01       	movw	r24, r10
     20a:	b4 01       	movw	r22, r8
     20c:	0e 94 25 12 	call	0x244a	; 0x244a <__cmpsf2>
     210:	87 ff       	sbrs	r24, 7
     212:	08 c0       	rjmp	.+16     	; 0x224 <UpdatePID+0xdc>
     214:	40 92 47 02 	sts	0x0247, r4
     218:	50 92 48 02 	sts	0x0248, r5
     21c:	60 92 49 02 	sts	0x0249, r6
     220:	70 92 4a 02 	sts	0x024A, r7
	iTerm = globalPID.iGain * globalPID.iState; // calculate the integral term
     224:	20 91 47 02 	lds	r18, 0x0247
     228:	30 91 48 02 	lds	r19, 0x0248
     22c:	40 91 49 02 	lds	r20, 0x0249
     230:	50 91 4a 02 	lds	r21, 0x024A
     234:	60 91 53 02 	lds	r22, 0x0253
     238:	70 91 54 02 	lds	r23, 0x0254
     23c:	80 91 55 02 	lds	r24, 0x0255
     240:	90 91 56 02 	lds	r25, 0x0256
     244:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     248:	4b 01       	movw	r8, r22
     24a:	5c 01       	movw	r10, r24
	
	dTerm = globalPID.dGain * (globalPID.dState - newValue);  //calculate the d term
     24c:	a7 01       	movw	r20, r14
     24e:	96 01       	movw	r18, r12
     250:	60 91 43 02 	lds	r22, 0x0243
     254:	70 91 44 02 	lds	r23, 0x0244
     258:	80 91 45 02 	lds	r24, 0x0245
     25c:	90 91 46 02 	lds	r25, 0x0246
     260:	0e 94 c0 11 	call	0x2380	; 0x2380 <__subsf3>
     264:	20 91 5b 02 	lds	r18, 0x025B
     268:	30 91 5c 02 	lds	r19, 0x025C
     26c:	40 91 5d 02 	lds	r20, 0x025D
     270:	50 91 5e 02 	lds	r21, 0x025E
     274:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     278:	9b 01       	movw	r18, r22
     27a:	ac 01       	movw	r20, r24
	globalPID.dState = newValue;
     27c:	c0 92 43 02 	sts	0x0243, r12
     280:	d0 92 44 02 	sts	0x0244, r13
     284:	e0 92 45 02 	sts	0x0245, r14
     288:	f0 92 46 02 	sts	0x0246, r15
	
	int torque = (int)(pTerm + dTerm + iTerm);
     28c:	69 81       	ldd	r22, Y+1	; 0x01
     28e:	7a 81       	ldd	r23, Y+2	; 0x02
     290:	8b 81       	ldd	r24, Y+3	; 0x03
     292:	9c 81       	ldd	r25, Y+4	; 0x04
     294:	0e 94 c1 11 	call	0x2382	; 0x2382 <__addsf3>
     298:	a5 01       	movw	r20, r10
     29a:	94 01       	movw	r18, r8
     29c:	0e 94 c1 11 	call	0x2382	; 0x2382 <__addsf3>
     2a0:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     2a4:	9b 01       	movw	r18, r22
	//torque = -torque;
	
	if(globalPID.desireSpeed)
     2a6:	40 91 61 02 	lds	r20, 0x0261
     2aa:	44 23       	and	r20, r20
     2ac:	a1 f0       	breq	.+40     	; 0x2d6 <UpdatePID+0x18e>
	{
		torque = (int)((double)torque / encodeTorquePerSecond); //(counts / second / torque)
     2ae:	88 27       	eor	r24, r24
     2b0:	77 fd       	sbrc	r23, 7
     2b2:	80 95       	com	r24
     2b4:	98 2f       	mov	r25, r24
     2b6:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     2ba:	23 e3       	ldi	r18, 0x33	; 51
     2bc:	33 e3       	ldi	r19, 0x33	; 51
     2be:	4f ec       	ldi	r20, 0xCF	; 207
     2c0:	51 e4       	ldi	r21, 0x41	; 65
     2c2:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     2c6:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
		torque += globalPID.lastValue;
     2ca:	20 91 62 02 	lds	r18, 0x0262
     2ce:	30 91 63 02 	lds	r19, 0x0263
     2d2:	26 0f       	add	r18, r22
     2d4:	37 1f       	adc	r19, r23
	}
	
	torque = torque > 255 ? 255 : (torque < -255 ? -255 : torque);
     2d6:	c9 01       	movw	r24, r18
     2d8:	81 30       	cpi	r24, 0x01	; 1
     2da:	2f ef       	ldi	r18, 0xFF	; 255
     2dc:	92 07       	cpc	r25, r18
     2de:	14 f4       	brge	.+4      	; 0x2e4 <UpdatePID+0x19c>
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	9f ef       	ldi	r25, 0xFF	; 255
     2e4:	8f 3f       	cpi	r24, 0xFF	; 255
     2e6:	91 05       	cpc	r25, r1
     2e8:	19 f0       	breq	.+6      	; 0x2f0 <UpdatePID+0x1a8>
     2ea:	14 f0       	brlt	.+4      	; 0x2f0 <UpdatePID+0x1a8>
     2ec:	8f ef       	ldi	r24, 0xFF	; 255
     2ee:	90 e0       	ldi	r25, 0x00	; 0
	
	globalPID.lastValue = torque;
     2f0:	90 93 63 02 	sts	0x0263, r25
     2f4:	80 93 62 02 	sts	0x0262, r24
	
	return torque;
}
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	ff 90       	pop	r15
     306:	ef 90       	pop	r14
     308:	df 90       	pop	r13
     30a:	cf 90       	pop	r12
     30c:	bf 90       	pop	r11
     30e:	af 90       	pop	r10
     310:	9f 90       	pop	r9
     312:	8f 90       	pop	r8
     314:	7f 90       	pop	r7
     316:	6f 90       	pop	r6
     318:	5f 90       	pop	r5
     31a:	4f 90       	pop	r4
     31c:	08 95       	ret

0000031e <setMotor>:
//Set Motor 2 to given speed/direction
void setMotor(int motorSpeed)
{
	unsigned char reverse = 0;

	if (motorSpeed < 0)
     31e:	97 ff       	sbrs	r25, 7
     320:	05 c0       	rjmp	.+10     	; 0x32c <setMotor+0xe>
	{
		motorSpeed = -motorSpeed;	// make speed a positive quantity
     322:	91 95       	neg	r25
     324:	81 95       	neg	r24
     326:	91 09       	sbc	r25, r1
		reverse = 1;	// preserve the direction
     328:	21 e0       	ldi	r18, 0x01	; 1
     32a:	01 c0       	rjmp	.+2      	; 0x32e <setMotor+0x10>
}

//Set Motor 2 to given speed/direction
void setMotor(int motorSpeed)
{
	unsigned char reverse = 0;
     32c:	20 e0       	ldi	r18, 0x00	; 0
	{
		motorSpeed = -motorSpeed;	// make speed a positive quantity
		reverse = 1;	// preserve the direction
	}
	
	OCR2B = motorSpeed;
     32e:	80 93 b4 00 	sts	0x00B4, r24
	
	if (motorSpeed > 0xFF)	// 0xFF = 255
     332:	89 2b       	or	r24, r25
     334:	31 f4       	brne	.+12     	; 0x342 <setMotor+0x24>

	if (motorSpeed == 0)
	{
		// Achieve a 0% duty cycle on the PWM pin by driving it low,
		// disconnecting it from Timer2
		TCCR2A &= ~(1<<COM2B1);
     336:	80 91 b0 00 	lds	r24, 0x00B0
     33a:	8f 7d       	andi	r24, 0xDF	; 223
     33c:	80 93 b0 00 	sts	0x00B0, r24
     340:	08 95       	ret
	}
	
	else
	{
		// Achieve a variable duty cycle on the PWM pin using Timer2.
		TCCR2A |= 1<<COM2B1;
     342:	80 91 b0 00 	lds	r24, 0x00B0
     346:	80 62       	ori	r24, 0x20	; 32
     348:	80 93 b0 00 	sts	0x00B0, r24

		if (reverse)
     34c:	22 23       	and	r18, r18
     34e:	11 f0       	breq	.+4      	; 0x354 <setMotor+0x36>
		{
			PORTC |= 0x40;
     350:	46 9a       	sbi	0x08, 6	; 8
     352:	08 95       	ret
		}
		else
		{
			PORTC &= 0xBF;
     354:	46 98       	cbi	0x08, 6	; 8
     356:	08 95       	ret

00000358 <initSpeedPID>:
}

//Init speed Pid gain values
void initSpeedPID()
{
	globalPID.dGain = 0.3;
     358:	8a e9       	ldi	r24, 0x9A	; 154
     35a:	99 e9       	ldi	r25, 0x99	; 153
     35c:	a9 e9       	ldi	r26, 0x99	; 153
     35e:	be e3       	ldi	r27, 0x3E	; 62
     360:	80 93 5b 02 	sts	0x025B, r24
     364:	90 93 5c 02 	sts	0x025C, r25
     368:	a0 93 5d 02 	sts	0x025D, r26
     36c:	b0 93 5e 02 	sts	0x025E, r27
	globalPID.pGain = 0.3;
     370:	80 93 57 02 	sts	0x0257, r24
     374:	90 93 58 02 	sts	0x0258, r25
     378:	a0 93 59 02 	sts	0x0259, r26
     37c:	b0 93 5a 02 	sts	0x025A, r27
	globalPID.iGain = 0.01;
     380:	8a e0       	ldi	r24, 0x0A	; 10
     382:	97 ed       	ldi	r25, 0xD7	; 215
     384:	a3 e2       	ldi	r26, 0x23	; 35
     386:	bc e3       	ldi	r27, 0x3C	; 60
     388:	80 93 53 02 	sts	0x0253, r24
     38c:	90 93 54 02 	sts	0x0254, r25
     390:	a0 93 55 02 	sts	0x0255, r26
     394:	b0 93 56 02 	sts	0x0256, r27
	globalPID.desireSpeed = true;
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	80 93 61 02 	sts	0x0261, r24
     39e:	08 95       	ret

000003a0 <initPositionPID>:
}

//Init position Pid gain values
void initPositionPID()
{
	globalPID.dGain = 0.3;
     3a0:	8a e9       	ldi	r24, 0x9A	; 154
     3a2:	99 e9       	ldi	r25, 0x99	; 153
     3a4:	a9 e9       	ldi	r26, 0x99	; 153
     3a6:	be e3       	ldi	r27, 0x3E	; 62
     3a8:	80 93 5b 02 	sts	0x025B, r24
     3ac:	90 93 5c 02 	sts	0x025C, r25
     3b0:	a0 93 5d 02 	sts	0x025D, r26
     3b4:	b0 93 5e 02 	sts	0x025E, r27
	globalPID.pGain = 0.2;
     3b8:	8d ec       	ldi	r24, 0xCD	; 205
     3ba:	9c ec       	ldi	r25, 0xCC	; 204
     3bc:	ac e4       	ldi	r26, 0x4C	; 76
     3be:	be e3       	ldi	r27, 0x3E	; 62
     3c0:	80 93 57 02 	sts	0x0257, r24
     3c4:	90 93 58 02 	sts	0x0258, r25
     3c8:	a0 93 59 02 	sts	0x0259, r26
     3cc:	b0 93 5a 02 	sts	0x025A, r27
	globalPID.iGain = 0.01;
     3d0:	8a e0       	ldi	r24, 0x0A	; 10
     3d2:	97 ed       	ldi	r25, 0xD7	; 215
     3d4:	a3 e2       	ldi	r26, 0x23	; 35
     3d6:	bc e3       	ldi	r27, 0x3C	; 60
     3d8:	80 93 53 02 	sts	0x0253, r24
     3dc:	90 93 54 02 	sts	0x0254, r25
     3e0:	a0 93 55 02 	sts	0x0255, r26
     3e4:	b0 93 56 02 	sts	0x0256, r27
	globalPID.desireSpeed = false;
     3e8:	10 92 61 02 	sts	0x0261, r1
     3ec:	08 95       	ret

000003ee <initInterpolator>:
}

//initInterpolator
void initInterpolator()
{
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
	initPositionPID();
     3f2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <initPositionPID>
	
	Interpolator a;
	a.interType = 0;
	a.interValue = (encode360 * ( 0.25 ));
	myInterpolator[0] = calloc( 1, sizeof(Interpolator));
     3f6:	64 e0       	ldi	r22, 0x04	; 4
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	81 e0       	ldi	r24, 0x01	; 1
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
     402:	90 93 85 02 	sts	0x0285, r25
     406:	80 93 84 02 	sts	0x0284, r24
	memcpy( myInterpolator[0], &a, sizeof(Interpolator));
     40a:	fc 01       	movw	r30, r24
     40c:	11 82       	std	Z+1, r1	; 0x01
     40e:	10 82       	st	Z, r1
     410:	22 e3       	ldi	r18, 0x32	; 50
     412:	32 e0       	ldi	r19, 0x02	; 2
     414:	33 83       	std	Z+3, r19	; 0x03
     416:	22 83       	std	Z+2, r18	; 0x02

	a.interType = 1;
	a.interValue = 50000;
	myInterpolator[1] = calloc( 1, sizeof(Interpolator));
     418:	64 e0       	ldi	r22, 0x04	; 4
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
     424:	90 93 87 02 	sts	0x0287, r25
     428:	80 93 86 02 	sts	0x0286, r24
	memcpy( myInterpolator[1], &a, sizeof(Interpolator));
     42c:	c1 e0       	ldi	r28, 0x01	; 1
     42e:	d0 e0       	ldi	r29, 0x00	; 0
     430:	fc 01       	movw	r30, r24
     432:	d1 83       	std	Z+1, r29	; 0x01
     434:	c0 83       	st	Z, r28
     436:	20 e5       	ldi	r18, 0x50	; 80
     438:	33 ec       	ldi	r19, 0xC3	; 195
     43a:	33 83       	std	Z+3, r19	; 0x03
     43c:	22 83       	std	Z+2, r18	; 0x02
	
	a.interType = 0;
	a.interValue = (encode360 * ( -1 ));
	myInterpolator[2] = calloc( 1, sizeof(Interpolator));
     43e:	64 e0       	ldi	r22, 0x04	; 4
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
     44a:	90 93 89 02 	sts	0x0289, r25
     44e:	80 93 88 02 	sts	0x0288, r24
	memcpy(myInterpolator[2], &a, sizeof(Interpolator));
     452:	fc 01       	movw	r30, r24
     454:	11 82       	std	Z+1, r1	; 0x01
     456:	10 82       	st	Z, r1
     458:	27 e3       	ldi	r18, 0x37	; 55
     45a:	37 ef       	ldi	r19, 0xF7	; 247
     45c:	33 83       	std	Z+3, r19	; 0x03
     45e:	22 83       	std	Z+2, r18	; 0x02
	
	a.interType = 1;
	a.interValue = 500;
	myInterpolator[3] = calloc( 1, sizeof(Interpolator));
     460:	64 e0       	ldi	r22, 0x04	; 4
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
     46c:	90 93 8b 02 	sts	0x028B, r25
     470:	80 93 8a 02 	sts	0x028A, r24
	memcpy(myInterpolator[3], &a, sizeof(Interpolator));
     474:	fc 01       	movw	r30, r24
     476:	d1 83       	std	Z+1, r29	; 0x01
     478:	c0 83       	st	Z, r28
     47a:	24 ef       	ldi	r18, 0xF4	; 244
     47c:	31 e0       	ldi	r19, 0x01	; 1
     47e:	33 83       	std	Z+3, r19	; 0x03
     480:	22 83       	std	Z+2, r18	; 0x02
	
	a.interType = 0;
	a.interValue = (encode360 * ( 0.0139 ));
	myInterpolator[4] = calloc( 1, sizeof(Interpolator));
     482:	64 e0       	ldi	r22, 0x04	; 4
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
     48e:	90 93 8d 02 	sts	0x028D, r25
     492:	80 93 8c 02 	sts	0x028C, r24
	memcpy(myInterpolator[4], &a, sizeof(Interpolator));
     496:	fc 01       	movw	r30, r24
     498:	11 82       	std	Z+1, r1	; 0x01
     49a:	10 82       	st	Z, r1
     49c:	2f e1       	ldi	r18, 0x1F	; 31
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	33 83       	std	Z+3, r19	; 0x03
     4a2:	22 83       	std	Z+2, r18	; 0x02
}
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <wait_for_sending_to_finish>:
// finish transmitting on USB_COMM.  We must call this before modifying
// send_buffer or trying to send more bytes, because otherwise we could
// corrupt an existing transmission.
void wait_for_sending_to_finish()
{
	while(!serial_send_buffer_empty(USB_COMM))
     4aa:	82 e0       	ldi	r24, 0x02	; 2
     4ac:	0e 94 98 0c 	call	0x1930	; 0x1930 <serial_send_buffer_empty>
     4b0:	81 11       	cpse	r24, r1
     4b2:	03 c0       	rjmp	.+6      	; 0x4ba <wait_for_sending_to_finish+0x10>
	serial_check();		// USB_COMM port is always in SERIAL_CHECK mode
     4b4:	0e 94 6e 10 	call	0x20dc	; 0x20dc <serial_check>
     4b8:	f8 cf       	rjmp	.-16     	; 0x4aa <wait_for_sending_to_finish>
}
     4ba:	08 95       	ret

000004bc <print_usb>:

// A generic function for whenever you want to print to your serial comm window.
// Provide a string and the length of that string. My serial comm likes "\r\n" at
// the end of each string (be sure to include in length) for proper linefeed.
void print_usb( char *buffer, int n ) {
     4bc:	46 2f       	mov	r20, r22
	serial_send( USB_COMM, buffer, n );
     4be:	bc 01       	movw	r22, r24
     4c0:	82 e0       	ldi	r24, 0x02	; 2
     4c2:	0e 94 a4 10 	call	0x2148	; 0x2148 <serial_send>
	wait_for_sending_to_finish();
     4c6:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <wait_for_sending_to_finish>

000004ca <process_received_byte>:
}

// process_received_byte: Responds to a byte that has been received on
// USB_COMM.
void process_received_byte(char byte)
{
     4ca:	4f 92       	push	r4
     4cc:	5f 92       	push	r5
     4ce:	6f 92       	push	r6
     4d0:	7f 92       	push	r7
     4d2:	af 92       	push	r10
     4d4:	bf 92       	push	r11
     4d6:	cf 92       	push	r12
     4d8:	df 92       	push	r13
     4da:	ef 92       	push	r14
     4dc:	ff 92       	push	r15
     4de:	0f 93       	push	r16
     4e0:	1f 93       	push	r17
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	cd b7       	in	r28, 0x3d	; 61
     4e8:	de b7       	in	r29, 0x3e	; 62
     4ea:	c1 50       	subi	r28, 0x01	; 1
     4ec:	d2 40       	sbci	r29, 0x02	; 2
     4ee:	0f b6       	in	r0, 0x3f	; 63
     4f0:	f8 94       	cli
     4f2:	de bf       	out	0x3e, r29	; 62
     4f4:	0f be       	out	0x3f, r0	; 63
     4f6:	cd bf       	out	0x3d, r28	; 61
	//put byte in command buffer
	command_buffer[command_buffer_position] = byte;
     4f8:	90 91 db 01 	lds	r25, 0x01DB
     4fc:	e9 2f       	mov	r30, r25
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	24 e6       	ldi	r18, 0x64	; 100
     502:	32 e0       	ldi	r19, 0x02	; 2
     504:	ec 59       	subi	r30, 0x9C	; 156
     506:	fd 4f       	sbci	r31, 0xFD	; 253
     508:	80 83       	st	Z, r24
	command_buffer_position++;
     50a:	9f 5f       	subi	r25, 0xFF	; 255
     50c:	90 93 db 01 	sts	0x01DB, r25
	
	//if \n then process menu
	if(byte == 0x0D)
     510:	8d 30       	cpi	r24, 0x0D	; 13
     512:	09 f0       	breq	.+2      	; 0x516 <process_received_byte+0x4c>
     514:	fe c1       	rjmp	.+1020   	; 0x912 <process_received_byte+0x448>
		char tempBuffer[255];
		char sendBuffer[255];
		char op_char;
		int value;
		int parsed;
		parsed = sscanf(command_buffer, "%c %d", &op_char, &value);
     516:	8e 01       	movw	r16, r28
     518:	01 50       	subi	r16, 0x01	; 1
     51a:	1e 4f       	sbci	r17, 0xFE	; 254
     51c:	1f 93       	push	r17
     51e:	0f 93       	push	r16
     520:	7e 01       	movw	r14, r28
     522:	8f ef       	ldi	r24, 0xFF	; 255
     524:	e8 1a       	sub	r14, r24
     526:	8d ef       	ldi	r24, 0xFD	; 253
     528:	f8 0a       	sbc	r15, r24
     52a:	ff 92       	push	r15
     52c:	ef 92       	push	r14
     52e:	86 e2       	ldi	r24, 0x26	; 38
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	9f 93       	push	r25
     534:	8f 93       	push	r24
     536:	3f 93       	push	r19
     538:	2f 93       	push	r18
     53a:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <sscanf>
		
		int length = sprintf( tempBuffer, "Op:%c V:%d\r\n", op_char, value );
     53e:	f8 01       	movw	r30, r16
     540:	81 81       	ldd	r24, Z+1	; 0x01
     542:	8f 93       	push	r24
     544:	80 81       	ld	r24, Z
     546:	8f 93       	push	r24
     548:	f7 01       	movw	r30, r14
     54a:	80 81       	ld	r24, Z
     54c:	1f 92       	push	r1
     54e:	8f 93       	push	r24
     550:	8c e2       	ldi	r24, 0x2C	; 44
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	9f 93       	push	r25
     556:	8f 93       	push	r24
     558:	6e 01       	movw	r12, r28
     55a:	d3 94       	inc	r13
     55c:	df 92       	push	r13
     55e:	cf 92       	push	r12
     560:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
		print_usb( tempBuffer, length );
     564:	bc 01       	movw	r22, r24
     566:	c6 01       	movw	r24, r12
     568:	0e 94 5e 02 	call	0x4bc	; 0x4bc <print_usb>
		
		switch(op_char)
     56c:	0f b6       	in	r0, 0x3f	; 63
     56e:	f8 94       	cli
     570:	de bf       	out	0x3e, r29	; 62
     572:	0f be       	out	0x3f, r0	; 63
     574:	cd bf       	out	0x3d, r28	; 61
     576:	f7 01       	movw	r30, r14
     578:	80 81       	ld	r24, Z
     57a:	86 35       	cpi	r24, 0x56	; 86
     57c:	09 f4       	brne	.+2      	; 0x580 <process_received_byte+0xb6>
     57e:	ed c0       	rjmp	.+474    	; 0x75a <process_received_byte+0x290>
     580:	98 f5       	brcc	.+102    	; 0x5e8 <process_received_byte+0x11e>
     582:	80 35       	cpi	r24, 0x50	; 80
     584:	09 f4       	brne	.+2      	; 0x588 <process_received_byte+0xbe>
     586:	90 c0       	rjmp	.+288    	; 0x6a8 <process_received_byte+0x1de>
     588:	28 f5       	brcc	.+74     	; 0x5d4 <process_received_byte+0x10a>
     58a:	89 34       	cpi	r24, 0x49	; 73
     58c:	09 f4       	brne	.+2      	; 0x590 <process_received_byte+0xc6>
     58e:	78 c0       	rjmp	.+240    	; 0x680 <process_received_byte+0x1b6>
     590:	8c 34       	cpi	r24, 0x4C	; 76
     592:	09 f4       	brne	.+2      	; 0x596 <process_received_byte+0xcc>
     594:	a9 c1       	rjmp	.+850    	; 0x8e8 <process_received_byte+0x41e>
     596:	84 34       	cpi	r24, 0x44	; 68
     598:	09 f0       	breq	.+2      	; 0x59c <process_received_byte+0xd2>
     59a:	ad c1       	rjmp	.+858    	; 0x8f6 <process_received_byte+0x42c>
			globalPID.pGain -= ((double) value)/(double)10;;
			break;

			//Increase/Decrease dGain
			case 'D':
			globalPID.dGain += ((double) value)/10;;
     59c:	f8 01       	movw	r30, r16
     59e:	60 81       	ld	r22, Z
     5a0:	71 81       	ldd	r23, Z+1	; 0x01
     5a2:	88 27       	eor	r24, r24
     5a4:	77 fd       	sbrc	r23, 7
     5a6:	80 95       	com	r24
     5a8:	98 2f       	mov	r25, r24
     5aa:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	40 e2       	ldi	r20, 0x20	; 32
     5b4:	51 e4       	ldi	r21, 0x41	; 65
     5b6:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	60 91 5b 02 	lds	r22, 0x025B
     5c2:	70 91 5c 02 	lds	r23, 0x025C
     5c6:	80 91 5d 02 	lds	r24, 0x025D
     5ca:	90 91 5e 02 	lds	r25, 0x025E
     5ce:	0e 94 c1 11 	call	0x2382	; 0x2382 <__addsf3>
     5d2:	aa c0       	rjmp	.+340    	; 0x728 <process_received_byte+0x25e>
		parsed = sscanf(command_buffer, "%c %d", &op_char, &value);
		
		int length = sprintf( tempBuffer, "Op:%c V:%d\r\n", op_char, value );
		print_usb( tempBuffer, length );
		
		switch(op_char)
     5d4:	83 35       	cpi	r24, 0x53	; 83
     5d6:	09 f4       	brne	.+2      	; 0x5da <process_received_byte+0x110>
     5d8:	4d c0       	rjmp	.+154    	; 0x674 <process_received_byte+0x1aa>
     5da:	84 35       	cpi	r24, 0x54	; 84
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <process_received_byte+0x116>
     5de:	b6 c0       	rjmp	.+364    	; 0x74c <process_received_byte+0x282>
     5e0:	82 35       	cpi	r24, 0x52	; 82
     5e2:	09 f0       	breq	.+2      	; 0x5e6 <process_received_byte+0x11c>
     5e4:	88 c1       	rjmp	.+784    	; 0x8f6 <process_received_byte+0x42c>
     5e6:	36 c0       	rjmp	.+108    	; 0x654 <process_received_byte+0x18a>
     5e8:	80 37       	cpi	r24, 0x70	; 112
     5ea:	09 f4       	brne	.+2      	; 0x5ee <process_received_byte+0x124>
     5ec:	79 c0       	rjmp	.+242    	; 0x6e0 <process_received_byte+0x216>
     5ee:	28 f5       	brcc	.+74     	; 0x63a <process_received_byte+0x170>
     5f0:	89 36       	cpi	r24, 0x69	; 105
     5f2:	09 f4       	brne	.+2      	; 0x5f6 <process_received_byte+0x12c>
     5f4:	45 c0       	rjmp	.+138    	; 0x680 <process_received_byte+0x1b6>
     5f6:	8c 36       	cpi	r24, 0x6C	; 108
     5f8:	09 f4       	brne	.+2      	; 0x5fc <process_received_byte+0x132>
     5fa:	76 c1       	rjmp	.+748    	; 0x8e8 <process_received_byte+0x41e>
     5fc:	84 36       	cpi	r24, 0x64	; 100
     5fe:	09 f0       	breq	.+2      	; 0x602 <process_received_byte+0x138>
     600:	7a c1       	rjmp	.+756    	; 0x8f6 <process_received_byte+0x42c>
			case 'D':
			globalPID.dGain += ((double) value)/10;;
			break;
			
			case 'd':
			globalPID.dGain -= ((double) value)/10;;
     602:	f8 01       	movw	r30, r16
     604:	60 81       	ld	r22, Z
     606:	71 81       	ldd	r23, Z+1	; 0x01
     608:	88 27       	eor	r24, r24
     60a:	77 fd       	sbrc	r23, 7
     60c:	80 95       	com	r24
     60e:	98 2f       	mov	r25, r24
     610:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	40 e2       	ldi	r20, 0x20	; 32
     61a:	51 e4       	ldi	r21, 0x41	; 65
     61c:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     620:	9b 01       	movw	r18, r22
     622:	ac 01       	movw	r20, r24
     624:	60 91 5b 02 	lds	r22, 0x025B
     628:	70 91 5c 02 	lds	r23, 0x025C
     62c:	80 91 5d 02 	lds	r24, 0x025D
     630:	90 91 5e 02 	lds	r25, 0x025E
     634:	0e 94 c0 11 	call	0x2380	; 0x2380 <__subsf3>
     638:	77 c0       	rjmp	.+238    	; 0x728 <process_received_byte+0x25e>
		parsed = sscanf(command_buffer, "%c %d", &op_char, &value);
		
		int length = sprintf( tempBuffer, "Op:%c V:%d\r\n", op_char, value );
		print_usb( tempBuffer, length );
		
		switch(op_char)
     63a:	83 37       	cpi	r24, 0x73	; 115
     63c:	d9 f0       	breq	.+54     	; 0x674 <process_received_byte+0x1aa>
     63e:	18 f4       	brcc	.+6      	; 0x646 <process_received_byte+0x17c>
     640:	82 37       	cpi	r24, 0x72	; 114
     642:	41 f0       	breq	.+16     	; 0x654 <process_received_byte+0x18a>
     644:	58 c1       	rjmp	.+688    	; 0x8f6 <process_received_byte+0x42c>
     646:	84 37       	cpi	r24, 0x74	; 116
     648:	09 f4       	brne	.+2      	; 0x64c <process_received_byte+0x182>
     64a:	77 c0       	rjmp	.+238    	; 0x73a <process_received_byte+0x270>
     64c:	86 37       	cpi	r24, 0x76	; 118
     64e:	09 f4       	brne	.+2      	; 0x652 <process_received_byte+0x188>
     650:	84 c0       	rjmp	.+264    	; 0x75a <process_received_byte+0x290>
     652:	51 c1       	rjmp	.+674    	; 0x8f6 <process_received_byte+0x42c>
		{
			//Set desired reference position
			case 'R':
			case 'r':
			initPositionPID();			
     654:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <initPositionPID>
			globalPID.desireSpeed = false;
     658:	10 92 61 02 	sts	0x0261, r1
			globalPID.desiredValue = value;
     65c:	f8 01       	movw	r30, r16
     65e:	80 81       	ld	r24, Z
     660:	91 81       	ldd	r25, Z+1	; 0x01
     662:	90 93 60 02 	sts	0x0260, r25
     666:	80 93 5f 02 	sts	0x025F, r24
			isInter = false;
     66a:	10 92 e5 01 	sts	0x01E5, r1
     66e:	e4 e6       	ldi	r30, 0x64	; 100
     670:	f2 e0       	ldi	r31, 0x02	; 2
     672:	48 c1       	rjmp	.+656    	; 0x904 <process_received_byte+0x43a>
			break;
			
			//Set desired reference speed
			case 'S':
			case 's':
			initSpeedPID();
     674:	0e 94 ac 01 	call	0x358	; 0x358 <initSpeedPID>
			globalPID.desireSpeed = true;
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	80 93 61 02 	sts	0x0261, r24
     67e:	ee cf       	rjmp	.-36     	; 0x65c <process_received_byte+0x192>
			isInter = false;
			break;
			
			case 'I':
			case 'i':
			initInterpolator();
     680:	0e 94 f7 01 	call	0x3ee	; 0x3ee <initInterpolator>
			isInter = true;
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	80 93 e5 01 	sts	0x01E5, r24
			currentInter = 0;
     68a:	10 92 22 02 	sts	0x0222, r1
     68e:	10 92 21 02 	sts	0x0221, r1
			globalPID.desiredValue = myInterpolator[currentInter]->interValue;
     692:	e0 91 84 02 	lds	r30, 0x0284
     696:	f0 91 85 02 	lds	r31, 0x0285
     69a:	82 81       	ldd	r24, Z+2	; 0x02
     69c:	93 81       	ldd	r25, Z+3	; 0x03
     69e:	90 93 60 02 	sts	0x0260, r25
     6a2:	80 93 5f 02 	sts	0x025F, r24
			break;
     6a6:	e3 cf       	rjmp	.-58     	; 0x66e <process_received_byte+0x1a4>

			//Increase/Decrease pGain
			case 'P':
			globalPID.pGain +=((double) value)/(double)10;
     6a8:	f8 01       	movw	r30, r16
     6aa:	60 81       	ld	r22, Z
     6ac:	71 81       	ldd	r23, Z+1	; 0x01
     6ae:	88 27       	eor	r24, r24
     6b0:	77 fd       	sbrc	r23, 7
     6b2:	80 95       	com	r24
     6b4:	98 2f       	mov	r25, r24
     6b6:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	40 e2       	ldi	r20, 0x20	; 32
     6c0:	51 e4       	ldi	r21, 0x41	; 65
     6c2:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     6c6:	9b 01       	movw	r18, r22
     6c8:	ac 01       	movw	r20, r24
     6ca:	60 91 57 02 	lds	r22, 0x0257
     6ce:	70 91 58 02 	lds	r23, 0x0258
     6d2:	80 91 59 02 	lds	r24, 0x0259
     6d6:	90 91 5a 02 	lds	r25, 0x025A
     6da:	0e 94 c1 11 	call	0x2382	; 0x2382 <__addsf3>
     6de:	1b c0       	rjmp	.+54     	; 0x716 <process_received_byte+0x24c>
			break;
			
			case 'p':
			globalPID.pGain -= ((double) value)/(double)10;;
     6e0:	f8 01       	movw	r30, r16
     6e2:	60 81       	ld	r22, Z
     6e4:	71 81       	ldd	r23, Z+1	; 0x01
     6e6:	88 27       	eor	r24, r24
     6e8:	77 fd       	sbrc	r23, 7
     6ea:	80 95       	com	r24
     6ec:	98 2f       	mov	r25, r24
     6ee:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	40 e2       	ldi	r20, 0x20	; 32
     6f8:	51 e4       	ldi	r21, 0x41	; 65
     6fa:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     6fe:	9b 01       	movw	r18, r22
     700:	ac 01       	movw	r20, r24
     702:	60 91 57 02 	lds	r22, 0x0257
     706:	70 91 58 02 	lds	r23, 0x0258
     70a:	80 91 59 02 	lds	r24, 0x0259
     70e:	90 91 5a 02 	lds	r25, 0x025A
     712:	0e 94 c0 11 	call	0x2380	; 0x2380 <__subsf3>
     716:	60 93 57 02 	sts	0x0257, r22
     71a:	70 93 58 02 	sts	0x0258, r23
     71e:	80 93 59 02 	sts	0x0259, r24
     722:	90 93 5a 02 	sts	0x025A, r25
			break;
     726:	a3 cf       	rjmp	.-186    	; 0x66e <process_received_byte+0x1a4>
			case 'D':
			globalPID.dGain += ((double) value)/10;;
			break;
			
			case 'd':
			globalPID.dGain -= ((double) value)/10;;
     728:	60 93 5b 02 	sts	0x025B, r22
     72c:	70 93 5c 02 	sts	0x025C, r23
     730:	80 93 5d 02 	sts	0x025D, r24
     734:	90 93 5e 02 	sts	0x025E, r25
			break;
     738:	9a cf       	rjmp	.-204    	; 0x66e <process_received_byte+0x1a4>
			
			case 't':
			UpdatePID(0.0);
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	cb 01       	movw	r24, r22
     740:	0e 94 a4 00 	call	0x148	; 0x148 <UpdatePID>
			execute = true;
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	80 93 e7 01 	sts	0x01E7, r24
			break;
     74a:	91 cf       	rjmp	.-222    	; 0x66e <process_received_byte+0x1a4>
			
			case 'T':
			execute = false;
     74c:	10 92 e7 01 	sts	0x01E7, r1
			setMotor(0);
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	0e 94 8f 01 	call	0x31e	; 0x31e <setMotor>
			break;
     758:	8a cf       	rjmp	.-236    	; 0x66e <process_received_byte+0x1a4>
			
			case 'v':
			case'V':
			if(globalPID.desireSpeed)
     75a:	20 91 61 02 	lds	r18, 0x0261
     75e:	40 90 5b 02 	lds	r4, 0x025B
     762:	50 90 5c 02 	lds	r5, 0x025C
     766:	60 90 5d 02 	lds	r6, 0x025D
     76a:	70 90 5e 02 	lds	r7, 0x025E
     76e:	c0 90 57 02 	lds	r12, 0x0257
     772:	d0 90 58 02 	lds	r13, 0x0258
     776:	e0 90 59 02 	lds	r14, 0x0259
     77a:	f0 90 5a 02 	lds	r15, 0x025A
     77e:	90 91 63 02 	lds	r25, 0x0263
     782:	80 91 62 02 	lds	r24, 0x0262
     786:	a0 90 60 02 	lds	r10, 0x0260
     78a:	b0 90 5f 02 	lds	r11, 0x025F
     78e:	8e 01       	movw	r16, r28
     790:	0f 5f       	subi	r16, 0xFF	; 255
     792:	1f 4f       	sbci	r17, 0xFF	; 255
     794:	22 23       	and	r18, r18
     796:	09 f4       	brne	.+2      	; 0x79a <process_received_byte+0x2d0>
     798:	50 c0       	rjmp	.+160    	; 0x83a <process_received_byte+0x370>
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, 
     79a:	9f 93       	push	r25
     79c:	8f 93       	push	r24
     79e:	60 91 e8 01 	lds	r22, 0x01E8
     7a2:	70 91 e9 01 	lds	r23, 0x01E9
     7a6:	80 91 ea 01 	lds	r24, 0x01EA
     7aa:	90 91 eb 01 	lds	r25, 0x01EB
     7ae:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     7b2:	7f 93       	push	r23
     7b4:	6f 93       	push	r22
     7b6:	af 92       	push	r10
     7b8:	bf 92       	push	r11
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e2       	ldi	r20, 0x20	; 32
     7c0:	51 e4       	ldi	r21, 0x41	; 65
     7c2:	c3 01       	movw	r24, r6
     7c4:	b2 01       	movw	r22, r4
     7c6:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     7ca:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
			
			case 'v':
			case'V':
			if(globalPID.desireSpeed)
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, 
     7ce:	9a e0       	ldi	r25, 0x0A	; 10
     7d0:	a9 2e       	mov	r10, r25
     7d2:	b1 2c       	mov	r11, r1
     7d4:	cb 01       	movw	r24, r22
     7d6:	b5 01       	movw	r22, r10
     7d8:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     7dc:	9f 93       	push	r25
     7de:	8f 93       	push	r24
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
     7e0:	c3 01       	movw	r24, r6
     7e2:	b2 01       	movw	r22, r4
     7e4:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
			
			case 'v':
			case'V':
			if(globalPID.desireSpeed)
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, 
     7e8:	cb 01       	movw	r24, r22
     7ea:	b5 01       	movw	r22, r10
     7ec:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     7f0:	9f 93       	push	r25
     7f2:	8f 93       	push	r24
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e2       	ldi	r20, 0x20	; 32
     7fa:	51 e4       	ldi	r21, 0x41	; 65
     7fc:	c7 01       	movw	r24, r14
     7fe:	b6 01       	movw	r22, r12
     800:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     804:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     808:	cb 01       	movw	r24, r22
     80a:	b5 01       	movw	r22, r10
     80c:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     810:	9f 93       	push	r25
     812:	8f 93       	push	r24
     814:	c7 01       	movw	r24, r14
     816:	b6 01       	movw	r22, r12
     818:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     81c:	cb 01       	movw	r24, r22
     81e:	b5 01       	movw	r22, r10
     820:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     824:	9f 93       	push	r25
     826:	8f 93       	push	r24
     828:	89 e3       	ldi	r24, 0x39	; 57
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	1f 93       	push	r17
     832:	0f 93       	push	r16
     834:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
     838:	4f c0       	rjmp	.+158    	; 0x8d8 <process_received_byte+0x40e>
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
			}
			
			else
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10,
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	80 91 e2 01 	lds	r24, 0x01E2
     842:	8f 93       	push	r24
     844:	80 91 e1 01 	lds	r24, 0x01E1
     848:	8f 93       	push	r24
     84a:	80 91 e0 01 	lds	r24, 0x01E0
     84e:	8f 93       	push	r24
     850:	80 91 df 01 	lds	r24, 0x01DF
     854:	8f 93       	push	r24
     856:	af 92       	push	r10
     858:	bf 92       	push	r11
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, global_counts_m2, globalPID.lastValue );
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	40 e2       	ldi	r20, 0x20	; 32
     860:	51 e4       	ldi	r21, 0x41	; 65
     862:	c3 01       	movw	r24, r6
     864:	b2 01       	movw	r22, r4
     866:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     86a:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
			}
			
			else
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10,
     86e:	8a e0       	ldi	r24, 0x0A	; 10
     870:	a8 2e       	mov	r10, r24
     872:	b1 2c       	mov	r11, r1
     874:	cb 01       	movw	r24, r22
     876:	b5 01       	movw	r22, r10
     878:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     87c:	9f 93       	push	r25
     87e:	8f 93       	push	r24
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, global_counts_m2, globalPID.lastValue );
     880:	c3 01       	movw	r24, r6
     882:	b2 01       	movw	r22, r4
     884:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
			}
			
			else
			{
				length = sprintf( sendBuffer, "PGain:%d.%d DGain:%d.%d PDesired:%d PMeasured:%d Torque:%d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10,
     888:	cb 01       	movw	r24, r22
     88a:	b5 01       	movw	r22, r10
     88c:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     890:	9f 93       	push	r25
     892:	8f 93       	push	r24
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	40 e2       	ldi	r20, 0x20	; 32
     89a:	51 e4       	ldi	r21, 0x41	; 65
     89c:	c7 01       	movw	r24, r14
     89e:	b6 01       	movw	r22, r12
     8a0:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     8a4:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     8a8:	cb 01       	movw	r24, r22
     8aa:	b5 01       	movw	r22, r10
     8ac:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     8b0:	9f 93       	push	r25
     8b2:	8f 93       	push	r24
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     8bc:	cb 01       	movw	r24, r22
     8be:	b5 01       	movw	r22, r10
     8c0:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     8c4:	9f 93       	push	r25
     8c6:	8f 93       	push	r24
     8c8:	89 e3       	ldi	r24, 0x39	; 57
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	9f 93       	push	r25
     8ce:	8f 93       	push	r24
     8d0:	1f 93       	push	r17
     8d2:	0f 93       	push	r16
     8d4:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
     8d8:	0f b6       	in	r0, 0x3f	; 63
     8da:	f8 94       	cli
     8dc:	de bf       	out	0x3e, r29	; 62
     8de:	0f be       	out	0x3f, r0	; 63
     8e0:	cd bf       	out	0x3d, r28	; 61
					(int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, globalPID.desiredValue, global_counts_m2, globalPID.lastValue );
			}
			
			print_usb(sendBuffer, length);
     8e2:	bc 01       	movw	r22, r24
     8e4:	c8 01       	movw	r24, r16
     8e6:	0b c0       	rjmp	.+22     	; 0x8fe <process_received_byte+0x434>
			break;
			
			case 'l':
			case 'L':
			logPid = !logPid;
     8e8:	80 91 e6 01 	lds	r24, 0x01E6
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	89 27       	eor	r24, r25
     8f0:	80 93 e6 01 	sts	0x01E6, r24
			break;
     8f4:	bc ce       	rjmp	.-648    	; 0x66e <process_received_byte+0x1a4>

			default:
			print_usb("Bad Command\r\n", 13);
     8f6:	6d e0       	ldi	r22, 0x0D	; 13
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	86 e7       	ldi	r24, 0x76	; 118
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	0e 94 5e 02 	call	0x4bc	; 0x4bc <print_usb>
			break;
     902:	b5 ce       	rjmp	.-662    	; 0x66e <process_received_byte+0x1a4>
		}
		
		//reset buffer and position
		for(int i = 0; i < 32; i++)
		{
			command_buffer[i] = 0;
     904:	11 92       	st	Z+, r1
			print_usb("Bad Command\r\n", 13);
			break;
		}
		
		//reset buffer and position
		for(int i = 0; i < 32; i++)
     906:	22 e0       	ldi	r18, 0x02	; 2
     908:	e4 38       	cpi	r30, 0x84	; 132
     90a:	f2 07       	cpc	r31, r18
     90c:	d9 f7       	brne	.-10     	; 0x904 <process_received_byte+0x43a>
		{
			command_buffer[i] = 0;
		}
		
		command_buffer_position = 0;
     90e:	10 92 db 01 	sts	0x01DB, r1
	}
}
     912:	cf 5f       	subi	r28, 0xFF	; 255
     914:	dd 4f       	sbci	r29, 0xFD	; 253
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	f8 94       	cli
     91a:	de bf       	out	0x3e, r29	; 62
     91c:	0f be       	out	0x3f, r0	; 63
     91e:	cd bf       	out	0x3d, r28	; 61
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	1f 91       	pop	r17
     926:	0f 91       	pop	r16
     928:	ff 90       	pop	r15
     92a:	ef 90       	pop	r14
     92c:	df 90       	pop	r13
     92e:	cf 90       	pop	r12
     930:	bf 90       	pop	r11
     932:	af 90       	pop	r10
     934:	7f 90       	pop	r7
     936:	6f 90       	pop	r6
     938:	5f 90       	pop	r5
     93a:	4f 90       	pop	r4
     93c:	08 95       	ret

0000093e <check_for_new_bytes_received>:

void check_for_new_bytes_received()
{
	while(serial_get_received_bytes(USB_COMM) != receive_buffer_position)
     93e:	82 e0       	ldi	r24, 0x02	; 2
     940:	0e 94 88 0c 	call	0x1910	; 0x1910 <serial_get_received_bytes>
     944:	e0 91 dc 01 	lds	r30, 0x01DC
     948:	8e 17       	cp	r24, r30
     94a:	89 f0       	breq	.+34     	; 0x96e <check_for_new_bytes_received+0x30>
	{
		// Process the new byte that has just been received.
		process_received_byte(receive_buffer[receive_buffer_position]);
     94c:	f0 e0       	ldi	r31, 0x00	; 0
     94e:	ed 5d       	subi	r30, 0xDD	; 221
     950:	fd 4f       	sbci	r31, 0xFD	; 253
     952:	80 81       	ld	r24, Z
     954:	0e 94 65 02 	call	0x4ca	; 0x4ca <process_received_byte>

		// Increment receive_buffer_position, but wrap around when it gets to
		// the end of the buffer.
		if (receive_buffer_position == sizeof(receive_buffer)-1)
     958:	80 91 dc 01 	lds	r24, 0x01DC
     95c:	8f 31       	cpi	r24, 0x1F	; 31
     95e:	19 f4       	brne	.+6      	; 0x966 <check_for_new_bytes_received+0x28>
		{
			receive_buffer_position = 0;
     960:	10 92 dc 01 	sts	0x01DC, r1
     964:	ec cf       	rjmp	.-40     	; 0x93e <check_for_new_bytes_received>
		}
		else
		{
			receive_buffer_position++;
     966:	8f 5f       	subi	r24, 0xFF	; 255
     968:	80 93 dc 01 	sts	0x01DC, r24
     96c:	e8 cf       	rjmp	.-48     	; 0x93e <check_for_new_bytes_received>
     96e:	08 95       	ret

00000970 <__vector_16>:
	}
}

//Speed/Position Calc Interrupt
ISR(TIMER0_COMPA_vect)
{
     970:	1f 92       	push	r1
     972:	0f 92       	push	r0
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	0f 92       	push	r0
     978:	11 24       	eor	r1, r1
     97a:	0b b6       	in	r0, 0x3b	; 59
     97c:	0f 92       	push	r0
     97e:	0f 93       	push	r16
     980:	1f 93       	push	r17
     982:	2f 93       	push	r18
     984:	3f 93       	push	r19
     986:	4f 93       	push	r20
     988:	5f 93       	push	r21
     98a:	6f 93       	push	r22
     98c:	7f 93       	push	r23
     98e:	8f 93       	push	r24
     990:	9f 93       	push	r25
     992:	af 93       	push	r26
     994:	bf 93       	push	r27
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	ef 93       	push	r30
     99c:	ff 93       	push	r31
	if(execute)
     99e:	80 91 e7 01 	lds	r24, 0x01E7
     9a2:	88 23       	and	r24, r24
     9a4:	09 f4       	brne	.+2      	; 0x9a8 <__vector_16+0x38>
     9a6:	67 c0       	rjmp	.+206    	; 0xa76 <__vector_16+0x106>
	{
		encounterBufferPosition++;
     9a8:	80 91 ec 01 	lds	r24, 0x01EC
     9ac:	90 91 ed 01 	lds	r25, 0x01ED
     9b0:	01 96       	adiw	r24, 0x01	; 1
	
		if(encounterBufferPosition == 10)
     9b2:	8a 30       	cpi	r24, 0x0A	; 10
     9b4:	91 05       	cpc	r25, r1
     9b6:	29 f0       	breq	.+10     	; 0x9c2 <__vector_16+0x52>
//Speed/Position Calc Interrupt
ISR(TIMER0_COMPA_vect)
{
	if(execute)
	{
		encounterBufferPosition++;
     9b8:	90 93 ed 01 	sts	0x01ED, r25
     9bc:	80 93 ec 01 	sts	0x01EC, r24
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__vector_16+0x5a>
	
		if(encounterBufferPosition == 10)
		{
			encounterBufferPosition = 0;
     9c2:	10 92 ed 01 	sts	0x01ED, r1
     9c6:	10 92 ec 01 	sts	0x01EC, r1
		}
	
		encounterBuffer[encounterBufferPosition] = global_counts_m2;
     9ca:	e0 91 ec 01 	lds	r30, 0x01EC
     9ce:	f0 91 ed 01 	lds	r31, 0x01ED
     9d2:	80 91 df 01 	lds	r24, 0x01DF
     9d6:	90 91 e0 01 	lds	r25, 0x01E0
     9da:	a0 91 e1 01 	lds	r26, 0x01E1
     9de:	b0 91 e2 01 	lds	r27, 0x01E2
     9e2:	ef 01       	movw	r28, r30
     9e4:	cc 0f       	add	r28, r28
     9e6:	dd 1f       	adc	r29, r29
     9e8:	cc 0f       	add	r28, r28
     9ea:	dd 1f       	adc	r29, r29
     9ec:	c2 51       	subi	r28, 0x12	; 18
     9ee:	de 4f       	sbci	r29, 0xFE	; 254
     9f0:	88 83       	st	Y, r24
     9f2:	99 83       	std	Y+1, r25	; 0x01
     9f4:	aa 83       	std	Y+2, r26	; 0x02
     9f6:	bb 83       	std	Y+3, r27	; 0x03
	
		//Calc Avg Speed if speed
		if((globalPID.desireSpeed))
     9f8:	20 91 61 02 	lds	r18, 0x0261
     9fc:	22 23       	and	r18, r18
     9fe:	49 f1       	breq	.+82     	; 0xa52 <__vector_16+0xe2>
		{
			avgSpeed = encounterBuffer[encounterBufferPosition] - encounterBuffer[(encounterBufferPosition == 9 ? 0 : encounterBufferPosition + 1)];
     a00:	e9 30       	cpi	r30, 0x09	; 9
     a02:	f1 05       	cpc	r31, r1
     a04:	11 f0       	breq	.+4      	; 0xa0a <__vector_16+0x9a>
     a06:	31 96       	adiw	r30, 0x01	; 1
     a08:	02 c0       	rjmp	.+4      	; 0xa0e <__vector_16+0x9e>
     a0a:	e0 e0       	ldi	r30, 0x00	; 0
     a0c:	f0 e0       	ldi	r31, 0x00	; 0
     a0e:	ee 0f       	add	r30, r30
     a10:	ff 1f       	adc	r31, r31
     a12:	ee 0f       	add	r30, r30
     a14:	ff 1f       	adc	r31, r31
     a16:	e2 51       	subi	r30, 0x12	; 18
     a18:	fe 4f       	sbci	r31, 0xFE	; 254
     a1a:	40 81       	ld	r20, Z
     a1c:	51 81       	ldd	r21, Z+1	; 0x01
     a1e:	62 81       	ldd	r22, Z+2	; 0x02
     a20:	73 81       	ldd	r23, Z+3	; 0x03
     a22:	8c 01       	movw	r16, r24
     a24:	9d 01       	movw	r18, r26
     a26:	04 1b       	sub	r16, r20
     a28:	15 0b       	sbc	r17, r21
     a2a:	26 0b       	sbc	r18, r22
     a2c:	37 0b       	sbc	r19, r23
     a2e:	c9 01       	movw	r24, r18
     a30:	b8 01       	movw	r22, r16
     a32:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
		
			avgSpeed = avgSpeed * 10; // gets to counts per second
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 e2       	ldi	r20, 0x20	; 32
     a3c:	51 e4       	ldi	r21, 0x41	; 65
     a3e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     a42:	60 93 e8 01 	sts	0x01E8, r22
     a46:	70 93 e9 01 	sts	0x01E9, r23
     a4a:	80 93 ea 01 	sts	0x01EA, r24
     a4e:	90 93 eb 01 	sts	0x01EB, r25
		}
	
		PidFrequencyCounter++;
     a52:	80 91 17 02 	lds	r24, 0x0217
     a56:	90 91 18 02 	lds	r25, 0x0218
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	90 93 18 02 	sts	0x0218, r25
     a60:	80 93 17 02 	sts	0x0217, r24
		if(PidFrequencyCounter == PidFrequency)
     a64:	01 97       	sbiw	r24, 0x01	; 1
     a66:	39 f4       	brne	.+14     	; 0xa76 <__vector_16+0x106>
		{
			PidFrequencyCounter = 0;
     a68:	10 92 18 02 	sts	0x0218, r1
     a6c:	10 92 17 02 	sts	0x0217, r1
			runPid = true;
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	80 93 16 02 	sts	0x0216, r24
		}
	}
	
	runInter = true;
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	80 93 20 02 	sts	0x0220, r24
}
     a7c:	ff 91       	pop	r31
     a7e:	ef 91       	pop	r30
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	bf 91       	pop	r27
     a86:	af 91       	pop	r26
     a88:	9f 91       	pop	r25
     a8a:	8f 91       	pop	r24
     a8c:	7f 91       	pop	r23
     a8e:	6f 91       	pop	r22
     a90:	5f 91       	pop	r21
     a92:	4f 91       	pop	r20
     a94:	3f 91       	pop	r19
     a96:	2f 91       	pop	r18
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	0f 90       	pop	r0
     a9e:	0b be       	out	0x3b, r0	; 59
     aa0:	0f 90       	pop	r0
     aa2:	0f be       	out	0x3f, r0	; 63
     aa4:	0f 90       	pop	r0
     aa6:	1f 90       	pop	r1
     aa8:	18 95       	reti

00000aaa <__vector_7>:

//Encoder interrupt
ISR(PCINT3_vect)
{
     aaa:	1f 92       	push	r1
     aac:	0f 92       	push	r0
     aae:	0f b6       	in	r0, 0x3f	; 63
     ab0:	0f 92       	push	r0
     ab2:	11 24       	eor	r1, r1
     ab4:	0b b6       	in	r0, 0x3b	; 59
     ab6:	0f 92       	push	r0
     ab8:	2f 93       	push	r18
     aba:	3f 93       	push	r19
     abc:	4f 93       	push	r20
     abe:	5f 93       	push	r21
     ac0:	6f 93       	push	r22
     ac2:	7f 93       	push	r23
     ac4:	8f 93       	push	r24
     ac6:	9f 93       	push	r25
     ac8:	af 93       	push	r26
     aca:	bf 93       	push	r27
     acc:	cf 93       	push	r28
     ace:	ef 93       	push	r30
     ad0:	ff 93       	push	r31
	unsigned char m2a_val = is_digital_input_high(global_m2a);
     ad2:	80 91 e4 01 	lds	r24, 0x01E4
     ad6:	0e 94 6d 00 	call	0xda	; 0xda <is_digital_input_high>
     ada:	c8 2f       	mov	r28, r24
	unsigned char m2b_val = is_digital_input_high(global_m2b);
     adc:	80 91 e3 01 	lds	r24, 0x01E3
     ae0:	0e 94 6d 00 	call	0xda	; 0xda <is_digital_input_high>
	
	if(m2a_val > 0)
     ae4:	31 e0       	ldi	r19, 0x01	; 1
     ae6:	c1 11       	cpse	r28, r1
     ae8:	01 c0       	rjmp	.+2      	; 0xaec <__vector_7+0x42>
     aea:	30 e0       	ldi	r19, 0x00	; 0
	{
		m2a_val = 1;
	}
	
	if(m2b_val > 0)
     aec:	21 e0       	ldi	r18, 0x01	; 1
     aee:	81 11       	cpse	r24, r1
     af0:	01 c0       	rjmp	.+2      	; 0xaf4 <__vector_7+0x4a>
     af2:	20 e0       	ldi	r18, 0x00	; 0
	{
		m2b_val = 1;
	}

	char plus_m1 = m2a_val ^ global_last_m2b_val;
	char minus_m1 = m2b_val ^ global_last_m2a_val;
     af4:	40 91 de 01 	lds	r20, 0x01DE

	if(plus_m1)
     af8:	80 91 dd 01 	lds	r24, 0x01DD
     afc:	38 17       	cp	r19, r24
     afe:	99 f0       	breq	.+38     	; 0xb26 <__vector_7+0x7c>
	global_counts_m2 += 1;
     b00:	80 91 df 01 	lds	r24, 0x01DF
     b04:	90 91 e0 01 	lds	r25, 0x01E0
     b08:	a0 91 e1 01 	lds	r26, 0x01E1
     b0c:	b0 91 e2 01 	lds	r27, 0x01E2
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	a1 1d       	adc	r26, r1
     b14:	b1 1d       	adc	r27, r1
     b16:	80 93 df 01 	sts	0x01DF, r24
     b1a:	90 93 e0 01 	sts	0x01E0, r25
     b1e:	a0 93 e1 01 	sts	0x01E1, r26
     b22:	b0 93 e2 01 	sts	0x01E2, r27
	if(minus_m1)
     b26:	24 17       	cp	r18, r20
     b28:	99 f0       	breq	.+38     	; 0xb50 <__vector_7+0xa6>
	global_counts_m2 -= 1;
     b2a:	80 91 df 01 	lds	r24, 0x01DF
     b2e:	90 91 e0 01 	lds	r25, 0x01E0
     b32:	a0 91 e1 01 	lds	r26, 0x01E1
     b36:	b0 91 e2 01 	lds	r27, 0x01E2
     b3a:	01 97       	sbiw	r24, 0x01	; 1
     b3c:	a1 09       	sbc	r26, r1
     b3e:	b1 09       	sbc	r27, r1
     b40:	80 93 df 01 	sts	0x01DF, r24
     b44:	90 93 e0 01 	sts	0x01E0, r25
     b48:	a0 93 e1 01 	sts	0x01E1, r26
     b4c:	b0 93 e2 01 	sts	0x01E2, r27

	global_last_m2a_val = m2a_val;
     b50:	30 93 de 01 	sts	0x01DE, r19
	global_last_m2b_val = m2b_val;
     b54:	20 93 dd 01 	sts	0x01DD, r18
}
     b58:	ff 91       	pop	r31
     b5a:	ef 91       	pop	r30
     b5c:	cf 91       	pop	r28
     b5e:	bf 91       	pop	r27
     b60:	af 91       	pop	r26
     b62:	9f 91       	pop	r25
     b64:	8f 91       	pop	r24
     b66:	7f 91       	pop	r23
     b68:	6f 91       	pop	r22
     b6a:	5f 91       	pop	r21
     b6c:	4f 91       	pop	r20
     b6e:	3f 91       	pop	r19
     b70:	2f 91       	pop	r18
     b72:	0f 90       	pop	r0
     b74:	0b be       	out	0x3b, r0	; 59
     b76:	0f 90       	pop	r0
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	0f 90       	pop	r0
     b7c:	1f 90       	pop	r1
     b7e:	18 95       	reti

00000b80 <initMotor>:

//Init Motor 2
void initMotor()
{
	TCCR2A = 0x03;
     b80:	83 e0       	ldi	r24, 0x03	; 3
     b82:	80 93 b0 00 	sts	0x00B0, r24
	TCCR2B = 0x02;
     b86:	82 e0       	ldi	r24, 0x02	; 2
     b88:	80 93 b1 00 	sts	0x00B1, r24
	PORTC &= 0xBF;
     b8c:	46 98       	cbi	0x08, 6	; 8
	PORTD &= 0xBF;
     b8e:	5e 98       	cbi	0x0b, 6	; 11
	DDRD |= 0x40;
     b90:	56 9a       	sbi	0x0a, 6	; 10
	DDRC |= 0x40;
     b92:	3e 9a       	sbi	0x07, 6	; 7
     b94:	08 95       	ret

00000b96 <initEncoder>:
}

//Init Encoder
void initEncoder(unsigned char m2a, unsigned char m2b)
{
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	1f 92       	push	r1
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
	//Encoder
	PCICR |= 0x08;
     ba0:	e8 e6       	ldi	r30, 0x68	; 104
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	90 81       	ld	r25, Z
     ba6:	98 60       	ori	r25, 0x08	; 8
     ba8:	90 83       	st	Z, r25
	PCMSK3 |= 0x0C;
     baa:	e3 e7       	ldi	r30, 0x73	; 115
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	90 81       	ld	r25, Z
     bb0:	9c 60       	ori	r25, 0x0C	; 12
     bb2:	90 83       	st	Z, r25
	SREG |= 0x80;
     bb4:	9f b7       	in	r25, 0x3f	; 63
     bb6:	90 68       	ori	r25, 0x80	; 128
     bb8:	9f bf       	out	0x3f, r25	; 63
	
	global_m2a = m2a;
     bba:	80 93 e4 01 	sts	0x01E4, r24
	global_m2b = m2b;
     bbe:	60 93 e3 01 	sts	0x01E3, r22

	// initialize the global state
	global_counts_m2 = 0;
     bc2:	10 92 df 01 	sts	0x01DF, r1
     bc6:	10 92 e0 01 	sts	0x01E0, r1
     bca:	10 92 e1 01 	sts	0x01E1, r1
     bce:	10 92 e2 01 	sts	0x01E2, r1

	global_last_m2a_val = is_digital_input_high(global_m2a);
     bd2:	69 83       	std	Y+1, r22	; 0x01
     bd4:	0e 94 6d 00 	call	0xda	; 0xda <is_digital_input_high>
     bd8:	80 93 de 01 	sts	0x01DE, r24
	global_last_m2b_val = is_digital_input_high(global_m2b);
     bdc:	69 81       	ldd	r22, Y+1	; 0x01
     bde:	86 2f       	mov	r24, r22
     be0:	0e 94 6d 00 	call	0xda	; 0xda <is_digital_input_high>
     be4:	80 93 dd 01 	sts	0x01DD, r24
}
     be8:	0f 90       	pop	r0
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	08 95       	ret

00000bf0 <initPID>:

//init global PID
void initPID()
{
	globalPID.dGain = 1.0;
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	a0 e8       	ldi	r26, 0x80	; 128
     bf6:	bf e3       	ldi	r27, 0x3F	; 63
     bf8:	80 93 5b 02 	sts	0x025B, r24
     bfc:	90 93 5c 02 	sts	0x025C, r25
     c00:	a0 93 5d 02 	sts	0x025D, r26
     c04:	b0 93 5e 02 	sts	0x025E, r27
	globalPID.pGain = 1.0;
     c08:	80 93 57 02 	sts	0x0257, r24
     c0c:	90 93 58 02 	sts	0x0258, r25
     c10:	a0 93 59 02 	sts	0x0259, r26
     c14:	b0 93 5a 02 	sts	0x025A, r27
	globalPID.iGain = 1.0;
     c18:	80 93 53 02 	sts	0x0253, r24
     c1c:	90 93 54 02 	sts	0x0254, r25
     c20:	a0 93 55 02 	sts	0x0255, r26
     c24:	b0 93 56 02 	sts	0x0256, r27
	globalPID.dState = 0;
     c28:	10 92 43 02 	sts	0x0243, r1
     c2c:	10 92 44 02 	sts	0x0244, r1
     c30:	10 92 45 02 	sts	0x0245, r1
     c34:	10 92 46 02 	sts	0x0246, r1
	globalPID.iState = 0;
     c38:	10 92 47 02 	sts	0x0247, r1
     c3c:	10 92 48 02 	sts	0x0248, r1
     c40:	10 92 49 02 	sts	0x0249, r1
     c44:	10 92 4a 02 	sts	0x024A, r1
	globalPID.iMax = 1000;
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	aa e7       	ldi	r26, 0x7A	; 122
     c4e:	b4 e4       	ldi	r27, 0x44	; 68
     c50:	80 93 4b 02 	sts	0x024B, r24
     c54:	90 93 4c 02 	sts	0x024C, r25
     c58:	a0 93 4d 02 	sts	0x024D, r26
     c5c:	b0 93 4e 02 	sts	0x024E, r27
	globalPID.iMin = -1000;
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	aa e7       	ldi	r26, 0x7A	; 122
     c66:	b4 ec       	ldi	r27, 0xC4	; 196
     c68:	80 93 4f 02 	sts	0x024F, r24
     c6c:	90 93 50 02 	sts	0x0250, r25
     c70:	a0 93 51 02 	sts	0x0251, r26
     c74:	b0 93 52 02 	sts	0x0252, r27
	globalPID.desiredValue = 0;
     c78:	10 92 60 02 	sts	0x0260, r1
     c7c:	10 92 5f 02 	sts	0x025F, r1
	globalPID.desireSpeed = true;
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	80 93 61 02 	sts	0x0261, r24
	globalPID.lastValue = 0;
     c86:	10 92 63 02 	sts	0x0263, r1
     c8a:	10 92 62 02 	sts	0x0262, r1
     c8e:	08 95       	ret

00000c90 <initSpeedInterrupt>:
{
	//OCR0A 10ms interrupt
	//20M/sec * 1sec/1000ms * 1count/1024ticks * 10INT/195Counts = 10.016ms
	//Need 1024 prescalar and count of 195
	
	TCCR0A = 0x82; //ClearOCRA and OCRA at top
     c90:	82 e8       	ldi	r24, 0x82	; 130
     c92:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x05; //Prescalar 1024
     c94:	85 e0       	ldi	r24, 0x05	; 5
     c96:	85 bd       	out	0x25, r24	; 37
	OCR0A = 0xC3; // Set OCR0A Top Rate to 195
     c98:	83 ec       	ldi	r24, 0xC3	; 195
     c9a:	87 bd       	out	0x27, r24	; 39
	
	//Enable interrupt
	TIMSK0 |= 0x02;
     c9c:	ee e6       	ldi	r30, 0x6E	; 110
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	80 81       	ld	r24, Z
     ca2:	82 60       	ori	r24, 0x02	; 2
     ca4:	80 83       	st	Z, r24
     ca6:	08 95       	ret

00000ca8 <main>:
}

int main()
{
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	c1 50       	subi	r28, 0x01	; 1
     cb2:	d1 40       	sbci	r29, 0x01	; 1
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
	lcd_init_printf();
     cbe:	0e 94 85 0c 	call	0x190a	; 0x190a <lcd_init_printf>
	clear();
     cc2:	0e 94 ab 0a 	call	0x1556	; 0x1556 <clear>
	
	initMotor();
     cc6:	0e 94 c0 05 	call	0xb80	; 0xb80 <initMotor>
	
	initEncoder(IO_D2, IO_D3);
     cca:	63 e0       	ldi	r22, 0x03	; 3
     ccc:	82 e0       	ldi	r24, 0x02	; 2
     cce:	0e 94 cb 05 	call	0xb96	; 0xb96 <initEncoder>
	
	initPID();
     cd2:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <initPID>
	initSpeedPID();
     cd6:	0e 94 ac 01 	call	0x358	; 0x358 <initSpeedPID>
	//initPositionPID();
	
	initSpeedInterrupt();
     cda:	0e 94 48 06 	call	0xc90	; 0xc90 <initSpeedInterrupt>
	
	setMotor(0);
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 8f 01 	call	0x31e	; 0x31e <setMotor>
	
	serial_set_baud_rate(USB_COMM, 9600);
     ce6:	40 e8       	ldi	r20, 0x80	; 128
     ce8:	55 e2       	ldi	r21, 0x25	; 37
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	82 e0       	ldi	r24, 0x02	; 2
     cf0:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <serial_set_baud_rate>

	// Start receiving bytes in the ring buffer.
	serial_receive_ring(USB_COMM, receive_buffer, sizeof(receive_buffer));
     cf4:	40 e2       	ldi	r20, 0x20	; 32
     cf6:	63 e2       	ldi	r22, 0x23	; 35
     cf8:	72 e0       	ldi	r23, 0x02	; 2
     cfa:	82 e0       	ldi	r24, 0x02	; 2
     cfc:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <serial_receive_ring>
     d00:	9e 01       	movw	r18, r28
     d02:	2f 5f       	subi	r18, 0xFF	; 255
     d04:	3f 4f       	sbci	r19, 0xFF	; 255
     d06:	59 01       	movw	r10, r18
						globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
				}
				
				else
				{
					length = sprintf( tempBuffer, "%d.%d %d.%d %d %ld %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, 
     d08:	0a e0       	ldi	r16, 0x0A	; 10
     d0a:	10 e0       	ldi	r17, 0x00	; 0
     d0c:	26 ea       	ldi	r18, 0xA6	; 166
     d0e:	22 2e       	mov	r2, r18
     d10:	21 e0       	ldi	r18, 0x01	; 1
     d12:	32 2e       	mov	r3, r18
				char tempBuffer[255];
				int length = 0;

				if(globalPID.desireSpeed)
				{
					length = sprintf( tempBuffer, "%d.%d %d.%d %d %d %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, 
     d14:	3f e8       	ldi	r19, 0x8F	; 143
     d16:	83 2e       	mov	r8, r19
     d18:	31 e0       	ldi	r19, 0x01	; 1
     d1a:	93 2e       	mov	r9, r19
	// Start receiving bytes in the ring buffer.
	serial_receive_ring(USB_COMM, receive_buffer, sizeof(receive_buffer));

	while(1)
	{	
		serial_check();
     d1c:	0e 94 6e 10 	call	0x20dc	; 0x20dc <serial_check>
		check_for_new_bytes_received();
     d20:	0e 94 9f 04 	call	0x93e	; 0x93e <check_for_new_bytes_received>
		
		lcd_goto_xy(0,0);
     d24:	60 e0       	ldi	r22, 0x00	; 0
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	0e 94 2b 0b 	call	0x1656	; 0x1656 <lcd_goto_xy>
		printf("Encode:");
     d2c:	a4 e8       	ldi	r26, 0x84	; 132
     d2e:	b1 e0       	ldi	r27, 0x01	; 1
     d30:	bf 93       	push	r27
     d32:	af 93       	push	r26
     d34:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <printf>
		print_long(global_counts_m2);
     d38:	60 91 df 01 	lds	r22, 0x01DF
     d3c:	70 91 e0 01 	lds	r23, 0x01E0
     d40:	80 91 e1 01 	lds	r24, 0x01E1
     d44:	90 91 e2 01 	lds	r25, 0x01E2
     d48:	0e 94 08 0b 	call	0x1610	; 0x1610 <print_long>
		
		lcd_goto_xy(0,1);
     d4c:	61 e0       	ldi	r22, 0x01	; 1
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	0e 94 2b 0b 	call	0x1656	; 0x1656 <lcd_goto_xy>
		printf("T:");
     d54:	ac e8       	ldi	r26, 0x8C	; 140
     d56:	b1 e0       	ldi	r27, 0x01	; 1
     d58:	bf 93       	push	r27
     d5a:	af 93       	push	r26
     d5c:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <printf>
		print_long(globalPID.lastValue);
     d60:	60 91 62 02 	lds	r22, 0x0262
     d64:	70 91 63 02 	lds	r23, 0x0263
     d68:	88 27       	eor	r24, r24
     d6a:	77 fd       	sbrc	r23, 7
     d6c:	80 95       	com	r24
     d6e:	98 2f       	mov	r25, r24
     d70:	0e 94 08 0b 	call	0x1610	; 0x1610 <print_long>
		
		if(runPid)
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	80 91 16 02 	lds	r24, 0x0216
     d80:	88 23       	and	r24, r24
     d82:	09 f4       	brne	.+2      	; 0xd86 <main+0xde>
     d84:	f3 c0       	rjmp	.+486    	; 0xf6c <main+0x2c4>
		{
			//Update Pid
			if(globalPID.desireSpeed)
     d86:	80 91 61 02 	lds	r24, 0x0261
     d8a:	88 23       	and	r24, r24
     d8c:	49 f0       	breq	.+18     	; 0xda0 <main+0xf8>
			{
				setMotor(UpdatePID(avgSpeed));
     d8e:	60 91 e8 01 	lds	r22, 0x01E8
     d92:	70 91 e9 01 	lds	r23, 0x01E9
     d96:	80 91 ea 01 	lds	r24, 0x01EA
     d9a:	90 91 eb 01 	lds	r25, 0x01EB
     d9e:	0a c0       	rjmp	.+20     	; 0xdb4 <main+0x10c>
			}
			
			else
			{
				setMotor(UpdatePID((double)global_counts_m2));
     da0:	60 91 df 01 	lds	r22, 0x01DF
     da4:	70 91 e0 01 	lds	r23, 0x01E0
     da8:	80 91 e1 01 	lds	r24, 0x01E1
     dac:	90 91 e2 01 	lds	r25, 0x01E2
     db0:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatsisf>
     db4:	0e 94 a4 00 	call	0x148	; 0x148 <UpdatePID>
     db8:	0e 94 8f 01 	call	0x31e	; 0x31e <setMotor>
			}
			
			if(logPid)
     dbc:	80 91 e6 01 	lds	r24, 0x01E6
     dc0:	88 23       	and	r24, r24
     dc2:	09 f4       	brne	.+2      	; 0xdc6 <main+0x11e>
     dc4:	d1 c0       	rjmp	.+418    	; 0xf68 <main+0x2c0>
			{
				char tempBuffer[255];
				int length = 0;

				if(globalPID.desireSpeed)
     dc6:	40 91 61 02 	lds	r20, 0x0261
     dca:	40 90 5b 02 	lds	r4, 0x025B
     dce:	50 90 5c 02 	lds	r5, 0x025C
     dd2:	60 90 5d 02 	lds	r6, 0x025D
     dd6:	70 90 5e 02 	lds	r7, 0x025E
     dda:	c0 90 57 02 	lds	r12, 0x0257
     dde:	d0 90 58 02 	lds	r13, 0x0258
     de2:	e0 90 59 02 	lds	r14, 0x0259
     de6:	f0 90 5a 02 	lds	r15, 0x025A
     dea:	90 91 63 02 	lds	r25, 0x0263
     dee:	80 91 62 02 	lds	r24, 0x0262
     df2:	30 91 60 02 	lds	r19, 0x0260
     df6:	20 91 5f 02 	lds	r18, 0x025F
     dfa:	44 23       	and	r20, r20
     dfc:	09 f4       	brne	.+2      	; 0xe00 <main+0x158>
     dfe:	5f c0       	rjmp	.+190    	; 0xebe <main+0x216>
				{
					length = sprintf( tempBuffer, "%d.%d %d.%d %d %d %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, 
     e00:	9f 93       	push	r25
     e02:	8f 93       	push	r24
     e04:	60 91 e8 01 	lds	r22, 0x01E8
     e08:	70 91 e9 01 	lds	r23, 0x01E9
     e0c:	80 91 ea 01 	lds	r24, 0x01EA
     e10:	90 91 eb 01 	lds	r25, 0x01EB
     e14:	cf 5f       	subi	r28, 0xFF	; 255
     e16:	de 4f       	sbci	r29, 0xFE	; 254
     e18:	28 83       	st	Y, r18
     e1a:	c1 50       	subi	r28, 0x01	; 1
     e1c:	d1 40       	sbci	r29, 0x01	; 1
     e1e:	c0 50       	subi	r28, 0x00	; 0
     e20:	df 4f       	sbci	r29, 0xFF	; 255
     e22:	38 83       	st	Y, r19
     e24:	c0 50       	subi	r28, 0x00	; 0
     e26:	d1 40       	sbci	r29, 0x01	; 1
     e28:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     e2c:	7f 93       	push	r23
     e2e:	6f 93       	push	r22
     e30:	c0 50       	subi	r28, 0x00	; 0
     e32:	df 4f       	sbci	r29, 0xFF	; 255
     e34:	38 81       	ld	r19, Y
     e36:	c0 50       	subi	r28, 0x00	; 0
     e38:	d1 40       	sbci	r29, 0x01	; 1
     e3a:	3f 93       	push	r19
     e3c:	cf 5f       	subi	r28, 0xFF	; 255
     e3e:	de 4f       	sbci	r29, 0xFE	; 254
     e40:	28 81       	ld	r18, Y
     e42:	c1 50       	subi	r28, 0x01	; 1
     e44:	d1 40       	sbci	r29, 0x01	; 1
     e46:	2f 93       	push	r18
     e48:	20 e0       	ldi	r18, 0x00	; 0
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	40 e2       	ldi	r20, 0x20	; 32
     e4e:	51 e4       	ldi	r21, 0x41	; 65
     e50:	c3 01       	movw	r24, r6
     e52:	b2 01       	movw	r22, r4
     e54:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     e58:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     e5c:	cb 01       	movw	r24, r22
     e5e:	b8 01       	movw	r22, r16
     e60:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e64:	9f 93       	push	r25
     e66:	8f 93       	push	r24
     e68:	c3 01       	movw	r24, r6
     e6a:	b2 01       	movw	r22, r4
     e6c:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     e70:	cb 01       	movw	r24, r22
     e72:	b8 01       	movw	r22, r16
     e74:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e78:	9f 93       	push	r25
     e7a:	8f 93       	push	r24
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	40 e2       	ldi	r20, 0x20	; 32
     e82:	51 e4       	ldi	r21, 0x41	; 65
     e84:	c7 01       	movw	r24, r14
     e86:	b6 01       	movw	r22, r12
     e88:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     e8c:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     e90:	cb 01       	movw	r24, r22
     e92:	b8 01       	movw	r22, r16
     e94:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e98:	9f 93       	push	r25
     e9a:	8f 93       	push	r24
     e9c:	c7 01       	movw	r24, r14
     e9e:	b6 01       	movw	r22, r12
     ea0:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     ea4:	cb 01       	movw	r24, r22
     ea6:	b8 01       	movw	r22, r16
     ea8:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     eac:	9f 93       	push	r25
     eae:	8f 93       	push	r24
     eb0:	9f 92       	push	r9
     eb2:	8f 92       	push	r8
     eb4:	bf 92       	push	r11
     eb6:	af 92       	push	r10
     eb8:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
     ebc:	4a c0       	rjmp	.+148    	; 0xf52 <main+0x2aa>
						globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
				}
				
				else
				{
					length = sprintf( tempBuffer, "%d.%d %d.%d %d %ld %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10, 
     ebe:	9f 93       	push	r25
     ec0:	8f 93       	push	r24
     ec2:	80 91 e2 01 	lds	r24, 0x01E2
     ec6:	8f 93       	push	r24
     ec8:	80 91 e1 01 	lds	r24, 0x01E1
     ecc:	8f 93       	push	r24
     ece:	80 91 e0 01 	lds	r24, 0x01E0
     ed2:	8f 93       	push	r24
     ed4:	80 91 df 01 	lds	r24, 0x01DF
     ed8:	8f 93       	push	r24
     eda:	3f 93       	push	r19
     edc:	2f 93       	push	r18
     ede:	20 e0       	ldi	r18, 0x00	; 0
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	40 e2       	ldi	r20, 0x20	; 32
     ee4:	51 e4       	ldi	r21, 0x41	; 65
     ee6:	c3 01       	movw	r24, r6
     ee8:	b2 01       	movw	r22, r4
     eea:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     eee:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     ef2:	cb 01       	movw	r24, r22
     ef4:	b8 01       	movw	r22, r16
     ef6:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     efa:	9f 93       	push	r25
     efc:	8f 93       	push	r24
     efe:	c3 01       	movw	r24, r6
     f00:	b2 01       	movw	r22, r4
     f02:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     f06:	cb 01       	movw	r24, r22
     f08:	b8 01       	movw	r22, r16
     f0a:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     f0e:	9f 93       	push	r25
     f10:	8f 93       	push	r24
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	40 e2       	ldi	r20, 0x20	; 32
     f18:	51 e4       	ldi	r21, 0x41	; 65
     f1a:	c7 01       	movw	r24, r14
     f1c:	b6 01       	movw	r22, r12
     f1e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
     f22:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     f26:	cb 01       	movw	r24, r22
     f28:	b8 01       	movw	r22, r16
     f2a:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     f2e:	9f 93       	push	r25
     f30:	8f 93       	push	r24
     f32:	c7 01       	movw	r24, r14
     f34:	b6 01       	movw	r22, r12
     f36:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
     f3a:	cb 01       	movw	r24, r22
     f3c:	b8 01       	movw	r22, r16
     f3e:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     f42:	9f 93       	push	r25
     f44:	8f 93       	push	r24
     f46:	3f 92       	push	r3
     f48:	2f 92       	push	r2
     f4a:	bf 92       	push	r11
     f4c:	af 92       	push	r10
     f4e:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	de bf       	out	0x3e, r29	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	cd bf       	out	0x3d, r28	; 61
						globalPID.desiredValue, global_counts_m2, globalPID.lastValue );
				}
				
				print_usb( tempBuffer, length );
     f5c:	bc 01       	movw	r22, r24
     f5e:	c5 01       	movw	r24, r10
     f60:	0e 94 5e 02 	call	0x4bc	; 0x4bc <print_usb>
				
				clear();
     f64:	0e 94 ab 0a 	call	0x1556	; 0x1556 <clear>
			}
			
			runPid = false;
     f68:	10 92 16 02 	sts	0x0216, r1
		{
			
		}*/
		
		//Determine if action needed for interpolator
		if(isInter && runInter && (execute || isSleeping))
     f6c:	80 91 e5 01 	lds	r24, 0x01E5
     f70:	88 23       	and	r24, r24
     f72:	09 f4       	brne	.+2      	; 0xf76 <main+0x2ce>
     f74:	d3 ce       	rjmp	.-602    	; 0xd1c <main+0x74>
     f76:	80 91 20 02 	lds	r24, 0x0220
     f7a:	88 23       	and	r24, r24
     f7c:	09 f4       	brne	.+2      	; 0xf80 <main+0x2d8>
     f7e:	ce ce       	rjmp	.-612    	; 0xd1c <main+0x74>
     f80:	80 91 e7 01 	lds	r24, 0x01E7
     f84:	81 11       	cpse	r24, r1
     f86:	05 c0       	rjmp	.+10     	; 0xf92 <main+0x2ea>
     f88:	80 91 1f 02 	lds	r24, 0x021F
     f8c:	88 23       	and	r24, r24
     f8e:	09 f4       	brne	.+2      	; 0xf92 <main+0x2ea>
     f90:	c5 ce       	rjmp	.-630    	; 0xd1c <main+0x74>
		{
			if(myInterpolator[currentInter]->interType == 1) // Sleep
     f92:	e0 91 21 02 	lds	r30, 0x0221
     f96:	f0 91 22 02 	lds	r31, 0x0222
     f9a:	df 01       	movw	r26, r30
     f9c:	aa 0f       	add	r26, r26
     f9e:	bb 1f       	adc	r27, r27
     fa0:	ac 57       	subi	r26, 0x7C	; 124
     fa2:	bd 4f       	sbci	r27, 0xFD	; 253
     fa4:	0d 90       	ld	r0, X+
     fa6:	bc 91       	ld	r27, X
     fa8:	a0 2d       	mov	r26, r0
     faa:	8d 91       	ld	r24, X+
     fac:	9c 91       	ld	r25, X
     fae:	81 30       	cpi	r24, 0x01	; 1
     fb0:	91 05       	cpc	r25, r1
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <main+0x30e>
     fb4:	38 c1       	rjmp	.+624    	; 0x1226 <main+0x57e>
			{
				interSleepCount += 10; //ms since last called
     fb6:	80 91 19 02 	lds	r24, 0x0219
     fba:	90 91 1a 02 	lds	r25, 0x021A
     fbe:	0a 96       	adiw	r24, 0x0a	; 10
     fc0:	90 93 1a 02 	sts	0x021A, r25
     fc4:	80 93 19 02 	sts	0x0219, r24
				
				if(logPid && interSleepCount % 20 == 0)
     fc8:	20 91 e6 01 	lds	r18, 0x01E6
     fcc:	22 23       	and	r18, r18
     fce:	09 f4       	brne	.+2      	; 0xfd2 <main+0x32a>
     fd0:	d6 c0       	rjmp	.+428    	; 0x117e <main+0x4d6>
     fd2:	64 e1       	ldi	r22, 0x14	; 20
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     fda:	89 2b       	or	r24, r25
     fdc:	09 f0       	breq	.+2      	; 0xfe0 <main+0x338>
     fde:	cf c0       	rjmp	.+414    	; 0x117e <main+0x4d6>
				{
					char tempBuffer[255];
					int length = 0;

					if(globalPID.desireSpeed)
     fe0:	40 91 61 02 	lds	r20, 0x0261
     fe4:	40 90 5b 02 	lds	r4, 0x025B
     fe8:	50 90 5c 02 	lds	r5, 0x025C
     fec:	60 90 5d 02 	lds	r6, 0x025D
     ff0:	70 90 5e 02 	lds	r7, 0x025E
     ff4:	c0 90 57 02 	lds	r12, 0x0257
     ff8:	d0 90 58 02 	lds	r13, 0x0258
     ffc:	e0 90 59 02 	lds	r14, 0x0259
    1000:	f0 90 5a 02 	lds	r15, 0x025A
    1004:	90 91 63 02 	lds	r25, 0x0263
    1008:	80 91 62 02 	lds	r24, 0x0262
    100c:	30 91 60 02 	lds	r19, 0x0260
    1010:	20 91 5f 02 	lds	r18, 0x025F
    1014:	44 23       	and	r20, r20
    1016:	09 f4       	brne	.+2      	; 0x101a <main+0x372>
    1018:	5f c0       	rjmp	.+190    	; 0x10d8 <main+0x430>
					{
						length = sprintf( tempBuffer, "%d.%d %d.%d %d %d %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10,
    101a:	9f 93       	push	r25
    101c:	8f 93       	push	r24
    101e:	60 91 e8 01 	lds	r22, 0x01E8
    1022:	70 91 e9 01 	lds	r23, 0x01E9
    1026:	80 91 ea 01 	lds	r24, 0x01EA
    102a:	90 91 eb 01 	lds	r25, 0x01EB
    102e:	cf 5f       	subi	r28, 0xFF	; 255
    1030:	de 4f       	sbci	r29, 0xFE	; 254
    1032:	28 83       	st	Y, r18
    1034:	c1 50       	subi	r28, 0x01	; 1
    1036:	d1 40       	sbci	r29, 0x01	; 1
    1038:	c0 50       	subi	r28, 0x00	; 0
    103a:	df 4f       	sbci	r29, 0xFF	; 255
    103c:	38 83       	st	Y, r19
    103e:	c0 50       	subi	r28, 0x00	; 0
    1040:	d1 40       	sbci	r29, 0x01	; 1
    1042:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    1046:	7f 93       	push	r23
    1048:	6f 93       	push	r22
    104a:	c0 50       	subi	r28, 0x00	; 0
    104c:	df 4f       	sbci	r29, 0xFF	; 255
    104e:	38 81       	ld	r19, Y
    1050:	c0 50       	subi	r28, 0x00	; 0
    1052:	d1 40       	sbci	r29, 0x01	; 1
    1054:	3f 93       	push	r19
    1056:	cf 5f       	subi	r28, 0xFF	; 255
    1058:	de 4f       	sbci	r29, 0xFE	; 254
    105a:	28 81       	ld	r18, Y
    105c:	c1 50       	subi	r28, 0x01	; 1
    105e:	d1 40       	sbci	r29, 0x01	; 1
    1060:	2f 93       	push	r18
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	40 e2       	ldi	r20, 0x20	; 32
    1068:	51 e4       	ldi	r21, 0x41	; 65
    106a:	c3 01       	movw	r24, r6
    106c:	b2 01       	movw	r22, r4
    106e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
    1072:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    1076:	cb 01       	movw	r24, r22
    1078:	b8 01       	movw	r22, r16
    107a:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    107e:	9f 93       	push	r25
    1080:	8f 93       	push	r24
    1082:	c3 01       	movw	r24, r6
    1084:	b2 01       	movw	r22, r4
    1086:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    108a:	cb 01       	movw	r24, r22
    108c:	b8 01       	movw	r22, r16
    108e:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    1092:	9f 93       	push	r25
    1094:	8f 93       	push	r24
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	40 e2       	ldi	r20, 0x20	; 32
    109c:	51 e4       	ldi	r21, 0x41	; 65
    109e:	c7 01       	movw	r24, r14
    10a0:	b6 01       	movw	r22, r12
    10a2:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
    10a6:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    10aa:	cb 01       	movw	r24, r22
    10ac:	b8 01       	movw	r22, r16
    10ae:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    10b2:	9f 93       	push	r25
    10b4:	8f 93       	push	r24
    10b6:	c7 01       	movw	r24, r14
    10b8:	b6 01       	movw	r22, r12
    10ba:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    10be:	cb 01       	movw	r24, r22
    10c0:	b8 01       	movw	r22, r16
    10c2:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    10c6:	9f 93       	push	r25
    10c8:	8f 93       	push	r24
    10ca:	9f 92       	push	r9
    10cc:	8f 92       	push	r8
    10ce:	bf 92       	push	r11
    10d0:	af 92       	push	r10
    10d2:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
    10d6:	4a c0       	rjmp	.+148    	; 0x116c <main+0x4c4>
						globalPID.desiredValue, (int)avgSpeed, globalPID.lastValue );
					}
					
					else
					{
						length = sprintf( tempBuffer, "%d.%d %d.%d %d %ld %d\r\n", (int)(globalPID.pGain) % 10, (int)(globalPID.pGain * 10) % 10, (int)(globalPID.dGain) % 10, (int)(globalPID.dGain * 10) % 10,
    10d8:	9f 93       	push	r25
    10da:	8f 93       	push	r24
    10dc:	80 91 e2 01 	lds	r24, 0x01E2
    10e0:	8f 93       	push	r24
    10e2:	80 91 e1 01 	lds	r24, 0x01E1
    10e6:	8f 93       	push	r24
    10e8:	80 91 e0 01 	lds	r24, 0x01E0
    10ec:	8f 93       	push	r24
    10ee:	80 91 df 01 	lds	r24, 0x01DF
    10f2:	8f 93       	push	r24
    10f4:	3f 93       	push	r19
    10f6:	2f 93       	push	r18
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	40 e2       	ldi	r20, 0x20	; 32
    10fe:	51 e4       	ldi	r21, 0x41	; 65
    1100:	c3 01       	movw	r24, r6
    1102:	b2 01       	movw	r22, r4
    1104:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
    1108:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    110c:	cb 01       	movw	r24, r22
    110e:	b8 01       	movw	r22, r16
    1110:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    1114:	9f 93       	push	r25
    1116:	8f 93       	push	r24
    1118:	c3 01       	movw	r24, r6
    111a:	b2 01       	movw	r22, r4
    111c:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    1120:	cb 01       	movw	r24, r22
    1122:	b8 01       	movw	r22, r16
    1124:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    1128:	9f 93       	push	r25
    112a:	8f 93       	push	r24
    112c:	20 e0       	ldi	r18, 0x00	; 0
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	40 e2       	ldi	r20, 0x20	; 32
    1132:	51 e4       	ldi	r21, 0x41	; 65
    1134:	c7 01       	movw	r24, r14
    1136:	b6 01       	movw	r22, r12
    1138:	0e 94 78 13 	call	0x26f0	; 0x26f0 <__mulsf3>
    113c:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    1140:	cb 01       	movw	r24, r22
    1142:	b8 01       	movw	r22, r16
    1144:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    1148:	9f 93       	push	r25
    114a:	8f 93       	push	r24
    114c:	c7 01       	movw	r24, r14
    114e:	b6 01       	movw	r22, r12
    1150:	0e 94 91 12 	call	0x2522	; 0x2522 <__fixsfsi>
    1154:	cb 01       	movw	r24, r22
    1156:	b8 01       	movw	r22, r16
    1158:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
    115c:	9f 93       	push	r25
    115e:	8f 93       	push	r24
    1160:	3f 92       	push	r3
    1162:	2f 92       	push	r2
    1164:	bf 92       	push	r11
    1166:	af 92       	push	r10
    1168:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <sprintf>
    116c:	0f b6       	in	r0, 0x3f	; 63
    116e:	f8 94       	cli
    1170:	de bf       	out	0x3e, r29	; 62
    1172:	0f be       	out	0x3f, r0	; 63
    1174:	cd bf       	out	0x3d, r28	; 61
						globalPID.desiredValue, global_counts_m2, globalPID.lastValue );
					}
					
					print_usb( tempBuffer, length );
    1176:	bc 01       	movw	r22, r24
    1178:	c5 01       	movw	r24, r10
    117a:	0e 94 5e 02 	call	0x4bc	; 0x4bc <print_usb>
				}
				
				if(interSleepCount >= myInterpolator[currentInter]->interValue)
    117e:	e0 91 21 02 	lds	r30, 0x0221
    1182:	f0 91 22 02 	lds	r31, 0x0222
    1186:	df 01       	movw	r26, r30
    1188:	aa 0f       	add	r26, r26
    118a:	bb 1f       	adc	r27, r27
    118c:	ac 57       	subi	r26, 0x7C	; 124
    118e:	bd 4f       	sbci	r27, 0xFD	; 253
    1190:	0d 90       	ld	r0, X+
    1192:	bc 91       	ld	r27, X
    1194:	a0 2d       	mov	r26, r0
    1196:	20 91 19 02 	lds	r18, 0x0219
    119a:	30 91 1a 02 	lds	r19, 0x021A
    119e:	12 96       	adiw	r26, 0x02	; 2
    11a0:	8d 91       	ld	r24, X+
    11a2:	9c 91       	ld	r25, X
    11a4:	13 97       	sbiw	r26, 0x03	; 3
    11a6:	28 17       	cp	r18, r24
    11a8:	39 07       	cpc	r19, r25
    11aa:	0c f4       	brge	.+2      	; 0x11ae <main+0x506>
    11ac:	b0 c0       	rjmp	.+352    	; 0x130e <main+0x666>
				{
					if(currentInter == 4)
    11ae:	e4 30       	cpi	r30, 0x04	; 4
    11b0:	f1 05       	cpc	r31, r1
    11b2:	19 f4       	brne	.+6      	; 0x11ba <main+0x512>
					{
						isSleeping = false;
    11b4:	10 92 1f 02 	sts	0x021F, r1
    11b8:	aa c0       	rjmp	.+340    	; 0x130e <main+0x666>
					}
					
					else
					{
						interSleepCount = 0;
    11ba:	10 92 1a 02 	sts	0x021A, r1
    11be:	10 92 19 02 	sts	0x0219, r1
						currentInter++;
    11c2:	31 96       	adiw	r30, 0x01	; 1
    11c4:	f0 93 22 02 	sts	0x0222, r31
    11c8:	e0 93 21 02 	sts	0x0221, r30
						
						if(myInterpolator[currentInter]->interType == 0)
    11cc:	ee 0f       	add	r30, r30
    11ce:	ff 1f       	adc	r31, r31
    11d0:	ec 57       	subi	r30, 0x7C	; 124
    11d2:	fd 4f       	sbci	r31, 0xFD	; 253
    11d4:	01 90       	ld	r0, Z+
    11d6:	f0 81       	ld	r31, Z
    11d8:	e0 2d       	mov	r30, r0
    11da:	80 81       	ld	r24, Z
    11dc:	91 81       	ldd	r25, Z+1	; 0x01
    11de:	89 2b       	or	r24, r25
    11e0:	09 f0       	breq	.+2      	; 0x11e4 <main+0x53c>
    11e2:	95 c0       	rjmp	.+298    	; 0x130e <main+0x666>
						{
							//Init new position
							int lastInterValue = 0;
							int lastInterCount = 0;
							isSleeping = false;
    11e4:	10 92 1f 02 	sts	0x021F, r1
							
							initPID();
    11e8:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <initPID>
							initPositionPID();
    11ec:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <initPositionPID>
							globalPID.desiredValue = myInterpolator[currentInter]->interValue + global_counts_m2;
    11f0:	e0 91 21 02 	lds	r30, 0x0221
    11f4:	f0 91 22 02 	lds	r31, 0x0222
    11f8:	ee 0f       	add	r30, r30
    11fa:	ff 1f       	adc	r31, r31
    11fc:	ec 57       	subi	r30, 0x7C	; 124
    11fe:	fd 4f       	sbci	r31, 0xFD	; 253
    1200:	01 90       	ld	r0, Z+
    1202:	f0 81       	ld	r31, Z
    1204:	e0 2d       	mov	r30, r0
    1206:	80 91 df 01 	lds	r24, 0x01DF
    120a:	90 91 e0 01 	lds	r25, 0x01E0
    120e:	22 81       	ldd	r18, Z+2	; 0x02
    1210:	33 81       	ldd	r19, Z+3	; 0x03
    1212:	82 0f       	add	r24, r18
    1214:	93 1f       	adc	r25, r19
    1216:	90 93 60 02 	sts	0x0260, r25
    121a:	80 93 5f 02 	sts	0x025F, r24
							execute = true;
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	80 93 e7 01 	sts	0x01E7, r24
    1224:	74 c0       	rjmp	.+232    	; 0x130e <main+0x666>
						}
					}
				}
			}
			
			else if(myInterpolator[currentInter]->interType == 0) // PidUpdate
    1226:	89 2b       	or	r24, r25
    1228:	09 f0       	breq	.+2      	; 0x122c <main+0x584>
    122a:	71 c0       	rjmp	.+226    	; 0x130e <main+0x666>
			{
				//detect if in position
				if(lastInterValue == globalPID.lastValue)
    122c:	80 91 62 02 	lds	r24, 0x0262
    1230:	90 91 63 02 	lds	r25, 0x0263
    1234:	20 91 1d 02 	lds	r18, 0x021D
    1238:	30 91 1e 02 	lds	r19, 0x021E
    123c:	28 17       	cp	r18, r24
    123e:	39 07       	cpc	r19, r25
    1240:	51 f4       	brne	.+20     	; 0x1256 <main+0x5ae>
				{
					lastInterCount++;
    1242:	80 91 1b 02 	lds	r24, 0x021B
    1246:	90 91 1c 02 	lds	r25, 0x021C
    124a:	01 96       	adiw	r24, 0x01	; 1
    124c:	90 93 1c 02 	sts	0x021C, r25
    1250:	80 93 1b 02 	sts	0x021B, r24
    1254:	08 c0       	rjmp	.+16     	; 0x1266 <main+0x5be>
				}
				
				else
				{
					lastInterValue = globalPID.lastValue;
    1256:	90 93 1e 02 	sts	0x021E, r25
    125a:	80 93 1d 02 	sts	0x021D, r24
					lastInterCount = 0;
    125e:	10 92 1c 02 	sts	0x021C, r1
    1262:	10 92 1b 02 	sts	0x021B, r1
				}
				
				if(abs(lastInterValue) < 8 && lastInterCount >= 10)
    1266:	80 91 1d 02 	lds	r24, 0x021D
    126a:	90 91 1e 02 	lds	r25, 0x021E
    126e:	07 96       	adiw	r24, 0x07	; 7
    1270:	0f 97       	sbiw	r24, 0x0f	; 15
    1272:	08 f0       	brcs	.+2      	; 0x1276 <main+0x5ce>
    1274:	4c c0       	rjmp	.+152    	; 0x130e <main+0x666>
    1276:	80 91 1b 02 	lds	r24, 0x021B
    127a:	90 91 1c 02 	lds	r25, 0x021C
    127e:	0a 97       	sbiw	r24, 0x0a	; 10
    1280:	0c f4       	brge	.+2      	; 0x1284 <main+0x5dc>
    1282:	45 c0       	rjmp	.+138    	; 0x130e <main+0x666>
				{
					if(currentInter == 4)
    1284:	e4 30       	cpi	r30, 0x04	; 4
    1286:	f1 05       	cpc	r31, r1
    1288:	19 f4       	brne	.+6      	; 0x1290 <main+0x5e8>
					{
						execute = false;
    128a:	10 92 e7 01 	sts	0x01E7, r1
    128e:	3f c0       	rjmp	.+126    	; 0x130e <main+0x666>
					}
					
					else
					{
						currentInter++;
    1290:	31 96       	adiw	r30, 0x01	; 1
    1292:	f0 93 22 02 	sts	0x0222, r31
    1296:	e0 93 21 02 	sts	0x0221, r30
						
						if(myInterpolator[currentInter]->interType == 0)
    129a:	ee 0f       	add	r30, r30
    129c:	ff 1f       	adc	r31, r31
    129e:	ec 57       	subi	r30, 0x7C	; 124
    12a0:	fd 4f       	sbci	r31, 0xFD	; 253
    12a2:	01 90       	ld	r0, Z+
    12a4:	f0 81       	ld	r31, Z
    12a6:	e0 2d       	mov	r30, r0
    12a8:	80 81       	ld	r24, Z
    12aa:	91 81       	ldd	r25, Z+1	; 0x01
    12ac:	00 97       	sbiw	r24, 0x00	; 0
    12ae:	e1 f4       	brne	.+56     	; 0x12e8 <main+0x640>
						{
							//Init new position
							int lastInterValue = 0;
							int lastInterCount = 0;
							
							initPID();
    12b0:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <initPID>
							initPositionPID();
    12b4:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <initPositionPID>
							globalPID.desiredValue = myInterpolator[currentInter]->interValue + global_counts_m2;
    12b8:	e0 91 21 02 	lds	r30, 0x0221
    12bc:	f0 91 22 02 	lds	r31, 0x0222
    12c0:	ee 0f       	add	r30, r30
    12c2:	ff 1f       	adc	r31, r31
    12c4:	ec 57       	subi	r30, 0x7C	; 124
    12c6:	fd 4f       	sbci	r31, 0xFD	; 253
    12c8:	01 90       	ld	r0, Z+
    12ca:	f0 81       	ld	r31, Z
    12cc:	e0 2d       	mov	r30, r0
    12ce:	80 91 df 01 	lds	r24, 0x01DF
    12d2:	90 91 e0 01 	lds	r25, 0x01E0
    12d6:	22 81       	ldd	r18, Z+2	; 0x02
    12d8:	33 81       	ldd	r19, Z+3	; 0x03
    12da:	82 0f       	add	r24, r18
    12dc:	93 1f       	adc	r25, r19
    12de:	90 93 60 02 	sts	0x0260, r25
    12e2:	80 93 5f 02 	sts	0x025F, r24
    12e6:	13 c0       	rjmp	.+38     	; 0x130e <main+0x666>
						}
						
						else if(myInterpolator[currentInter]->interType == 1)
    12e8:	01 97       	sbiw	r24, 0x01	; 1
    12ea:	89 f4       	brne	.+34     	; 0x130e <main+0x666>
						{
							isSleeping = true;
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	80 93 1f 02 	sts	0x021F, r24
							interSleepCount = 0;
    12f2:	10 92 1a 02 	sts	0x021A, r1
    12f6:	10 92 19 02 	sts	0x0219, r1
							execute = false;
    12fa:	10 92 e7 01 	sts	0x01E7, r1
							globalPID.lastValue = 0;
    12fe:	10 92 63 02 	sts	0x0263, r1
    1302:	10 92 62 02 	sts	0x0262, r1
							setMotor(0);
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 8f 01 	call	0x31e	; 0x31e <setMotor>
						}
					}
				}
			}
			
			runInter = false;
    130e:	10 92 20 02 	sts	0x0220, r1
    1312:	04 cd       	rjmp	.-1528   	; 0xd1c <main+0x74>

00001314 <void_getchar>:
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	08 95       	ret

0000131a <delayMicroseconds.clone.0>:
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	6f 93       	push	r22
    1320:	64 e0       	ldi	r22, 0x04	; 4
    1322:	6a 95       	dec	r22
    1324:	f1 f7       	brne	.-4      	; 0x1322 <delayMicroseconds.clone.0+0x8>
    1326:	6f 91       	pop	r22
    1328:	01 97       	sbiw	r24, 0x01	; 1
    132a:	c9 f7       	brne	.-14     	; 0x131e <delayMicroseconds.clone.0+0x4>
    132c:	08 95       	ret

0000132e <_ZN12OrangutanLCD8busyWaitEv>:
    132e:	0f 93       	push	r16
    1330:	1f 93       	push	r17
    1332:	cf 93       	push	r28
    1334:	df 93       	push	r29
    1336:	17 b1       	in	r17, 0x07	; 7
    1338:	3d 98       	cbi	0x07, 5	; 7
    133a:	28 98       	cbi	0x05, 0	; 5
    133c:	29 9a       	sbi	0x05, 1	; 5
    133e:	c0 e0       	ldi	r28, 0x00	; 0
    1340:	d0 e0       	ldi	r29, 0x00	; 0
    1342:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    1346:	2a 9a       	sbi	0x05, 2	; 5
    1348:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    134c:	06 b1       	in	r16, 0x06	; 6
    134e:	2a 98       	cbi	0x05, 2	; 5
    1350:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    1354:	2a 9a       	sbi	0x05, 2	; 5
    1356:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    135a:	2a 98       	cbi	0x05, 2	; 5
    135c:	24 96       	adiw	r28, 0x04	; 4
    135e:	05 ff       	sbrs	r16, 5
    1360:	10 c0       	rjmp	.+32     	; 0x1382 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    1362:	9e 01       	movw	r18, r28
    1364:	40 e0       	ldi	r20, 0x00	; 0
    1366:	50 e0       	ldi	r21, 0x00	; 0
    1368:	80 91 c2 01 	lds	r24, 0x01C2
    136c:	90 91 c3 01 	lds	r25, 0x01C3
    1370:	a0 91 c4 01 	lds	r26, 0x01C4
    1374:	b0 91 c5 01 	lds	r27, 0x01C5
    1378:	28 17       	cp	r18, r24
    137a:	39 07       	cpc	r19, r25
    137c:	4a 07       	cpc	r20, r26
    137e:	5b 07       	cpc	r21, r27
    1380:	00 f3       	brcs	.-64     	; 0x1342 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    1382:	9e 01       	movw	r18, r28
    1384:	40 e0       	ldi	r20, 0x00	; 0
    1386:	50 e0       	ldi	r21, 0x00	; 0
    1388:	80 91 c2 01 	lds	r24, 0x01C2
    138c:	90 91 c3 01 	lds	r25, 0x01C3
    1390:	a0 91 c4 01 	lds	r26, 0x01C4
    1394:	b0 91 c5 01 	lds	r27, 0x01C5
    1398:	28 17       	cp	r18, r24
    139a:	39 07       	cpc	r19, r25
    139c:	4a 07       	cpc	r20, r26
    139e:	5b 07       	cpc	r21, r27
    13a0:	28 f0       	brcs	.+10     	; 0x13ac <_ZN12OrangutanLCD8busyWaitEv+0x7e>
    13a2:	82 e3       	ldi	r24, 0x32	; 50
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	a0 e0       	ldi	r26, 0x00	; 0
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	04 c0       	rjmp	.+8      	; 0x13b4 <_ZN12OrangutanLCD8busyWaitEv+0x86>
    13ac:	80 e3       	ldi	r24, 0x30	; 48
    13ae:	95 e7       	ldi	r25, 0x75	; 117
    13b0:	a0 e0       	ldi	r26, 0x00	; 0
    13b2:	b0 e0       	ldi	r27, 0x00	; 0
    13b4:	80 93 c2 01 	sts	0x01C2, r24
    13b8:	90 93 c3 01 	sts	0x01C3, r25
    13bc:	a0 93 c4 01 	sts	0x01C4, r26
    13c0:	b0 93 c5 01 	sts	0x01C5, r27
    13c4:	17 b9       	out	0x07, r17	; 7
    13c6:	df 91       	pop	r29
    13c8:	cf 91       	pop	r28
    13ca:	1f 91       	pop	r17
    13cc:	0f 91       	pop	r16
    13ce:	08 95       	ret

000013d0 <_ZN12OrangutanLCD8sendDataEh>:
    13d0:	28 b1       	in	r18, 0x08	; 8
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	8f 70       	andi	r24, 0x0F	; 15
    13d6:	90 70       	andi	r25, 0x00	; 0
    13d8:	88 0f       	add	r24, r24
    13da:	99 1f       	adc	r25, r25
    13dc:	88 0f       	add	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	23 7c       	andi	r18, 0xC3	; 195
    13e2:	28 2b       	or	r18, r24
    13e4:	28 b9       	out	0x08, r18	; 8
    13e6:	2a 9a       	sbi	0x05, 2	; 5
    13e8:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    13ec:	2a 98       	cbi	0x05, 2	; 5
    13ee:	0e 94 8d 09 	call	0x131a	; 0x131a <delayMicroseconds.clone.0>
    13f2:	08 95       	ret

000013f4 <_ZN12OrangutanLCD4sendEhhh>:
    13f4:	a2 e0       	ldi	r26, 0x02	; 2
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	e0 e0       	ldi	r30, 0x00	; 0
    13fa:	fa e0       	ldi	r31, 0x0A	; 10
    13fc:	0c 94 39 14 	jmp	0x2872	; 0x2872 <__prologue_saves__+0x1a>
    1400:	18 2f       	mov	r17, r24
    1402:	4a 83       	std	Y+2, r20	; 0x02
    1404:	69 83       	std	Y+1, r22	; 0x01
    1406:	0e 94 75 0a 	call	0x14ea	; 0x14ea <_ZN12OrangutanLCD4initEv>
    140a:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN12OrangutanLCD8busyWaitEv>
    140e:	f7 b0       	in	r15, 0x07	; 7
    1410:	08 b1       	in	r16, 0x08	; 8
    1412:	29 98       	cbi	0x05, 1	; 5
    1414:	69 81       	ldd	r22, Y+1	; 0x01
    1416:	4a 81       	ldd	r20, Y+2	; 0x02
    1418:	66 23       	and	r22, r22
    141a:	11 f0       	breq	.+4      	; 0x1420 <_ZN12OrangutanLCD4sendEhhh+0x2c>
    141c:	28 9a       	sbi	0x05, 0	; 5
    141e:	01 c0       	rjmp	.+2      	; 0x1422 <_ZN12OrangutanLCD4sendEhhh+0x2e>
    1420:	28 98       	cbi	0x05, 0	; 5
    1422:	87 b1       	in	r24, 0x07	; 7
    1424:	8c 63       	ori	r24, 0x3C	; 60
    1426:	87 b9       	out	0x07, r24	; 7
    1428:	41 30       	cpi	r20, 0x01	; 1
    142a:	29 f0       	breq	.+10     	; 0x1436 <_ZN12OrangutanLCD4sendEhhh+0x42>
    142c:	81 2f       	mov	r24, r17
    142e:	82 95       	swap	r24
    1430:	8f 70       	andi	r24, 0x0F	; 15
    1432:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <_ZN12OrangutanLCD8sendDataEh>
    1436:	81 2f       	mov	r24, r17
    1438:	8f 70       	andi	r24, 0x0F	; 15
    143a:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <_ZN12OrangutanLCD8sendDataEh>
    143e:	f7 b8       	out	0x07, r15	; 7
    1440:	08 b9       	out	0x08, r16	; 8
    1442:	22 96       	adiw	r28, 0x02	; 2
    1444:	e5 e0       	ldi	r30, 0x05	; 5
    1446:	0c 94 55 14 	jmp	0x28aa	; 0x28aa <__epilogue_restores__+0x1a>

0000144a <_ZN12OrangutanLCD8send_cmdEh>:
    144a:	60 e0       	ldi	r22, 0x00	; 0
    144c:	42 e0       	ldi	r20, 0x02	; 2
    144e:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <_ZN12OrangutanLCD4sendEhhh>
    1452:	08 95       	ret

00001454 <_ZN12OrangutanLCD9send_dataEh>:
    1454:	61 e0       	ldi	r22, 0x01	; 1
    1456:	42 e0       	ldi	r20, 0x02	; 2
    1458:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <_ZN12OrangutanLCD4sendEhhh>
    145c:	08 95       	ret

0000145e <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	41 e0       	ldi	r20, 0x01	; 1
    1462:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <_ZN12OrangutanLCD4sendEhhh>
    1466:	08 95       	ret

00001468 <_ZN12OrangutanLCD5init2Ev>:
    1468:	3d 98       	cbi	0x07, 5	; 7
    146a:	45 9a       	sbi	0x08, 5	; 8
    146c:	80 e3       	ldi	r24, 0x30	; 48
    146e:	95 e7       	ldi	r25, 0x75	; 117
    1470:	a0 e0       	ldi	r26, 0x00	; 0
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	80 93 c2 01 	sts	0x01C2, r24
    1478:	90 93 c3 01 	sts	0x01C3, r25
    147c:	a0 93 c4 01 	sts	0x01C4, r26
    1480:	b0 93 c5 01 	sts	0x01C5, r27
    1484:	20 9a       	sbi	0x04, 0	; 4
    1486:	21 9a       	sbi	0x04, 1	; 4
    1488:	22 9a       	sbi	0x04, 2	; 4
    148a:	8e e1       	ldi	r24, 0x1E	; 30
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	0e 94 49 11 	call	0x2292	; 0x2292 <delay_ms>
    1492:	83 e0       	ldi	r24, 0x03	; 3
    1494:	0e 94 2f 0a 	call	0x145e	; 0x145e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1498:	86 e0       	ldi	r24, 0x06	; 6
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	0e 94 49 11 	call	0x2292	; 0x2292 <delay_ms>
    14a0:	83 e0       	ldi	r24, 0x03	; 3
    14a2:	0e 94 2f 0a 	call	0x145e	; 0x145e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	0e 94 49 11 	call	0x2292	; 0x2292 <delay_ms>
    14ae:	83 e0       	ldi	r24, 0x03	; 3
    14b0:	0e 94 2f 0a 	call	0x145e	; 0x145e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    14b4:	82 e0       	ldi	r24, 0x02	; 2
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	0e 94 49 11 	call	0x2292	; 0x2292 <delay_ms>
    14bc:	82 e0       	ldi	r24, 0x02	; 2
    14be:	0e 94 2f 0a 	call	0x145e	; 0x145e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    14c2:	82 e0       	ldi	r24, 0x02	; 2
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	0e 94 49 11 	call	0x2292	; 0x2292 <delay_ms>
    14ca:	88 e2       	ldi	r24, 0x28	; 40
    14cc:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    14d0:	88 e0       	ldi	r24, 0x08	; 8
    14d2:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    14d6:	81 e0       	ldi	r24, 0x01	; 1
    14d8:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    14dc:	86 e0       	ldi	r24, 0x06	; 6
    14de:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    14e2:	8c e0       	ldi	r24, 0x0C	; 12
    14e4:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    14e8:	08 95       	ret

000014ea <_ZN12OrangutanLCD4initEv>:
    14ea:	80 91 c6 01 	lds	r24, 0x01C6
    14ee:	88 23       	and	r24, r24
    14f0:	29 f4       	brne	.+10     	; 0x14fc <_ZN12OrangutanLCD4initEv+0x12>
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	80 93 c6 01 	sts	0x01C6, r24
    14f8:	0e 94 34 0a 	call	0x1468	; 0x1468 <_ZN12OrangutanLCD5init2Ev>
    14fc:	08 95       	ret

000014fe <_ZN12OrangutanLCD5clearEv>:
    14fe:	81 e0       	ldi	r24, 0x01	; 1
    1500:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    1504:	80 91 be 01 	lds	r24, 0x01BE
    1508:	90 91 bf 01 	lds	r25, 0x01BF
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	11 f1       	breq	.+68     	; 0x1554 <_ZN12OrangutanLCD5clearEv+0x56>
    1510:	a0 e0       	ldi	r26, 0x00	; 0
    1512:	b0 e2       	ldi	r27, 0x20	; 32
    1514:	08 c0       	rjmp	.+16     	; 0x1526 <_ZN12OrangutanLCD5clearEv+0x28>
    1516:	e0 91 be 01 	lds	r30, 0x01BE
    151a:	f0 91 bf 01 	lds	r31, 0x01BF
    151e:	e2 0f       	add	r30, r18
    1520:	f3 1f       	adc	r31, r19
    1522:	b0 83       	st	Z, r27
    1524:	af 5f       	subi	r26, 0xFF	; 255
    1526:	2a 2f       	mov	r18, r26
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	80 91 00 01 	lds	r24, 0x0100
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	01 97       	sbiw	r24, 0x01	; 1
    1532:	60 91 01 01 	lds	r22, 0x0101
    1536:	70 e0       	ldi	r23, 0x00	; 0
    1538:	86 9f       	mul	r24, r22
    153a:	a0 01       	movw	r20, r0
    153c:	87 9f       	mul	r24, r23
    153e:	50 0d       	add	r21, r0
    1540:	96 9f       	mul	r25, r22
    1542:	50 0d       	add	r21, r0
    1544:	11 24       	eor	r1, r1
    1546:	24 17       	cp	r18, r20
    1548:	35 07       	cpc	r19, r21
    154a:	2c f3       	brlt	.-54     	; 0x1516 <_ZN12OrangutanLCD5clearEv+0x18>
    154c:	10 92 c1 01 	sts	0x01C1, r1
    1550:	10 92 c0 01 	sts	0x01C0, r1
    1554:	08 95       	ret

00001556 <clear>:
    1556:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <_ZN12OrangutanLCD5clearEv>
    155a:	08 95       	ret

0000155c <_ZN12OrangutanLCD5printEm>:
    155c:	aa e0       	ldi	r26, 0x0A	; 10
    155e:	b0 e0       	ldi	r27, 0x00	; 0
    1560:	e4 eb       	ldi	r30, 0xB4	; 180
    1562:	fa e0       	ldi	r31, 0x0A	; 10
    1564:	0c 94 34 14 	jmp	0x2868	; 0x2868 <__prologue_saves__+0x10>
    1568:	9b 01       	movw	r18, r22
    156a:	ac 01       	movw	r20, r24
    156c:	1a e0       	ldi	r17, 0x0A	; 10
    156e:	6a e0       	ldi	r22, 0x0A	; 10
    1570:	c6 2e       	mov	r12, r22
    1572:	d1 2c       	mov	r13, r1
    1574:	e1 2c       	mov	r14, r1
    1576:	f1 2c       	mov	r15, r1
    1578:	5e 01       	movw	r10, r28
    157a:	08 94       	sec
    157c:	a1 1c       	adc	r10, r1
    157e:	b1 1c       	adc	r11, r1
    1580:	02 2f       	mov	r16, r18
    1582:	ca 01       	movw	r24, r20
    1584:	b9 01       	movw	r22, r18
    1586:	a7 01       	movw	r20, r14
    1588:	96 01       	movw	r18, r12
    158a:	0e 94 ff 13 	call	0x27fe	; 0x27fe <__udivmodsi4>
    158e:	11 50       	subi	r17, 0x01	; 1
    1590:	f5 01       	movw	r30, r10
    1592:	e1 0f       	add	r30, r17
    1594:	f1 1d       	adc	r31, r1
    1596:	00 5d       	subi	r16, 0xD0	; 208
    1598:	92 2f       	mov	r25, r18
    159a:	99 0f       	add	r25, r25
    159c:	89 2f       	mov	r24, r25
    159e:	88 0f       	add	r24, r24
    15a0:	88 0f       	add	r24, r24
    15a2:	89 0f       	add	r24, r25
    15a4:	08 1b       	sub	r16, r24
    15a6:	00 83       	st	Z, r16
    15a8:	21 15       	cp	r18, r1
    15aa:	31 05       	cpc	r19, r1
    15ac:	41 05       	cpc	r20, r1
    15ae:	51 05       	cpc	r21, r1
    15b0:	39 f7       	brne	.-50     	; 0x1580 <_ZN12OrangutanLCD5printEm+0x24>
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <_ZN12OrangutanLCD5printEm+0x68>
    15b4:	f6 01       	movw	r30, r12
    15b6:	e1 0f       	add	r30, r17
    15b8:	f1 1d       	adc	r31, r1
    15ba:	80 81       	ld	r24, Z
    15bc:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    15c0:	1f 5f       	subi	r17, 0xFF	; 255
    15c2:	04 c0       	rjmp	.+8      	; 0x15cc <_ZN12OrangutanLCD5printEm+0x70>
    15c4:	6e 01       	movw	r12, r28
    15c6:	08 94       	sec
    15c8:	c1 1c       	adc	r12, r1
    15ca:	d1 1c       	adc	r13, r1
    15cc:	1a 30       	cpi	r17, 0x0A	; 10
    15ce:	90 f3       	brcs	.-28     	; 0x15b4 <_ZN12OrangutanLCD5printEm+0x58>
    15d0:	2a 96       	adiw	r28, 0x0a	; 10
    15d2:	ea e0       	ldi	r30, 0x0A	; 10
    15d4:	0c 94 50 14 	jmp	0x28a0	; 0x28a0 <__epilogue_restores__+0x10>

000015d8 <_ZN12OrangutanLCD5printEl>:
    15d8:	ef 92       	push	r14
    15da:	ff 92       	push	r15
    15dc:	0f 93       	push	r16
    15de:	1f 93       	push	r17
    15e0:	7b 01       	movw	r14, r22
    15e2:	8c 01       	movw	r16, r24
    15e4:	97 ff       	sbrs	r25, 7
    15e6:	0b c0       	rjmp	.+22     	; 0x15fe <_ZN12OrangutanLCD5printEl+0x26>
    15e8:	10 95       	com	r17
    15ea:	00 95       	com	r16
    15ec:	f0 94       	com	r15
    15ee:	e0 94       	com	r14
    15f0:	e1 1c       	adc	r14, r1
    15f2:	f1 1c       	adc	r15, r1
    15f4:	01 1d       	adc	r16, r1
    15f6:	11 1d       	adc	r17, r1
    15f8:	8d e2       	ldi	r24, 0x2D	; 45
    15fa:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    15fe:	c8 01       	movw	r24, r16
    1600:	b7 01       	movw	r22, r14
    1602:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN12OrangutanLCD5printEm>
    1606:	1f 91       	pop	r17
    1608:	0f 91       	pop	r16
    160a:	ff 90       	pop	r15
    160c:	ef 90       	pop	r14
    160e:	08 95       	ret

00001610 <print_long>:
    1610:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <_ZN12OrangutanLCD5printEl>
    1614:	08 95       	ret

00001616 <_ZN12OrangutanLCD6gotoXYEhh>:
    1616:	a5 e0       	ldi	r26, 0x05	; 5
    1618:	b0 e0       	ldi	r27, 0x00	; 0
    161a:	e1 e1       	ldi	r30, 0x11	; 17
    161c:	fb e0       	ldi	r31, 0x0B	; 11
    161e:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__prologue_saves__+0x1e>
    1622:	18 2f       	mov	r17, r24
    1624:	80 e8       	ldi	r24, 0x80	; 128
    1626:	89 83       	std	Y+1, r24	; 0x01
    1628:	80 ec       	ldi	r24, 0xC0	; 192
    162a:	8a 83       	std	Y+2, r24	; 0x02
    162c:	84 e9       	ldi	r24, 0x94	; 148
    162e:	8b 83       	std	Y+3, r24	; 0x03
    1630:	84 ed       	ldi	r24, 0xD4	; 212
    1632:	8c 83       	std	Y+4, r24	; 0x04
    1634:	fe 01       	movw	r30, r28
    1636:	e6 0f       	add	r30, r22
    1638:	f1 1d       	adc	r31, r1
    163a:	81 81       	ldd	r24, Z+1	; 0x01
    163c:	81 0f       	add	r24, r17
    163e:	6d 83       	std	Y+5, r22	; 0x05
    1640:	0e 94 25 0a 	call	0x144a	; 0x144a <_ZN12OrangutanLCD8send_cmdEh>
    1644:	10 93 c1 01 	sts	0x01C1, r17
    1648:	6d 81       	ldd	r22, Y+5	; 0x05
    164a:	60 93 c0 01 	sts	0x01C0, r22
    164e:	25 96       	adiw	r28, 0x05	; 5
    1650:	e3 e0       	ldi	r30, 0x03	; 3
    1652:	0c 94 57 14 	jmp	0x28ae	; 0x28ae <__epilogue_restores__+0x1e>

00001656 <lcd_goto_xy>:
    1656:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN12OrangutanLCD6gotoXYEhh>
    165a:	08 95       	ret

0000165c <lcd_putchar>:
    165c:	a0 e0       	ldi	r26, 0x00	; 0
    165e:	b0 e0       	ldi	r27, 0x00	; 0
    1660:	e4 e3       	ldi	r30, 0x34	; 52
    1662:	fb e0       	ldi	r31, 0x0B	; 11
    1664:	0c 94 36 14 	jmp	0x286c	; 0x286c <__prologue_saves__+0x14>
    1668:	d8 2e       	mov	r13, r24
    166a:	80 91 be 01 	lds	r24, 0x01BE
    166e:	90 91 bf 01 	lds	r25, 0x01BF
    1672:	00 97       	sbiw	r24, 0x00	; 0
    1674:	09 f4       	brne	.+2      	; 0x1678 <lcd_putchar+0x1c>
    1676:	fa c0       	rjmp	.+500    	; 0x186c <lcd_putchar+0x210>
    1678:	2d 2d       	mov	r18, r13
    167a:	2a 30       	cpi	r18, 0x0A	; 10
    167c:	09 f4       	brne	.+2      	; 0x1680 <lcd_putchar+0x24>
    167e:	43 c0       	rjmp	.+134    	; 0x1706 <lcd_putchar+0xaa>
    1680:	28 30       	cpi	r18, 0x08	; 8
    1682:	c9 f4       	brne	.+50     	; 0x16b6 <lcd_putchar+0x5a>
    1684:	80 91 c1 01 	lds	r24, 0x01C1
    1688:	81 50       	subi	r24, 0x01	; 1
    168a:	80 93 c1 01 	sts	0x01C1, r24
    168e:	8f 3f       	cpi	r24, 0xFF	; 255
    1690:	51 f4       	brne	.+20     	; 0x16a6 <lcd_putchar+0x4a>
    1692:	80 91 c0 01 	lds	r24, 0x01C0
    1696:	81 50       	subi	r24, 0x01	; 1
    1698:	80 93 c0 01 	sts	0x01C0, r24
    169c:	80 91 01 01 	lds	r24, 0x0101
    16a0:	81 50       	subi	r24, 0x01	; 1
    16a2:	80 93 c1 01 	sts	0x01C1, r24
    16a6:	80 91 c0 01 	lds	r24, 0x01C0
    16aa:	8f 3f       	cpi	r24, 0xFF	; 255
    16ac:	09 f0       	breq	.+2      	; 0x16b0 <lcd_putchar+0x54>
    16ae:	d8 c0       	rjmp	.+432    	; 0x1860 <lcd_putchar+0x204>
    16b0:	10 92 c0 01 	sts	0x01C0, r1
    16b4:	d3 c0       	rjmp	.+422    	; 0x185c <lcd_putchar+0x200>
    16b6:	8d 2d       	mov	r24, r13
    16b8:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    16bc:	80 91 c0 01 	lds	r24, 0x01C0
    16c0:	88 23       	and	r24, r24
    16c2:	b9 f0       	breq	.+46     	; 0x16f2 <lcd_putchar+0x96>
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	01 97       	sbiw	r24, 0x01	; 1
    16c8:	40 91 01 01 	lds	r20, 0x0101
    16cc:	50 e0       	ldi	r21, 0x00	; 0
    16ce:	84 9f       	mul	r24, r20
    16d0:	90 01       	movw	r18, r0
    16d2:	85 9f       	mul	r24, r21
    16d4:	30 0d       	add	r19, r0
    16d6:	94 9f       	mul	r25, r20
    16d8:	30 0d       	add	r19, r0
    16da:	11 24       	eor	r1, r1
    16dc:	80 91 c1 01 	lds	r24, 0x01C1
    16e0:	e0 91 be 01 	lds	r30, 0x01BE
    16e4:	f0 91 bf 01 	lds	r31, 0x01BF
    16e8:	e2 0f       	add	r30, r18
    16ea:	f3 1f       	adc	r31, r19
    16ec:	e8 0f       	add	r30, r24
    16ee:	f1 1d       	adc	r31, r1
    16f0:	d0 82       	st	Z, r13
    16f2:	80 91 c1 01 	lds	r24, 0x01C1
    16f6:	8f 5f       	subi	r24, 0xFF	; 255
    16f8:	80 93 c1 01 	sts	0x01C1, r24
    16fc:	90 91 01 01 	lds	r25, 0x0101
    1700:	89 17       	cp	r24, r25
    1702:	09 f0       	breq	.+2      	; 0x1706 <lcd_putchar+0xaa>
    1704:	b3 c0       	rjmp	.+358    	; 0x186c <lcd_putchar+0x210>
    1706:	40 91 c0 01 	lds	r20, 0x01C0
    170a:	24 2f       	mov	r18, r20
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	80 91 00 01 	lds	r24, 0x0100
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	28 17       	cp	r18, r24
    1718:	39 07       	cpc	r19, r25
    171a:	09 f0       	breq	.+2      	; 0x171e <lcd_putchar+0xc2>
    171c:	9c c0       	rjmp	.+312    	; 0x1856 <lcd_putchar+0x1fa>
    171e:	c0 e0       	ldi	r28, 0x00	; 0
    1720:	d0 e0       	ldi	r29, 0x00	; 0
    1722:	41 c0       	rjmp	.+130    	; 0x17a6 <lcd_putchar+0x14a>
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	6c 2f       	mov	r22, r28
    1728:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN12OrangutanLCD6gotoXYEhh>
    172c:	cc 24       	eor	r12, r12
    172e:	8e 01       	movw	r16, r28
    1730:	0f 5f       	subi	r16, 0xFF	; 255
    1732:	1f 4f       	sbci	r17, 0xFF	; 255
    1734:	33 c0       	rjmp	.+102    	; 0x179c <lcd_putchar+0x140>
    1736:	ec 2c       	mov	r14, r12
    1738:	ff 24       	eor	r15, r15
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	c2 9f       	mul	r28, r18
    173e:	c0 01       	movw	r24, r0
    1740:	c3 9f       	mul	r28, r19
    1742:	90 0d       	add	r25, r0
    1744:	d2 9f       	mul	r29, r18
    1746:	90 0d       	add	r25, r0
    1748:	11 24       	eor	r1, r1
    174a:	e0 91 be 01 	lds	r30, 0x01BE
    174e:	f0 91 bf 01 	lds	r31, 0x01BF
    1752:	ee 0d       	add	r30, r14
    1754:	ff 1d       	adc	r31, r15
    1756:	e8 0f       	add	r30, r24
    1758:	f9 1f       	adc	r31, r25
    175a:	80 81       	ld	r24, Z
    175c:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    1760:	80 91 be 01 	lds	r24, 0x01BE
    1764:	90 91 bf 01 	lds	r25, 0x01BF
    1768:	20 91 01 01 	lds	r18, 0x0101
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	c2 9f       	mul	r28, r18
    1770:	f0 01       	movw	r30, r0
    1772:	c3 9f       	mul	r28, r19
    1774:	f0 0d       	add	r31, r0
    1776:	d2 9f       	mul	r29, r18
    1778:	f0 0d       	add	r31, r0
    177a:	11 24       	eor	r1, r1
    177c:	8e 0d       	add	r24, r14
    177e:	9f 1d       	adc	r25, r15
    1780:	e8 0f       	add	r30, r24
    1782:	f9 1f       	adc	r31, r25
    1784:	02 9f       	mul	r16, r18
    1786:	d0 01       	movw	r26, r0
    1788:	03 9f       	mul	r16, r19
    178a:	b0 0d       	add	r27, r0
    178c:	12 9f       	mul	r17, r18
    178e:	b0 0d       	add	r27, r0
    1790:	11 24       	eor	r1, r1
    1792:	a8 0f       	add	r26, r24
    1794:	b9 1f       	adc	r27, r25
    1796:	8c 91       	ld	r24, X
    1798:	80 83       	st	Z, r24
    179a:	c3 94       	inc	r12
    179c:	20 91 01 01 	lds	r18, 0x0101
    17a0:	c2 16       	cp	r12, r18
    17a2:	48 f2       	brcs	.-110    	; 0x1736 <lcd_putchar+0xda>
    17a4:	e8 01       	movw	r28, r16
    17a6:	60 91 00 01 	lds	r22, 0x0100
    17aa:	86 2f       	mov	r24, r22
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	02 97       	sbiw	r24, 0x02	; 2
    17b0:	c8 17       	cp	r28, r24
    17b2:	d9 07       	cpc	r29, r25
    17b4:	0c f4       	brge	.+2      	; 0x17b8 <lcd_putchar+0x15c>
    17b6:	b6 cf       	rjmp	.-148    	; 0x1724 <lcd_putchar+0xc8>
    17b8:	62 30       	cpi	r22, 0x02	; 2
    17ba:	e0 f1       	brcs	.+120    	; 0x1834 <lcd_putchar+0x1d8>
    17bc:	62 50       	subi	r22, 0x02	; 2
    17be:	80 e0       	ldi	r24, 0x00	; 0
    17c0:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN12OrangutanLCD6gotoXYEhh>
    17c4:	00 e0       	ldi	r16, 0x00	; 0
    17c6:	10 e2       	ldi	r17, 0x20	; 32
    17c8:	31 c0       	rjmp	.+98     	; 0x182c <lcd_putchar+0x1d0>
    17ca:	c0 2f       	mov	r28, r16
    17cc:	d0 e0       	ldi	r29, 0x00	; 0
    17ce:	80 91 00 01 	lds	r24, 0x0100
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	02 97       	sbiw	r24, 0x02	; 2
    17d6:	50 e0       	ldi	r21, 0x00	; 0
    17d8:	84 9f       	mul	r24, r20
    17da:	90 01       	movw	r18, r0
    17dc:	85 9f       	mul	r24, r21
    17de:	30 0d       	add	r19, r0
    17e0:	94 9f       	mul	r25, r20
    17e2:	30 0d       	add	r19, r0
    17e4:	11 24       	eor	r1, r1
    17e6:	e0 91 be 01 	lds	r30, 0x01BE
    17ea:	f0 91 bf 01 	lds	r31, 0x01BF
    17ee:	ec 0f       	add	r30, r28
    17f0:	fd 1f       	adc	r31, r29
    17f2:	e2 0f       	add	r30, r18
    17f4:	f3 1f       	adc	r31, r19
    17f6:	80 81       	ld	r24, Z
    17f8:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    17fc:	80 91 00 01 	lds	r24, 0x0100
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	02 97       	sbiw	r24, 0x02	; 2
    1804:	40 91 01 01 	lds	r20, 0x0101
    1808:	50 e0       	ldi	r21, 0x00	; 0
    180a:	84 9f       	mul	r24, r20
    180c:	90 01       	movw	r18, r0
    180e:	85 9f       	mul	r24, r21
    1810:	30 0d       	add	r19, r0
    1812:	94 9f       	mul	r25, r20
    1814:	30 0d       	add	r19, r0
    1816:	11 24       	eor	r1, r1
    1818:	e0 91 be 01 	lds	r30, 0x01BE
    181c:	f0 91 bf 01 	lds	r31, 0x01BF
    1820:	ec 0f       	add	r30, r28
    1822:	fd 1f       	adc	r31, r29
    1824:	e2 0f       	add	r30, r18
    1826:	f3 1f       	adc	r31, r19
    1828:	10 83       	st	Z, r17
    182a:	0f 5f       	subi	r16, 0xFF	; 255
    182c:	40 91 01 01 	lds	r20, 0x0101
    1830:	04 17       	cp	r16, r20
    1832:	58 f2       	brcs	.-106    	; 0x17ca <lcd_putchar+0x16e>
    1834:	60 91 00 01 	lds	r22, 0x0100
    1838:	61 50       	subi	r22, 0x01	; 1
    183a:	80 e0       	ldi	r24, 0x00	; 0
    183c:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN12OrangutanLCD6gotoXYEhh>
    1840:	10 e0       	ldi	r17, 0x00	; 0
    1842:	04 c0       	rjmp	.+8      	; 0x184c <lcd_putchar+0x1f0>
    1844:	80 e2       	ldi	r24, 0x20	; 32
    1846:	0e 94 2a 0a 	call	0x1454	; 0x1454 <_ZN12OrangutanLCD9send_dataEh>
    184a:	1f 5f       	subi	r17, 0xFF	; 255
    184c:	80 91 01 01 	lds	r24, 0x0101
    1850:	18 17       	cp	r17, r24
    1852:	c0 f3       	brcs	.-16     	; 0x1844 <lcd_putchar+0x1e8>
    1854:	03 c0       	rjmp	.+6      	; 0x185c <lcd_putchar+0x200>
    1856:	4f 5f       	subi	r20, 0xFF	; 255
    1858:	40 93 c0 01 	sts	0x01C0, r20
    185c:	10 92 c1 01 	sts	0x01C1, r1
    1860:	80 91 c1 01 	lds	r24, 0x01C1
    1864:	60 91 c0 01 	lds	r22, 0x01C0
    1868:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN12OrangutanLCD6gotoXYEhh>
    186c:	2d 2d       	mov	r18, r13
    186e:	33 27       	eor	r19, r19
    1870:	27 fd       	sbrc	r18, 7
    1872:	30 95       	com	r19
    1874:	c9 01       	movw	r24, r18
    1876:	cd b7       	in	r28, 0x3d	; 61
    1878:	de b7       	in	r29, 0x3e	; 62
    187a:	e8 e0       	ldi	r30, 0x08	; 8
    187c:	0c 94 52 14 	jmp	0x28a4	; 0x28a4 <__epilogue_restores__+0x14>

00001880 <_ZN12OrangutanLCD10initPrintfEv>:
    1880:	80 91 be 01 	lds	r24, 0x01BE
    1884:	90 91 bf 01 	lds	r25, 0x01BF
    1888:	00 97       	sbiw	r24, 0x00	; 0
    188a:	11 f0       	breq	.+4      	; 0x1890 <_ZN12OrangutanLCD10initPrintfEv+0x10>
    188c:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <free>
    1890:	20 91 00 01 	lds	r18, 0x0100
    1894:	30 e0       	ldi	r19, 0x00	; 0
    1896:	21 50       	subi	r18, 0x01	; 1
    1898:	30 40       	sbci	r19, 0x00	; 0
    189a:	80 91 01 01 	lds	r24, 0x0101
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	ac 01       	movw	r20, r24
    18a2:	24 9f       	mul	r18, r20
    18a4:	c0 01       	movw	r24, r0
    18a6:	25 9f       	mul	r18, r21
    18a8:	90 0d       	add	r25, r0
    18aa:	34 9f       	mul	r19, r20
    18ac:	90 0d       	add	r25, r0
    18ae:	11 24       	eor	r1, r1
    18b0:	0e 94 a2 14 	call	0x2944	; 0x2944 <malloc>
    18b4:	90 93 bf 01 	sts	0x01BF, r25
    18b8:	80 93 be 01 	sts	0x01BE, r24
    18bc:	00 97       	sbiw	r24, 0x00	; 0
    18be:	21 f1       	breq	.+72     	; 0x1908 <_ZN12OrangutanLCD10initPrintfEv+0x88>
    18c0:	a0 e0       	ldi	r26, 0x00	; 0
    18c2:	b0 e2       	ldi	r27, 0x20	; 32
    18c4:	08 c0       	rjmp	.+16     	; 0x18d6 <_ZN12OrangutanLCD10initPrintfEv+0x56>
    18c6:	e0 91 be 01 	lds	r30, 0x01BE
    18ca:	f0 91 bf 01 	lds	r31, 0x01BF
    18ce:	e2 0f       	add	r30, r18
    18d0:	f3 1f       	adc	r31, r19
    18d2:	b0 83       	st	Z, r27
    18d4:	af 5f       	subi	r26, 0xFF	; 255
    18d6:	2a 2f       	mov	r18, r26
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	80 91 00 01 	lds	r24, 0x0100
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	01 97       	sbiw	r24, 0x01	; 1
    18e2:	60 91 01 01 	lds	r22, 0x0101
    18e6:	70 e0       	ldi	r23, 0x00	; 0
    18e8:	86 9f       	mul	r24, r22
    18ea:	a0 01       	movw	r20, r0
    18ec:	87 9f       	mul	r24, r23
    18ee:	50 0d       	add	r21, r0
    18f0:	96 9f       	mul	r25, r22
    18f2:	50 0d       	add	r21, r0
    18f4:	11 24       	eor	r1, r1
    18f6:	24 17       	cp	r18, r20
    18f8:	35 07       	cpc	r19, r21
    18fa:	2c f3       	brlt	.-54     	; 0x18c6 <_ZN12OrangutanLCD10initPrintfEv+0x46>
    18fc:	8e e2       	ldi	r24, 0x2E	; 46
    18fe:	9b e0       	ldi	r25, 0x0B	; 11
    1900:	6a e8       	ldi	r22, 0x8A	; 138
    1902:	79 e0       	ldi	r23, 0x09	; 9
    1904:	0e 94 d0 15 	call	0x2ba0	; 0x2ba0 <fdevopen>
    1908:	08 95       	ret

0000190a <lcd_init_printf>:
    190a:	0e 94 40 0c 	call	0x1880	; 0x1880 <_ZN12OrangutanLCD10initPrintfEv>
    190e:	08 95       	ret

00001910 <serial_get_received_bytes>:
    1910:	28 2f       	mov	r18, r24
    1912:	30 e0       	ldi	r19, 0x00	; 0
    1914:	f9 01       	movw	r30, r18
    1916:	ee 0f       	add	r30, r30
    1918:	ff 1f       	adc	r31, r31
    191a:	43 e0       	ldi	r20, 0x03	; 3
    191c:	22 0f       	add	r18, r18
    191e:	33 1f       	adc	r19, r19
    1920:	4a 95       	dec	r20
    1922:	e1 f7       	brne	.-8      	; 0x191c <serial_get_received_bytes+0xc>
    1924:	e2 0f       	add	r30, r18
    1926:	f3 1f       	adc	r31, r19
    1928:	ee 5f       	subi	r30, 0xFE	; 254
    192a:	fe 4f       	sbci	r31, 0xFE	; 254
    192c:	82 81       	ldd	r24, Z+2	; 0x02
    192e:	08 95       	ret

00001930 <serial_send_buffer_empty>:
    1930:	28 2f       	mov	r18, r24
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	f9 01       	movw	r30, r18
    1936:	ee 0f       	add	r30, r30
    1938:	ff 1f       	adc	r31, r31
    193a:	73 e0       	ldi	r23, 0x03	; 3
    193c:	22 0f       	add	r18, r18
    193e:	33 1f       	adc	r19, r19
    1940:	7a 95       	dec	r23
    1942:	e1 f7       	brne	.-8      	; 0x193c <serial_send_buffer_empty+0xc>
    1944:	e2 0f       	add	r30, r18
    1946:	f3 1f       	adc	r31, r19
    1948:	ee 5f       	subi	r30, 0xFE	; 254
    194a:	fe 4f       	sbci	r31, 0xFE	; 254
    194c:	41 81       	ldd	r20, Z+1	; 0x01
    194e:	28 2f       	mov	r18, r24
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	f9 01       	movw	r30, r18
    1954:	ee 0f       	add	r30, r30
    1956:	ff 1f       	adc	r31, r31
    1958:	53 e0       	ldi	r21, 0x03	; 3
    195a:	22 0f       	add	r18, r18
    195c:	33 1f       	adc	r19, r19
    195e:	5a 95       	dec	r21
    1960:	e1 f7       	brne	.-8      	; 0x195a <serial_send_buffer_empty+0x2a>
    1962:	e2 0f       	add	r30, r18
    1964:	f3 1f       	adc	r31, r19
    1966:	ee 5f       	subi	r30, 0xFE	; 254
    1968:	fe 4f       	sbci	r31, 0xFE	; 254
    196a:	81 e0       	ldi	r24, 0x01	; 1
    196c:	93 81       	ldd	r25, Z+3	; 0x03
    196e:	49 13       	cpse	r20, r25
    1970:	80 e0       	ldi	r24, 0x00	; 0
    1972:	08 95       	ret

00001974 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    1974:	28 2f       	mov	r18, r24
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	f9 01       	movw	r30, r18
    197a:	ee 0f       	add	r30, r30
    197c:	ff 1f       	adc	r31, r31
    197e:	b3 e0       	ldi	r27, 0x03	; 3
    1980:	22 0f       	add	r18, r18
    1982:	33 1f       	adc	r19, r19
    1984:	ba 95       	dec	r27
    1986:	e1 f7       	brne	.-8      	; 0x1980 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xc>
    1988:	e2 0f       	add	r30, r18
    198a:	f3 1f       	adc	r31, r19
    198c:	ee 5f       	subi	r30, 0xFE	; 254
    198e:	fe 4f       	sbci	r31, 0xFE	; 254
    1990:	40 85       	ldd	r20, Z+8	; 0x08
    1992:	51 85       	ldd	r21, Z+9	; 0x09
    1994:	41 15       	cp	r20, r1
    1996:	51 05       	cpc	r21, r1
    1998:	09 f4       	brne	.+2      	; 0x199c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x28>
    199a:	52 c0       	rjmp	.+164    	; 0x1a40 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
    199c:	28 2f       	mov	r18, r24
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	f9 01       	movw	r30, r18
    19a2:	ee 0f       	add	r30, r30
    19a4:	ff 1f       	adc	r31, r31
    19a6:	73 e0       	ldi	r23, 0x03	; 3
    19a8:	22 0f       	add	r18, r18
    19aa:	33 1f       	adc	r19, r19
    19ac:	7a 95       	dec	r23
    19ae:	e1 f7       	brne	.-8      	; 0x19a8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x34>
    19b0:	e2 0f       	add	r30, r18
    19b2:	f3 1f       	adc	r31, r19
    19b4:	ee 5f       	subi	r30, 0xFE	; 254
    19b6:	fe 4f       	sbci	r31, 0xFE	; 254
    19b8:	72 81       	ldd	r23, Z+2	; 0x02
    19ba:	28 2f       	mov	r18, r24
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	f9 01       	movw	r30, r18
    19c0:	ee 0f       	add	r30, r30
    19c2:	ff 1f       	adc	r31, r31
    19c4:	b3 e0       	ldi	r27, 0x03	; 3
    19c6:	22 0f       	add	r18, r18
    19c8:	33 1f       	adc	r19, r19
    19ca:	ba 95       	dec	r27
    19cc:	e1 f7       	brne	.-8      	; 0x19c6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    19ce:	e2 0f       	add	r30, r18
    19d0:	f3 1f       	adc	r31, r19
    19d2:	ee 5f       	subi	r30, 0xFE	; 254
    19d4:	fe 4f       	sbci	r31, 0xFE	; 254
    19d6:	94 81       	ldd	r25, Z+4	; 0x04
    19d8:	79 17       	cp	r23, r25
    19da:	90 f5       	brcc	.+100    	; 0x1a40 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xcc>
    19dc:	28 2f       	mov	r18, r24
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	f9 01       	movw	r30, r18
    19e2:	ee 0f       	add	r30, r30
    19e4:	ff 1f       	adc	r31, r31
    19e6:	73 e0       	ldi	r23, 0x03	; 3
    19e8:	22 0f       	add	r18, r18
    19ea:	33 1f       	adc	r19, r19
    19ec:	7a 95       	dec	r23
    19ee:	e1 f7       	brne	.-8      	; 0x19e8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x74>
    19f0:	e2 0f       	add	r30, r18
    19f2:	f3 1f       	adc	r31, r19
    19f4:	ee 5f       	subi	r30, 0xFE	; 254
    19f6:	fe 4f       	sbci	r31, 0xFE	; 254
    19f8:	92 81       	ldd	r25, Z+2	; 0x02
    19fa:	49 0f       	add	r20, r25
    19fc:	51 1d       	adc	r21, r1
    19fe:	fa 01       	movw	r30, r20
    1a00:	60 83       	st	Z, r22
    1a02:	28 2f       	mov	r18, r24
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	f9 01       	movw	r30, r18
    1a08:	ee 0f       	add	r30, r30
    1a0a:	ff 1f       	adc	r31, r31
    1a0c:	53 e0       	ldi	r21, 0x03	; 3
    1a0e:	22 0f       	add	r18, r18
    1a10:	33 1f       	adc	r19, r19
    1a12:	5a 95       	dec	r21
    1a14:	e1 f7       	brne	.-8      	; 0x1a0e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x9a>
    1a16:	e2 0f       	add	r30, r18
    1a18:	f3 1f       	adc	r31, r19
    1a1a:	ee 5f       	subi	r30, 0xFE	; 254
    1a1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1e:	92 81       	ldd	r25, Z+2	; 0x02
    1a20:	9f 5f       	subi	r25, 0xFF	; 255
    1a22:	28 2f       	mov	r18, r24
    1a24:	30 e0       	ldi	r19, 0x00	; 0
    1a26:	f9 01       	movw	r30, r18
    1a28:	ee 0f       	add	r30, r30
    1a2a:	ff 1f       	adc	r31, r31
    1a2c:	b3 e0       	ldi	r27, 0x03	; 3
    1a2e:	22 0f       	add	r18, r18
    1a30:	33 1f       	adc	r19, r19
    1a32:	ba 95       	dec	r27
    1a34:	e1 f7       	brne	.-8      	; 0x1a2e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xba>
    1a36:	e2 0f       	add	r30, r18
    1a38:	f3 1f       	adc	r31, r19
    1a3a:	ee 5f       	subi	r30, 0xFE	; 254
    1a3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a3e:	92 83       	std	Z+2, r25	; 0x02
    1a40:	28 2f       	mov	r18, r24
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	f9 01       	movw	r30, r18
    1a46:	ee 0f       	add	r30, r30
    1a48:	ff 1f       	adc	r31, r31
    1a4a:	73 e0       	ldi	r23, 0x03	; 3
    1a4c:	22 0f       	add	r18, r18
    1a4e:	33 1f       	adc	r19, r19
    1a50:	7a 95       	dec	r23
    1a52:	e1 f7       	brne	.-8      	; 0x1a4c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xd8>
    1a54:	e2 0f       	add	r30, r18
    1a56:	f3 1f       	adc	r31, r19
    1a58:	ee 5f       	subi	r30, 0xFE	; 254
    1a5a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a5c:	42 81       	ldd	r20, Z+2	; 0x02
    1a5e:	28 2f       	mov	r18, r24
    1a60:	30 e0       	ldi	r19, 0x00	; 0
    1a62:	f9 01       	movw	r30, r18
    1a64:	ee 0f       	add	r30, r30
    1a66:	ff 1f       	adc	r31, r31
    1a68:	53 e0       	ldi	r21, 0x03	; 3
    1a6a:	22 0f       	add	r18, r18
    1a6c:	33 1f       	adc	r19, r19
    1a6e:	5a 95       	dec	r21
    1a70:	e1 f7       	brne	.-8      	; 0x1a6a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0xf6>
    1a72:	e2 0f       	add	r30, r18
    1a74:	f3 1f       	adc	r31, r19
    1a76:	ee 5f       	subi	r30, 0xFE	; 254
    1a78:	fe 4f       	sbci	r31, 0xFE	; 254
    1a7a:	94 81       	ldd	r25, Z+4	; 0x04
    1a7c:	49 17       	cp	r20, r25
    1a7e:	01 f5       	brne	.+64     	; 0x1ac0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    1a80:	28 2f       	mov	r18, r24
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	f9 01       	movw	r30, r18
    1a86:	ee 0f       	add	r30, r30
    1a88:	ff 1f       	adc	r31, r31
    1a8a:	93 e0       	ldi	r25, 0x03	; 3
    1a8c:	22 0f       	add	r18, r18
    1a8e:	33 1f       	adc	r19, r19
    1a90:	9a 95       	dec	r25
    1a92:	e1 f7       	brne	.-8      	; 0x1a8c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x118>
    1a94:	e2 0f       	add	r30, r18
    1a96:	f3 1f       	adc	r31, r19
    1a98:	ee 5f       	subi	r30, 0xFE	; 254
    1a9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a9c:	95 81       	ldd	r25, Z+5	; 0x05
    1a9e:	99 23       	and	r25, r25
    1aa0:	79 f0       	breq	.+30     	; 0x1ac0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x14c>
    1aa2:	28 2f       	mov	r18, r24
    1aa4:	30 e0       	ldi	r19, 0x00	; 0
    1aa6:	f9 01       	movw	r30, r18
    1aa8:	ee 0f       	add	r30, r30
    1aaa:	ff 1f       	adc	r31, r31
    1aac:	b3 e0       	ldi	r27, 0x03	; 3
    1aae:	22 0f       	add	r18, r18
    1ab0:	33 1f       	adc	r19, r19
    1ab2:	ba 95       	dec	r27
    1ab4:	e1 f7       	brne	.-8      	; 0x1aae <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x13a>
    1ab6:	e2 0f       	add	r30, r18
    1ab8:	f3 1f       	adc	r31, r19
    1aba:	ee 5f       	subi	r30, 0xFE	; 254
    1abc:	fe 4f       	sbci	r31, 0xFE	; 254
    1abe:	12 82       	std	Z+2, r1	; 0x02
    1ac0:	08 95       	ret

00001ac2 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    1ac2:	0f 93       	push	r16
    1ac4:	1f 93       	push	r17
    1ac6:	18 2f       	mov	r17, r24
    1ac8:	82 30       	cpi	r24, 0x02	; 2
    1aca:	09 f4       	brne	.+2      	; 0x1ace <_ZN15OrangutanSerial15serial_rx_checkEh+0xc>
    1acc:	75 c0       	rjmp	.+234    	; 0x1bb8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1ace:	88 23       	and	r24, r24
    1ad0:	19 f4       	brne	.+6      	; 0x1ad8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x16>
    1ad2:	e1 ec       	ldi	r30, 0xC1	; 193
    1ad4:	f0 e0       	ldi	r31, 0x00	; 0
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <_ZN15OrangutanSerial15serial_rx_checkEh+0x1a>
    1ad8:	e9 ec       	ldi	r30, 0xC9	; 201
    1ada:	f0 e0       	ldi	r31, 0x00	; 0
    1adc:	80 81       	ld	r24, Z
    1ade:	8f 77       	andi	r24, 0x7F	; 127
    1ae0:	80 83       	st	Z, r24
    1ae2:	81 2f       	mov	r24, r17
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	ee 0f       	add	r30, r30
    1aea:	ff 1f       	adc	r31, r31
    1aec:	03 e0       	ldi	r16, 0x03	; 3
    1aee:	88 0f       	add	r24, r24
    1af0:	99 1f       	adc	r25, r25
    1af2:	0a 95       	dec	r16
    1af4:	e1 f7       	brne	.-8      	; 0x1aee <_ZN15OrangutanSerial15serial_rx_checkEh+0x2c>
    1af6:	e8 0f       	add	r30, r24
    1af8:	f9 1f       	adc	r31, r25
    1afa:	ee 5f       	subi	r30, 0xFE	; 254
    1afc:	fe 4f       	sbci	r31, 0xFE	; 254
    1afe:	80 85       	ldd	r24, Z+8	; 0x08
    1b00:	91 85       	ldd	r25, Z+9	; 0x09
    1b02:	00 97       	sbiw	r24, 0x00	; 0
    1b04:	a9 f1       	breq	.+106    	; 0x1b70 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    1b06:	21 2f       	mov	r18, r17
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	f9 01       	movw	r30, r18
    1b0c:	ee 0f       	add	r30, r30
    1b0e:	ff 1f       	adc	r31, r31
    1b10:	a3 e0       	ldi	r26, 0x03	; 3
    1b12:	22 0f       	add	r18, r18
    1b14:	33 1f       	adc	r19, r19
    1b16:	aa 95       	dec	r26
    1b18:	e1 f7       	brne	.-8      	; 0x1b12 <_ZN15OrangutanSerial15serial_rx_checkEh+0x50>
    1b1a:	e2 0f       	add	r30, r18
    1b1c:	f3 1f       	adc	r31, r19
    1b1e:	ee 5f       	subi	r30, 0xFE	; 254
    1b20:	fe 4f       	sbci	r31, 0xFE	; 254
    1b22:	92 81       	ldd	r25, Z+2	; 0x02
    1b24:	21 2f       	mov	r18, r17
    1b26:	30 e0       	ldi	r19, 0x00	; 0
    1b28:	f9 01       	movw	r30, r18
    1b2a:	ee 0f       	add	r30, r30
    1b2c:	ff 1f       	adc	r31, r31
    1b2e:	63 e0       	ldi	r22, 0x03	; 3
    1b30:	22 0f       	add	r18, r18
    1b32:	33 1f       	adc	r19, r19
    1b34:	6a 95       	dec	r22
    1b36:	e1 f7       	brne	.-8      	; 0x1b30 <_ZN15OrangutanSerial15serial_rx_checkEh+0x6e>
    1b38:	e2 0f       	add	r30, r18
    1b3a:	f3 1f       	adc	r31, r19
    1b3c:	ee 5f       	subi	r30, 0xFE	; 254
    1b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b40:	84 81       	ldd	r24, Z+4	; 0x04
    1b42:	98 17       	cp	r25, r24
    1b44:	a8 f4       	brcc	.+42     	; 0x1b70 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    1b46:	11 23       	and	r17, r17
    1b48:	19 f4       	brne	.+6      	; 0x1b50 <_ZN15OrangutanSerial15serial_rx_checkEh+0x8e>
    1b4a:	e0 ec       	ldi	r30, 0xC0	; 192
    1b4c:	f0 e0       	ldi	r31, 0x00	; 0
    1b4e:	02 c0       	rjmp	.+4      	; 0x1b54 <_ZN15OrangutanSerial15serial_rx_checkEh+0x92>
    1b50:	e8 ec       	ldi	r30, 0xC8	; 200
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	80 81       	ld	r24, Z
    1b56:	87 ff       	sbrs	r24, 7
    1b58:	0b c0       	rjmp	.+22     	; 0x1b70 <_ZN15OrangutanSerial15serial_rx_checkEh+0xae>
    1b5a:	11 23       	and	r17, r17
    1b5c:	19 f4       	brne	.+6      	; 0x1b64 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa2>
    1b5e:	e6 ec       	ldi	r30, 0xC6	; 198
    1b60:	f0 e0       	ldi	r31, 0x00	; 0
    1b62:	02 c0       	rjmp	.+4      	; 0x1b68 <_ZN15OrangutanSerial15serial_rx_checkEh+0xa6>
    1b64:	ee ec       	ldi	r30, 0xCE	; 206
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	60 81       	ld	r22, Z
    1b6a:	81 2f       	mov	r24, r17
    1b6c:	0e 94 ba 0c 	call	0x1974	; 0x1974 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1b70:	21 2f       	mov	r18, r17
    1b72:	30 e0       	ldi	r19, 0x00	; 0
    1b74:	f9 01       	movw	r30, r18
    1b76:	ee 0f       	add	r30, r30
    1b78:	ff 1f       	adc	r31, r31
    1b7a:	43 e0       	ldi	r20, 0x03	; 3
    1b7c:	22 0f       	add	r18, r18
    1b7e:	33 1f       	adc	r19, r19
    1b80:	4a 95       	dec	r20
    1b82:	e1 f7       	brne	.-8      	; 0x1b7c <_ZN15OrangutanSerial15serial_rx_checkEh+0xba>
    1b84:	e2 0f       	add	r30, r18
    1b86:	f3 1f       	adc	r31, r19
    1b88:	ee 5f       	subi	r30, 0xFE	; 254
    1b8a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b8c:	80 81       	ld	r24, Z
    1b8e:	88 23       	and	r24, r24
    1b90:	09 f0       	breq	.+2      	; 0x1b94 <_ZN15OrangutanSerial15serial_rx_checkEh+0xd2>
    1b92:	59 c0       	rjmp	.+178    	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1b94:	11 23       	and	r17, r17
    1b96:	19 f4       	brne	.+6      	; 0x1b9e <_ZN15OrangutanSerial15serial_rx_checkEh+0xdc>
    1b98:	e1 ec       	ldi	r30, 0xC1	; 193
    1b9a:	f0 e0       	ldi	r31, 0x00	; 0
    1b9c:	02 c0       	rjmp	.+4      	; 0x1ba2 <_ZN15OrangutanSerial15serial_rx_checkEh+0xe0>
    1b9e:	e9 ec       	ldi	r30, 0xC9	; 201
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	80 81       	ld	r24, Z
    1ba4:	80 68       	ori	r24, 0x80	; 128
    1ba6:	80 83       	st	Z, r24
    1ba8:	4e c0       	rjmp	.+156    	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1baa:	80 91 1b 01 	lds	r24, 0x011B
    1bae:	88 23       	and	r24, r24
    1bb0:	19 f0       	breq	.+6      	; 0x1bb8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1bb2:	10 92 18 01 	sts	0x0118, r1
    1bb6:	47 c0       	rjmp	.+142    	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1bb8:	80 91 1e 01 	lds	r24, 0x011E
    1bbc:	90 91 1f 01 	lds	r25, 0x011F
    1bc0:	00 97       	sbiw	r24, 0x00	; 0
    1bc2:	09 f4       	brne	.+2      	; 0x1bc6 <_ZN15OrangutanSerial15serial_rx_checkEh+0x104>
    1bc4:	40 c0       	rjmp	.+128    	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1bc6:	90 91 18 01 	lds	r25, 0x0118
    1bca:	80 91 1a 01 	lds	r24, 0x011A
    1bce:	98 17       	cp	r25, r24
    1bd0:	d0 f5       	brcc	.+116    	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1bd2:	80 91 c7 01 	lds	r24, 0x01C7
    1bd6:	88 23       	and	r24, r24
    1bd8:	a9 f4       	brne	.+42     	; 0x1c04 <_ZN15OrangutanSerial15serial_rx_checkEh+0x142>
    1bda:	0e 94 51 11 	call	0x22a2	; 0x22a2 <_ZN12OrangutanSVP15serialReadStartEv>
    1bde:	80 93 c7 01 	sts	0x01C7, r24
    1be2:	10 e0       	ldi	r17, 0x00	; 0
    1be4:	0b c0       	rjmp	.+22     	; 0x1bfc <_ZN15OrangutanSerial15serial_rx_checkEh+0x13a>
    1be6:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN12OrangutanSVP11getNextByteEv>
    1bea:	e0 2f       	mov	r30, r16
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	31 97       	sbiw	r30, 0x01	; 1
    1bf0:	e1 1b       	sub	r30, r17
    1bf2:	f1 09       	sbc	r31, r1
    1bf4:	e8 53       	subi	r30, 0x38	; 56
    1bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf8:	80 83       	st	Z, r24
    1bfa:	1f 5f       	subi	r17, 0xFF	; 255
    1bfc:	00 91 c7 01 	lds	r16, 0x01C7
    1c00:	10 17       	cp	r17, r16
    1c02:	88 f3       	brcs	.-30     	; 0x1be6 <_ZN15OrangutanSerial15serial_rx_checkEh+0x124>
    1c04:	a0 91 c7 01 	lds	r26, 0x01C7
    1c08:	aa 23       	and	r26, r26
    1c0a:	e9 f0       	breq	.+58     	; 0x1c46 <_ZN15OrangutanSerial15serial_rx_checkEh+0x184>
    1c0c:	80 91 18 01 	lds	r24, 0x0118
    1c10:	e0 91 1e 01 	lds	r30, 0x011E
    1c14:	f0 91 1f 01 	lds	r31, 0x011F
    1c18:	e8 0f       	add	r30, r24
    1c1a:	f1 1d       	adc	r31, r1
    1c1c:	a1 50       	subi	r26, 0x01	; 1
    1c1e:	a0 93 c7 01 	sts	0x01C7, r26
    1c22:	b0 e0       	ldi	r27, 0x00	; 0
    1c24:	a8 53       	subi	r26, 0x38	; 56
    1c26:	be 4f       	sbci	r27, 0xFE	; 254
    1c28:	8c 91       	ld	r24, X
    1c2a:	80 83       	st	Z, r24
    1c2c:	80 91 18 01 	lds	r24, 0x0118
    1c30:	8f 5f       	subi	r24, 0xFF	; 255
    1c32:	80 93 18 01 	sts	0x0118, r24
    1c36:	90 91 18 01 	lds	r25, 0x0118
    1c3a:	80 91 1a 01 	lds	r24, 0x011A
    1c3e:	98 17       	cp	r25, r24
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <_ZN15OrangutanSerial15serial_rx_checkEh+0x182>
    1c42:	ba cf       	rjmp	.-140    	; 0x1bb8 <_ZN15OrangutanSerial15serial_rx_checkEh+0xf6>
    1c44:	b2 cf       	rjmp	.-156    	; 0x1baa <_ZN15OrangutanSerial15serial_rx_checkEh+0xe8>
    1c46:	1f 91       	pop	r17
    1c48:	0f 91       	pop	r16
    1c4a:	08 95       	ret

00001c4c <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    1c4c:	82 30       	cpi	r24, 0x02	; 2
    1c4e:	51 f0       	breq	.+20     	; 0x1c64 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x18>
    1c50:	88 23       	and	r24, r24
    1c52:	19 f4       	brne	.+6      	; 0x1c5a <_ZN15OrangutanSerial14receive_inlineEhPchh+0xe>
    1c54:	e1 ec       	ldi	r30, 0xC1	; 193
    1c56:	f0 e0       	ldi	r31, 0x00	; 0
    1c58:	02 c0       	rjmp	.+4      	; 0x1c5e <_ZN15OrangutanSerial14receive_inlineEhPchh+0x12>
    1c5a:	e9 ec       	ldi	r30, 0xC9	; 201
    1c5c:	f0 e0       	ldi	r31, 0x00	; 0
    1c5e:	90 81       	ld	r25, Z
    1c60:	9f 77       	andi	r25, 0x7F	; 127
    1c62:	90 83       	st	Z, r25
    1c64:	a8 2f       	mov	r26, r24
    1c66:	b0 e0       	ldi	r27, 0x00	; 0
    1c68:	fd 01       	movw	r30, r26
    1c6a:	ee 0f       	add	r30, r30
    1c6c:	ff 1f       	adc	r31, r31
    1c6e:	53 e0       	ldi	r21, 0x03	; 3
    1c70:	aa 0f       	add	r26, r26
    1c72:	bb 1f       	adc	r27, r27
    1c74:	5a 95       	dec	r21
    1c76:	e1 f7       	brne	.-8      	; 0x1c70 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x24>
    1c78:	ea 0f       	add	r30, r26
    1c7a:	fb 1f       	adc	r31, r27
    1c7c:	ee 5f       	subi	r30, 0xFE	; 254
    1c7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c80:	71 87       	std	Z+9, r23	; 0x09
    1c82:	60 87       	std	Z+8, r22	; 0x08
    1c84:	68 2f       	mov	r22, r24
    1c86:	70 e0       	ldi	r23, 0x00	; 0
    1c88:	fb 01       	movw	r30, r22
    1c8a:	ee 0f       	add	r30, r30
    1c8c:	ff 1f       	adc	r31, r31
    1c8e:	93 e0       	ldi	r25, 0x03	; 3
    1c90:	66 0f       	add	r22, r22
    1c92:	77 1f       	adc	r23, r23
    1c94:	9a 95       	dec	r25
    1c96:	e1 f7       	brne	.-8      	; 0x1c90 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x44>
    1c98:	e6 0f       	add	r30, r22
    1c9a:	f7 1f       	adc	r31, r23
    1c9c:	ee 5f       	subi	r30, 0xFE	; 254
    1c9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca0:	12 82       	std	Z+2, r1	; 0x02
    1ca2:	68 2f       	mov	r22, r24
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	fb 01       	movw	r30, r22
    1ca8:	ee 0f       	add	r30, r30
    1caa:	ff 1f       	adc	r31, r31
    1cac:	a3 e0       	ldi	r26, 0x03	; 3
    1cae:	66 0f       	add	r22, r22
    1cb0:	77 1f       	adc	r23, r23
    1cb2:	aa 95       	dec	r26
    1cb4:	e1 f7       	brne	.-8      	; 0x1cae <_ZN15OrangutanSerial14receive_inlineEhPchh+0x62>
    1cb6:	e6 0f       	add	r30, r22
    1cb8:	f7 1f       	adc	r31, r23
    1cba:	ee 5f       	subi	r30, 0xFE	; 254
    1cbc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cbe:	44 83       	std	Z+4, r20	; 0x04
    1cc0:	48 2f       	mov	r20, r24
    1cc2:	50 e0       	ldi	r21, 0x00	; 0
    1cc4:	fa 01       	movw	r30, r20
    1cc6:	ee 0f       	add	r30, r30
    1cc8:	ff 1f       	adc	r31, r31
    1cca:	63 e0       	ldi	r22, 0x03	; 3
    1ccc:	44 0f       	add	r20, r20
    1cce:	55 1f       	adc	r21, r21
    1cd0:	6a 95       	dec	r22
    1cd2:	e1 f7       	brne	.-8      	; 0x1ccc <_ZN15OrangutanSerial14receive_inlineEhPchh+0x80>
    1cd4:	e4 0f       	add	r30, r20
    1cd6:	f5 1f       	adc	r31, r21
    1cd8:	ee 5f       	subi	r30, 0xFE	; 254
    1cda:	fe 4f       	sbci	r31, 0xFE	; 254
    1cdc:	25 83       	std	Z+5, r18	; 0x05
    1cde:	82 30       	cpi	r24, 0x02	; 2
    1ce0:	d9 f0       	breq	.+54     	; 0x1d18 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    1ce2:	28 2f       	mov	r18, r24
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	f9 01       	movw	r30, r18
    1ce8:	ee 0f       	add	r30, r30
    1cea:	ff 1f       	adc	r31, r31
    1cec:	43 e0       	ldi	r20, 0x03	; 3
    1cee:	22 0f       	add	r18, r18
    1cf0:	33 1f       	adc	r19, r19
    1cf2:	4a 95       	dec	r20
    1cf4:	e1 f7       	brne	.-8      	; 0x1cee <_ZN15OrangutanSerial14receive_inlineEhPchh+0xa2>
    1cf6:	e2 0f       	add	r30, r18
    1cf8:	f3 1f       	adc	r31, r19
    1cfa:	ee 5f       	subi	r30, 0xFE	; 254
    1cfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfe:	90 81       	ld	r25, Z
    1d00:	99 23       	and	r25, r25
    1d02:	51 f4       	brne	.+20     	; 0x1d18 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xcc>
    1d04:	88 23       	and	r24, r24
    1d06:	19 f4       	brne	.+6      	; 0x1d0e <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc2>
    1d08:	e1 ec       	ldi	r30, 0xC1	; 193
    1d0a:	f0 e0       	ldi	r31, 0x00	; 0
    1d0c:	02 c0       	rjmp	.+4      	; 0x1d12 <_ZN15OrangutanSerial14receive_inlineEhPchh+0xc6>
    1d0e:	e9 ec       	ldi	r30, 0xC9	; 201
    1d10:	f0 e0       	ldi	r31, 0x00	; 0
    1d12:	80 81       	ld	r24, Z
    1d14:	80 68       	ori	r24, 0x80	; 128
    1d16:	80 83       	st	Z, r24
    1d18:	08 95       	ret

00001d1a <_ZN15OrangutanSerial11receiveRingEhPch>:
    1d1a:	21 e0       	ldi	r18, 0x01	; 1
    1d1c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <_ZN15OrangutanSerial14receive_inlineEhPchh>
    1d20:	08 95       	ret

00001d22 <serial_receive_ring>:
    1d22:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <_ZN15OrangutanSerial11receiveRingEhPch>
    1d26:	08 95       	ret

00001d28 <__vector_20>:
    1d28:	1f 92       	push	r1
    1d2a:	0f 92       	push	r0
    1d2c:	0f b6       	in	r0, 0x3f	; 63
    1d2e:	0f 92       	push	r0
    1d30:	0b b6       	in	r0, 0x3b	; 59
    1d32:	0f 92       	push	r0
    1d34:	11 24       	eor	r1, r1
    1d36:	2f 93       	push	r18
    1d38:	3f 93       	push	r19
    1d3a:	4f 93       	push	r20
    1d3c:	5f 93       	push	r21
    1d3e:	6f 93       	push	r22
    1d40:	7f 93       	push	r23
    1d42:	8f 93       	push	r24
    1d44:	9f 93       	push	r25
    1d46:	af 93       	push	r26
    1d48:	bf 93       	push	r27
    1d4a:	ef 93       	push	r30
    1d4c:	ff 93       	push	r31
    1d4e:	60 91 c6 00 	lds	r22, 0x00C6
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	0e 94 ba 0c 	call	0x1974	; 0x1974 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1d58:	ff 91       	pop	r31
    1d5a:	ef 91       	pop	r30
    1d5c:	bf 91       	pop	r27
    1d5e:	af 91       	pop	r26
    1d60:	9f 91       	pop	r25
    1d62:	8f 91       	pop	r24
    1d64:	7f 91       	pop	r23
    1d66:	6f 91       	pop	r22
    1d68:	5f 91       	pop	r21
    1d6a:	4f 91       	pop	r20
    1d6c:	3f 91       	pop	r19
    1d6e:	2f 91       	pop	r18
    1d70:	0f 90       	pop	r0
    1d72:	0b be       	out	0x3b, r0	; 59
    1d74:	0f 90       	pop	r0
    1d76:	0f be       	out	0x3f, r0	; 63
    1d78:	0f 90       	pop	r0
    1d7a:	1f 90       	pop	r1
    1d7c:	18 95       	reti

00001d7e <__vector_28>:
    1d7e:	1f 92       	push	r1
    1d80:	0f 92       	push	r0
    1d82:	0f b6       	in	r0, 0x3f	; 63
    1d84:	0f 92       	push	r0
    1d86:	0b b6       	in	r0, 0x3b	; 59
    1d88:	0f 92       	push	r0
    1d8a:	11 24       	eor	r1, r1
    1d8c:	2f 93       	push	r18
    1d8e:	3f 93       	push	r19
    1d90:	4f 93       	push	r20
    1d92:	5f 93       	push	r21
    1d94:	6f 93       	push	r22
    1d96:	7f 93       	push	r23
    1d98:	8f 93       	push	r24
    1d9a:	9f 93       	push	r25
    1d9c:	af 93       	push	r26
    1d9e:	bf 93       	push	r27
    1da0:	ef 93       	push	r30
    1da2:	ff 93       	push	r31
    1da4:	60 91 ce 00 	lds	r22, 0x00CE
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	0e 94 ba 0c 	call	0x1974	; 0x1974 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1dae:	ff 91       	pop	r31
    1db0:	ef 91       	pop	r30
    1db2:	bf 91       	pop	r27
    1db4:	af 91       	pop	r26
    1db6:	9f 91       	pop	r25
    1db8:	8f 91       	pop	r24
    1dba:	7f 91       	pop	r23
    1dbc:	6f 91       	pop	r22
    1dbe:	5f 91       	pop	r21
    1dc0:	4f 91       	pop	r20
    1dc2:	3f 91       	pop	r19
    1dc4:	2f 91       	pop	r18
    1dc6:	0f 90       	pop	r0
    1dc8:	0b be       	out	0x3b, r0	; 59
    1dca:	0f 90       	pop	r0
    1dcc:	0f be       	out	0x3f, r0	; 63
    1dce:	0f 90       	pop	r0
    1dd0:	1f 90       	pop	r1
    1dd2:	18 95       	reti

00001dd4 <_Z24uart_enable_tx_interrupth>:
    1dd4:	88 23       	and	r24, r24
    1dd6:	19 f4       	brne	.+6      	; 0x1dde <_Z24uart_enable_tx_interrupth+0xa>
    1dd8:	e1 ec       	ldi	r30, 0xC1	; 193
    1dda:	f0 e0       	ldi	r31, 0x00	; 0
    1ddc:	02 c0       	rjmp	.+4      	; 0x1de2 <_Z24uart_enable_tx_interrupth+0xe>
    1dde:	e9 ec       	ldi	r30, 0xC9	; 201
    1de0:	f0 e0       	ldi	r31, 0x00	; 0
    1de2:	80 81       	ld	r24, Z
    1de4:	80 62       	ori	r24, 0x20	; 32
    1de6:	80 83       	st	Z, r24
    1de8:	08 95       	ret

00001dea <_Z25uart_disable_tx_interrupth>:
    1dea:	88 23       	and	r24, r24
    1dec:	19 f4       	brne	.+6      	; 0x1df4 <_Z25uart_disable_tx_interrupth+0xa>
    1dee:	e1 ec       	ldi	r30, 0xC1	; 193
    1df0:	f0 e0       	ldi	r31, 0x00	; 0
    1df2:	02 c0       	rjmp	.+4      	; 0x1df8 <_Z25uart_disable_tx_interrupth+0xe>
    1df4:	e9 ec       	ldi	r30, 0xC9	; 201
    1df6:	f0 e0       	ldi	r31, 0x00	; 0
    1df8:	80 81       	ld	r24, Z
    1dfa:	8f 7d       	andi	r24, 0xDF	; 223
    1dfc:	80 83       	st	Z, r24
    1dfe:	08 95       	ret

00001e00 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1e00:	28 2f       	mov	r18, r24
    1e02:	30 e0       	ldi	r19, 0x00	; 0
    1e04:	f9 01       	movw	r30, r18
    1e06:	ee 0f       	add	r30, r30
    1e08:	ff 1f       	adc	r31, r31
    1e0a:	93 e0       	ldi	r25, 0x03	; 3
    1e0c:	22 0f       	add	r18, r18
    1e0e:	33 1f       	adc	r19, r19
    1e10:	9a 95       	dec	r25
    1e12:	e1 f7       	brne	.-8      	; 0x1e0c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0xc>
    1e14:	e2 0f       	add	r30, r18
    1e16:	f3 1f       	adc	r31, r19
    1e18:	ee 5f       	subi	r30, 0xFE	; 254
    1e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1c:	26 81       	ldd	r18, Z+6	; 0x06
    1e1e:	37 81       	ldd	r19, Z+7	; 0x07
    1e20:	21 15       	cp	r18, r1
    1e22:	31 05       	cpc	r19, r1
    1e24:	a1 f1       	breq	.+104    	; 0x1e8e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1e26:	28 2f       	mov	r18, r24
    1e28:	30 e0       	ldi	r19, 0x00	; 0
    1e2a:	f9 01       	movw	r30, r18
    1e2c:	ee 0f       	add	r30, r30
    1e2e:	ff 1f       	adc	r31, r31
    1e30:	a3 e0       	ldi	r26, 0x03	; 3
    1e32:	22 0f       	add	r18, r18
    1e34:	33 1f       	adc	r19, r19
    1e36:	aa 95       	dec	r26
    1e38:	e1 f7       	brne	.-8      	; 0x1e32 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x32>
    1e3a:	e2 0f       	add	r30, r18
    1e3c:	f3 1f       	adc	r31, r19
    1e3e:	ee 5f       	subi	r30, 0xFE	; 254
    1e40:	fe 4f       	sbci	r31, 0xFE	; 254
    1e42:	41 81       	ldd	r20, Z+1	; 0x01
    1e44:	28 2f       	mov	r18, r24
    1e46:	30 e0       	ldi	r19, 0x00	; 0
    1e48:	f9 01       	movw	r30, r18
    1e4a:	ee 0f       	add	r30, r30
    1e4c:	ff 1f       	adc	r31, r31
    1e4e:	63 e0       	ldi	r22, 0x03	; 3
    1e50:	22 0f       	add	r18, r18
    1e52:	33 1f       	adc	r19, r19
    1e54:	6a 95       	dec	r22
    1e56:	e1 f7       	brne	.-8      	; 0x1e50 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x50>
    1e58:	e2 0f       	add	r30, r18
    1e5a:	f3 1f       	adc	r31, r19
    1e5c:	ee 5f       	subi	r30, 0xFE	; 254
    1e5e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e60:	93 81       	ldd	r25, Z+3	; 0x03
    1e62:	49 17       	cp	r20, r25
    1e64:	a0 f4       	brcc	.+40     	; 0x1e8e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1e66:	28 2f       	mov	r18, r24
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	f9 01       	movw	r30, r18
    1e6c:	ee 0f       	add	r30, r30
    1e6e:	ff 1f       	adc	r31, r31
    1e70:	43 e0       	ldi	r20, 0x03	; 3
    1e72:	22 0f       	add	r18, r18
    1e74:	33 1f       	adc	r19, r19
    1e76:	4a 95       	dec	r20
    1e78:	e1 f7       	brne	.-8      	; 0x1e72 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x72>
    1e7a:	e2 0f       	add	r30, r18
    1e7c:	f3 1f       	adc	r31, r19
    1e7e:	ee 5f       	subi	r30, 0xFE	; 254
    1e80:	fe 4f       	sbci	r31, 0xFE	; 254
    1e82:	90 81       	ld	r25, Z
    1e84:	99 23       	and	r25, r25
    1e86:	19 f4       	brne	.+6      	; 0x1e8e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x8e>
    1e88:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <_Z24uart_enable_tx_interrupth>
    1e8c:	08 95       	ret
    1e8e:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <_Z25uart_disable_tx_interrupth>
    1e92:	08 95       	ret

00001e94 <_ZN15OrangutanSerial15initUART_inlineEh>:
    1e94:	82 30       	cpi	r24, 0x02	; 2
    1e96:	31 f1       	breq	.+76     	; 0x1ee4 <_ZN15OrangutanSerial15initUART_inlineEh+0x50>
    1e98:	28 2f       	mov	r18, r24
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	f9 01       	movw	r30, r18
    1e9e:	ee 0f       	add	r30, r30
    1ea0:	ff 1f       	adc	r31, r31
    1ea2:	53 e0       	ldi	r21, 0x03	; 3
    1ea4:	22 0f       	add	r18, r18
    1ea6:	33 1f       	adc	r19, r19
    1ea8:	5a 95       	dec	r21
    1eaa:	e1 f7       	brne	.-8      	; 0x1ea4 <_ZN15OrangutanSerial15initUART_inlineEh+0x10>
    1eac:	e2 0f       	add	r30, r18
    1eae:	f3 1f       	adc	r31, r19
    1eb0:	ee 5f       	subi	r30, 0xFE	; 254
    1eb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1eb4:	90 81       	ld	r25, Z
    1eb6:	99 23       	and	r25, r25
    1eb8:	49 f4       	brne	.+18     	; 0x1ecc <_ZN15OrangutanSerial15initUART_inlineEh+0x38>
    1eba:	88 23       	and	r24, r24
    1ebc:	19 f4       	brne	.+6      	; 0x1ec4 <_ZN15OrangutanSerial15initUART_inlineEh+0x30>
    1ebe:	e1 ec       	ldi	r30, 0xC1	; 193
    1ec0:	f0 e0       	ldi	r31, 0x00	; 0
    1ec2:	02 c0       	rjmp	.+4      	; 0x1ec8 <_ZN15OrangutanSerial15initUART_inlineEh+0x34>
    1ec4:	e9 ec       	ldi	r30, 0xC9	; 201
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	98 e9       	ldi	r25, 0x98	; 152
    1eca:	08 c0       	rjmp	.+16     	; 0x1edc <_ZN15OrangutanSerial15initUART_inlineEh+0x48>
    1ecc:	88 23       	and	r24, r24
    1ece:	19 f4       	brne	.+6      	; 0x1ed6 <_ZN15OrangutanSerial15initUART_inlineEh+0x42>
    1ed0:	e1 ec       	ldi	r30, 0xC1	; 193
    1ed2:	f0 e0       	ldi	r31, 0x00	; 0
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <_ZN15OrangutanSerial15initUART_inlineEh+0x46>
    1ed6:	e9 ec       	ldi	r30, 0xC9	; 201
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	98 e1       	ldi	r25, 0x18	; 24
    1edc:	90 83       	st	Z, r25
    1ede:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1ee2:	78 94       	sei
    1ee4:	08 95       	ret

00001ee6 <_ZN15OrangutanSerial8initPortEh>:
    1ee6:	88 23       	and	r24, r24
    1ee8:	19 f0       	breq	.+6      	; 0x1ef0 <_ZN15OrangutanSerial8initPortEh+0xa>
    1eea:	81 30       	cpi	r24, 0x01	; 1
    1eec:	41 f4       	brne	.+16     	; 0x1efe <_ZN15OrangutanSerial8initPortEh+0x18>
    1eee:	04 c0       	rjmp	.+8      	; 0x1ef8 <_ZN15OrangutanSerial8initPortEh+0x12>
    1ef0:	80 e0       	ldi	r24, 0x00	; 0
    1ef2:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <_ZN15OrangutanSerial15initUART_inlineEh>
    1ef6:	08 95       	ret
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <_ZN15OrangutanSerial15initUART_inlineEh>
    1efe:	08 95       	ret

00001f00 <_ZN15OrangutanSerial11setBaudRateEhm>:
    1f00:	a0 e0       	ldi	r26, 0x00	; 0
    1f02:	b0 e0       	ldi	r27, 0x00	; 0
    1f04:	e6 e8       	ldi	r30, 0x86	; 134
    1f06:	ff e0       	ldi	r31, 0x0F	; 15
    1f08:	0c 94 37 14 	jmp	0x286e	; 0x286e <__prologue_saves__+0x16>
    1f0c:	d8 2e       	mov	r13, r24
    1f0e:	7a 01       	movw	r14, r20
    1f10:	8b 01       	movw	r16, r22
    1f12:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <_ZN15OrangutanSerial8initPortEh>
    1f16:	8d 2d       	mov	r24, r13
    1f18:	82 30       	cpi	r24, 0x02	; 2
    1f1a:	01 f1       	breq	.+64     	; 0x1f5c <_ZN15OrangutanSerial11setBaudRateEhm+0x5c>
    1f1c:	dd 20       	and	r13, r13
    1f1e:	19 f4       	brne	.+6      	; 0x1f26 <_ZN15OrangutanSerial11setBaudRateEhm+0x26>
    1f20:	c4 ec       	ldi	r28, 0xC4	; 196
    1f22:	d0 e0       	ldi	r29, 0x00	; 0
    1f24:	02 c0       	rjmp	.+4      	; 0x1f2a <_ZN15OrangutanSerial11setBaudRateEhm+0x2a>
    1f26:	cc ec       	ldi	r28, 0xCC	; 204
    1f28:	d0 e0       	ldi	r29, 0x00	; 0
    1f2a:	c8 01       	movw	r24, r16
    1f2c:	b7 01       	movw	r22, r14
    1f2e:	28 ef       	ldi	r18, 0xF8	; 248
    1f30:	3f ef       	ldi	r19, 0xFF	; 255
    1f32:	4f ef       	ldi	r20, 0xFF	; 255
    1f34:	5f ef       	ldi	r21, 0xFF	; 255
    1f36:	0e 94 db 13 	call	0x27b6	; 0x27b6 <__mulsi3>
    1f3a:	60 50       	subi	r22, 0x00	; 0
    1f3c:	73 4d       	sbci	r23, 0xD3	; 211
    1f3e:	8e 4c       	sbci	r24, 0xCE	; 206
    1f40:	9e 4f       	sbci	r25, 0xFE	; 254
    1f42:	a8 01       	movw	r20, r16
    1f44:	97 01       	movw	r18, r14
    1f46:	e4 e0       	ldi	r30, 0x04	; 4
    1f48:	22 0f       	add	r18, r18
    1f4a:	33 1f       	adc	r19, r19
    1f4c:	44 1f       	adc	r20, r20
    1f4e:	55 1f       	adc	r21, r21
    1f50:	ea 95       	dec	r30
    1f52:	d1 f7       	brne	.-12     	; 0x1f48 <_ZN15OrangutanSerial11setBaudRateEhm+0x48>
    1f54:	0e 94 ff 13 	call	0x27fe	; 0x27fe <__udivmodsi4>
    1f58:	39 83       	std	Y+1, r19	; 0x01
    1f5a:	28 83       	st	Y, r18
    1f5c:	cd b7       	in	r28, 0x3d	; 61
    1f5e:	de b7       	in	r29, 0x3e	; 62
    1f60:	e7 e0       	ldi	r30, 0x07	; 7
    1f62:	0c 94 53 14 	jmp	0x28a6	; 0x28a6 <__epilogue_restores__+0x16>

00001f66 <serial_set_baud_rate>:
    1f66:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <_ZN15OrangutanSerial11setBaudRateEhm>
    1f6a:	08 95       	ret

00001f6c <_ZN15OrangutanSerial11uart_tx_isrEh>:
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	30 e0       	ldi	r19, 0x00	; 0
    1f70:	f9 01       	movw	r30, r18
    1f72:	ee 0f       	add	r30, r30
    1f74:	ff 1f       	adc	r31, r31
    1f76:	73 e0       	ldi	r23, 0x03	; 3
    1f78:	22 0f       	add	r18, r18
    1f7a:	33 1f       	adc	r19, r19
    1f7c:	7a 95       	dec	r23
    1f7e:	e1 f7       	brne	.-8      	; 0x1f78 <_ZN15OrangutanSerial11uart_tx_isrEh+0xc>
    1f80:	e2 0f       	add	r30, r18
    1f82:	f3 1f       	adc	r31, r19
    1f84:	ee 5f       	subi	r30, 0xFE	; 254
    1f86:	fe 4f       	sbci	r31, 0xFE	; 254
    1f88:	46 81       	ldd	r20, Z+6	; 0x06
    1f8a:	57 81       	ldd	r21, Z+7	; 0x07
    1f8c:	41 15       	cp	r20, r1
    1f8e:	51 05       	cpc	r21, r1
    1f90:	09 f4       	brne	.+2      	; 0x1f94 <_ZN15OrangutanSerial11uart_tx_isrEh+0x28>
    1f92:	65 c0       	rjmp	.+202    	; 0x205e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    1f94:	28 2f       	mov	r18, r24
    1f96:	30 e0       	ldi	r19, 0x00	; 0
    1f98:	f9 01       	movw	r30, r18
    1f9a:	ee 0f       	add	r30, r30
    1f9c:	ff 1f       	adc	r31, r31
    1f9e:	93 e0       	ldi	r25, 0x03	; 3
    1fa0:	22 0f       	add	r18, r18
    1fa2:	33 1f       	adc	r19, r19
    1fa4:	9a 95       	dec	r25
    1fa6:	e1 f7       	brne	.-8      	; 0x1fa0 <_ZN15OrangutanSerial11uart_tx_isrEh+0x34>
    1fa8:	e2 0f       	add	r30, r18
    1faa:	f3 1f       	adc	r31, r19
    1fac:	ee 5f       	subi	r30, 0xFE	; 254
    1fae:	fe 4f       	sbci	r31, 0xFE	; 254
    1fb0:	61 81       	ldd	r22, Z+1	; 0x01
    1fb2:	28 2f       	mov	r18, r24
    1fb4:	30 e0       	ldi	r19, 0x00	; 0
    1fb6:	f9 01       	movw	r30, r18
    1fb8:	ee 0f       	add	r30, r30
    1fba:	ff 1f       	adc	r31, r31
    1fbc:	a3 e0       	ldi	r26, 0x03	; 3
    1fbe:	22 0f       	add	r18, r18
    1fc0:	33 1f       	adc	r19, r19
    1fc2:	aa 95       	dec	r26
    1fc4:	e1 f7       	brne	.-8      	; 0x1fbe <_ZN15OrangutanSerial11uart_tx_isrEh+0x52>
    1fc6:	e2 0f       	add	r30, r18
    1fc8:	f3 1f       	adc	r31, r19
    1fca:	ee 5f       	subi	r30, 0xFE	; 254
    1fcc:	fe 4f       	sbci	r31, 0xFE	; 254
    1fce:	93 81       	ldd	r25, Z+3	; 0x03
    1fd0:	69 17       	cp	r22, r25
    1fd2:	08 f0       	brcs	.+2      	; 0x1fd6 <_ZN15OrangutanSerial11uart_tx_isrEh+0x6a>
    1fd4:	44 c0       	rjmp	.+136    	; 0x205e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    1fd6:	88 23       	and	r24, r24
    1fd8:	19 f4       	brne	.+6      	; 0x1fe0 <_ZN15OrangutanSerial11uart_tx_isrEh+0x74>
    1fda:	e0 ec       	ldi	r30, 0xC0	; 192
    1fdc:	f0 e0       	ldi	r31, 0x00	; 0
    1fde:	02 c0       	rjmp	.+4      	; 0x1fe4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x78>
    1fe0:	e8 ec       	ldi	r30, 0xC8	; 200
    1fe2:	f0 e0       	ldi	r31, 0x00	; 0
    1fe4:	90 81       	ld	r25, Z
    1fe6:	95 ff       	sbrs	r25, 5
    1fe8:	3a c0       	rjmp	.+116    	; 0x205e <_ZN15OrangutanSerial11uart_tx_isrEh+0xf2>
    1fea:	88 23       	and	r24, r24
    1fec:	19 f4       	brne	.+6      	; 0x1ff4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x88>
    1fee:	a6 ec       	ldi	r26, 0xC6	; 198
    1ff0:	b0 e0       	ldi	r27, 0x00	; 0
    1ff2:	02 c0       	rjmp	.+4      	; 0x1ff8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x8c>
    1ff4:	ae ec       	ldi	r26, 0xCE	; 206
    1ff6:	b0 e0       	ldi	r27, 0x00	; 0
    1ff8:	28 2f       	mov	r18, r24
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	f9 01       	movw	r30, r18
    1ffe:	ee 0f       	add	r30, r30
    2000:	ff 1f       	adc	r31, r31
    2002:	63 e0       	ldi	r22, 0x03	; 3
    2004:	22 0f       	add	r18, r18
    2006:	33 1f       	adc	r19, r19
    2008:	6a 95       	dec	r22
    200a:	e1 f7       	brne	.-8      	; 0x2004 <_ZN15OrangutanSerial11uart_tx_isrEh+0x98>
    200c:	e2 0f       	add	r30, r18
    200e:	f3 1f       	adc	r31, r19
    2010:	ee 5f       	subi	r30, 0xFE	; 254
    2012:	fe 4f       	sbci	r31, 0xFE	; 254
    2014:	91 81       	ldd	r25, Z+1	; 0x01
    2016:	49 0f       	add	r20, r25
    2018:	51 1d       	adc	r21, r1
    201a:	fa 01       	movw	r30, r20
    201c:	90 81       	ld	r25, Z
    201e:	9c 93       	st	X, r25
    2020:	28 2f       	mov	r18, r24
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	f9 01       	movw	r30, r18
    2026:	ee 0f       	add	r30, r30
    2028:	ff 1f       	adc	r31, r31
    202a:	93 e0       	ldi	r25, 0x03	; 3
    202c:	22 0f       	add	r18, r18
    202e:	33 1f       	adc	r19, r19
    2030:	9a 95       	dec	r25
    2032:	e1 f7       	brne	.-8      	; 0x202c <_ZN15OrangutanSerial11uart_tx_isrEh+0xc0>
    2034:	e2 0f       	add	r30, r18
    2036:	f3 1f       	adc	r31, r19
    2038:	ee 5f       	subi	r30, 0xFE	; 254
    203a:	fe 4f       	sbci	r31, 0xFE	; 254
    203c:	91 81       	ldd	r25, Z+1	; 0x01
    203e:	9f 5f       	subi	r25, 0xFF	; 255
    2040:	28 2f       	mov	r18, r24
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	f9 01       	movw	r30, r18
    2046:	ee 0f       	add	r30, r30
    2048:	ff 1f       	adc	r31, r31
    204a:	a3 e0       	ldi	r26, 0x03	; 3
    204c:	22 0f       	add	r18, r18
    204e:	33 1f       	adc	r19, r19
    2050:	aa 95       	dec	r26
    2052:	e1 f7       	brne	.-8      	; 0x204c <_ZN15OrangutanSerial11uart_tx_isrEh+0xe0>
    2054:	e2 0f       	add	r30, r18
    2056:	f3 1f       	adc	r31, r19
    2058:	ee 5f       	subi	r30, 0xFE	; 254
    205a:	fe 4f       	sbci	r31, 0xFE	; 254
    205c:	91 83       	std	Z+1, r25	; 0x01
    205e:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2062:	08 95       	ret

00002064 <_ZN15OrangutanSerial15serial_tx_checkEh>:
    2064:	1f 93       	push	r17
    2066:	18 2f       	mov	r17, r24
    2068:	82 30       	cpi	r24, 0x02	; 2
    206a:	31 f0       	breq	.+12     	; 0x2078 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    206c:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <_Z25uart_disable_tx_interrupth>
    2070:	81 2f       	mov	r24, r17
    2072:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <_ZN15OrangutanSerial11uart_tx_isrEh>
    2076:	1d c0       	rjmp	.+58     	; 0x20b2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    2078:	80 91 1c 01 	lds	r24, 0x011C
    207c:	90 91 1d 01 	lds	r25, 0x011D
    2080:	00 97       	sbiw	r24, 0x00	; 0
    2082:	b9 f0       	breq	.+46     	; 0x20b2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    2084:	30 91 17 01 	lds	r19, 0x0117
    2088:	20 91 19 01 	lds	r18, 0x0119
    208c:	32 17       	cp	r19, r18
    208e:	88 f4       	brcc	.+34     	; 0x20b2 <_ZN15OrangutanSerial15serial_tx_checkEh+0x4e>
    2090:	06 c0       	rjmp	.+12     	; 0x209e <_ZN15OrangutanSerial15serial_tx_checkEh+0x3a>
    2092:	80 91 17 01 	lds	r24, 0x0117
    2096:	8f 5f       	subi	r24, 0xFF	; 255
    2098:	80 93 17 01 	sts	0x0117, r24
    209c:	ed cf       	rjmp	.-38     	; 0x2078 <_ZN15OrangutanSerial15serial_tx_checkEh+0x14>
    209e:	20 91 17 01 	lds	r18, 0x0117
    20a2:	82 0f       	add	r24, r18
    20a4:	91 1d       	adc	r25, r1
    20a6:	fc 01       	movw	r30, r24
    20a8:	80 81       	ld	r24, Z
    20aa:	0e 94 58 11 	call	0x22b0	; 0x22b0 <_ZN12OrangutanSVP17serialSendIfReadyEc>
    20ae:	88 23       	and	r24, r24
    20b0:	81 f7       	brne	.-32     	; 0x2092 <_ZN15OrangutanSerial15serial_tx_checkEh+0x2e>
    20b2:	1f 91       	pop	r17
    20b4:	08 95       	ret

000020b6 <_ZN15OrangutanSerial5checkEv>:
    20b6:	80 e0       	ldi	r24, 0x00	; 0
    20b8:	0e 94 32 10 	call	0x2064	; 0x2064 <_ZN15OrangutanSerial15serial_tx_checkEh>
    20bc:	81 e0       	ldi	r24, 0x01	; 1
    20be:	0e 94 32 10 	call	0x2064	; 0x2064 <_ZN15OrangutanSerial15serial_tx_checkEh>
    20c2:	82 e0       	ldi	r24, 0x02	; 2
    20c4:	0e 94 32 10 	call	0x2064	; 0x2064 <_ZN15OrangutanSerial15serial_tx_checkEh>
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    20d4:	82 e0       	ldi	r24, 0x02	; 2
    20d6:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN15OrangutanSerial15serial_rx_checkEh>
    20da:	08 95       	ret

000020dc <serial_check>:
    20dc:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_ZN15OrangutanSerial5checkEv>
    20e0:	08 95       	ret

000020e2 <_ZN15OrangutanSerial4sendEhPch>:
    20e2:	28 2f       	mov	r18, r24
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	f9 01       	movw	r30, r18
    20e8:	ee 0f       	add	r30, r30
    20ea:	ff 1f       	adc	r31, r31
    20ec:	93 e0       	ldi	r25, 0x03	; 3
    20ee:	22 0f       	add	r18, r18
    20f0:	33 1f       	adc	r19, r19
    20f2:	9a 95       	dec	r25
    20f4:	e1 f7       	brne	.-8      	; 0x20ee <_ZN15OrangutanSerial4sendEhPch+0xc>
    20f6:	e2 0f       	add	r30, r18
    20f8:	f3 1f       	adc	r31, r19
    20fa:	ee 5f       	subi	r30, 0xFE	; 254
    20fc:	fe 4f       	sbci	r31, 0xFE	; 254
    20fe:	77 83       	std	Z+7, r23	; 0x07
    2100:	66 83       	std	Z+6, r22	; 0x06
    2102:	28 2f       	mov	r18, r24
    2104:	30 e0       	ldi	r19, 0x00	; 0
    2106:	f9 01       	movw	r30, r18
    2108:	ee 0f       	add	r30, r30
    210a:	ff 1f       	adc	r31, r31
    210c:	a3 e0       	ldi	r26, 0x03	; 3
    210e:	22 0f       	add	r18, r18
    2110:	33 1f       	adc	r19, r19
    2112:	aa 95       	dec	r26
    2114:	e1 f7       	brne	.-8      	; 0x210e <_ZN15OrangutanSerial4sendEhPch+0x2c>
    2116:	e2 0f       	add	r30, r18
    2118:	f3 1f       	adc	r31, r19
    211a:	ee 5f       	subi	r30, 0xFE	; 254
    211c:	fe 4f       	sbci	r31, 0xFE	; 254
    211e:	11 82       	std	Z+1, r1	; 0x01
    2120:	28 2f       	mov	r18, r24
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	f9 01       	movw	r30, r18
    2126:	ee 0f       	add	r30, r30
    2128:	ff 1f       	adc	r31, r31
    212a:	63 e0       	ldi	r22, 0x03	; 3
    212c:	22 0f       	add	r18, r18
    212e:	33 1f       	adc	r19, r19
    2130:	6a 95       	dec	r22
    2132:	e1 f7       	brne	.-8      	; 0x212c <_ZN15OrangutanSerial4sendEhPch+0x4a>
    2134:	e2 0f       	add	r30, r18
    2136:	f3 1f       	adc	r31, r19
    2138:	ee 5f       	subi	r30, 0xFE	; 254
    213a:	fe 4f       	sbci	r31, 0xFE	; 254
    213c:	43 83       	std	Z+3, r20	; 0x03
    213e:	82 30       	cpi	r24, 0x02	; 2
    2140:	11 f0       	breq	.+4      	; 0x2146 <_ZN15OrangutanSerial4sendEhPch+0x64>
    2142:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2146:	08 95       	ret

00002148 <serial_send>:
    2148:	0e 94 71 10 	call	0x20e2	; 0x20e2 <_ZN15OrangutanSerial4sendEhPch>
    214c:	08 95       	ret

0000214e <__vector_21>:
    214e:	1f 92       	push	r1
    2150:	0f 92       	push	r0
    2152:	0f b6       	in	r0, 0x3f	; 63
    2154:	0f 92       	push	r0
    2156:	0b b6       	in	r0, 0x3b	; 59
    2158:	0f 92       	push	r0
    215a:	11 24       	eor	r1, r1
    215c:	2f 93       	push	r18
    215e:	3f 93       	push	r19
    2160:	4f 93       	push	r20
    2162:	5f 93       	push	r21
    2164:	6f 93       	push	r22
    2166:	7f 93       	push	r23
    2168:	8f 93       	push	r24
    216a:	9f 93       	push	r25
    216c:	af 93       	push	r26
    216e:	bf 93       	push	r27
    2170:	ef 93       	push	r30
    2172:	ff 93       	push	r31
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <_ZN15OrangutanSerial11uart_tx_isrEh>
    217a:	ff 91       	pop	r31
    217c:	ef 91       	pop	r30
    217e:	bf 91       	pop	r27
    2180:	af 91       	pop	r26
    2182:	9f 91       	pop	r25
    2184:	8f 91       	pop	r24
    2186:	7f 91       	pop	r23
    2188:	6f 91       	pop	r22
    218a:	5f 91       	pop	r21
    218c:	4f 91       	pop	r20
    218e:	3f 91       	pop	r19
    2190:	2f 91       	pop	r18
    2192:	0f 90       	pop	r0
    2194:	0b be       	out	0x3b, r0	; 59
    2196:	0f 90       	pop	r0
    2198:	0f be       	out	0x3f, r0	; 63
    219a:	0f 90       	pop	r0
    219c:	1f 90       	pop	r1
    219e:	18 95       	reti

000021a0 <__vector_29>:
    21a0:	1f 92       	push	r1
    21a2:	0f 92       	push	r0
    21a4:	0f b6       	in	r0, 0x3f	; 63
    21a6:	0f 92       	push	r0
    21a8:	0b b6       	in	r0, 0x3b	; 59
    21aa:	0f 92       	push	r0
    21ac:	11 24       	eor	r1, r1
    21ae:	2f 93       	push	r18
    21b0:	3f 93       	push	r19
    21b2:	4f 93       	push	r20
    21b4:	5f 93       	push	r21
    21b6:	6f 93       	push	r22
    21b8:	7f 93       	push	r23
    21ba:	8f 93       	push	r24
    21bc:	9f 93       	push	r25
    21be:	af 93       	push	r26
    21c0:	bf 93       	push	r27
    21c2:	ef 93       	push	r30
    21c4:	ff 93       	push	r31
    21c6:	81 e0       	ldi	r24, 0x01	; 1
    21c8:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <_ZN15OrangutanSerial11uart_tx_isrEh>
    21cc:	ff 91       	pop	r31
    21ce:	ef 91       	pop	r30
    21d0:	bf 91       	pop	r27
    21d2:	af 91       	pop	r26
    21d4:	9f 91       	pop	r25
    21d6:	8f 91       	pop	r24
    21d8:	7f 91       	pop	r23
    21da:	6f 91       	pop	r22
    21dc:	5f 91       	pop	r21
    21de:	4f 91       	pop	r20
    21e0:	3f 91       	pop	r19
    21e2:	2f 91       	pop	r18
    21e4:	0f 90       	pop	r0
    21e6:	0b be       	out	0x3b, r0	; 59
    21e8:	0f 90       	pop	r0
    21ea:	0f be       	out	0x3f, r0	; 63
    21ec:	0f 90       	pop	r0
    21ee:	1f 90       	pop	r1
    21f0:	18 95       	reti

000021f2 <_ZN13OrangutanTime17delayMicrosecondsEj>:
    21f2:	6f 93       	push	r22
    21f4:	64 e0       	ldi	r22, 0x04	; 4
    21f6:	6a 95       	dec	r22
    21f8:	f1 f7       	brne	.-4      	; 0x21f6 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    21fa:	6f 91       	pop	r22
    21fc:	01 97       	sbiw	r24, 0x01	; 1
    21fe:	c9 f7       	brne	.-14     	; 0x21f2 <_ZN13OrangutanTime17delayMicrosecondsEj>
    2200:	08 95       	ret

00002202 <__vector_11>:
    2202:	2f 92       	push	r2
    2204:	8f 93       	push	r24
    2206:	9f 93       	push	r25
    2208:	2f b6       	in	r2, 0x3f	; 63
    220a:	80 91 d1 01 	lds	r24, 0x01D1
    220e:	90 91 d2 01 	lds	r25, 0x01D2
    2212:	01 96       	adiw	r24, 0x01	; 1
    2214:	80 93 d1 01 	sts	0x01D1, r24
    2218:	90 93 d2 01 	sts	0x01D2, r25
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	80 91 d3 01 	lds	r24, 0x01D3
    2222:	89 1f       	adc	r24, r25
    2224:	80 93 d3 01 	sts	0x01D3, r24
    2228:	90 91 d9 01 	lds	r25, 0x01D9
    222c:	9c 5f       	subi	r25, 0xFC	; 252
    222e:	90 93 d9 01 	sts	0x01D9, r25
    2232:	80 91 d8 01 	lds	r24, 0x01D8
    2236:	80 51       	subi	r24, 0x10	; 16
    2238:	97 42       	sbci	r25, 0x27	; 39
    223a:	c0 f0       	brcs	.+48     	; 0x226c <end>
    223c:	90 93 d9 01 	sts	0x01D9, r25
    2240:	80 93 d8 01 	sts	0x01D8, r24
    2244:	80 91 d4 01 	lds	r24, 0x01D4
    2248:	90 91 d5 01 	lds	r25, 0x01D5
    224c:	01 96       	adiw	r24, 0x01	; 1
    224e:	80 93 d4 01 	sts	0x01D4, r24
    2252:	90 93 d5 01 	sts	0x01D5, r25
    2256:	90 e0       	ldi	r25, 0x00	; 0
    2258:	80 91 d6 01 	lds	r24, 0x01D6
    225c:	89 1f       	adc	r24, r25
    225e:	80 93 d6 01 	sts	0x01D6, r24
    2262:	80 91 d7 01 	lds	r24, 0x01D7
    2266:	89 1f       	adc	r24, r25
    2268:	80 93 d7 01 	sts	0x01D7, r24

0000226c <end>:
    226c:	2f be       	out	0x3f, r2	; 63
    226e:	9f 91       	pop	r25
    2270:	8f 91       	pop	r24
    2272:	2f 90       	pop	r2
    2274:	18 95       	reti

00002276 <_ZN13OrangutanTime17delayMillisecondsEj>:
    2276:	cf 93       	push	r28
    2278:	df 93       	push	r29
    227a:	ec 01       	movw	r28, r24
    227c:	05 c0       	rjmp	.+10     	; 0x2288 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    227e:	88 ee       	ldi	r24, 0xE8	; 232
    2280:	93 e0       	ldi	r25, 0x03	; 3
    2282:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <_ZN13OrangutanTime17delayMicrosecondsEj>
    2286:	21 97       	sbiw	r28, 0x01	; 1
    2288:	20 97       	sbiw	r28, 0x00	; 0
    228a:	c9 f7       	brne	.-14     	; 0x227e <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    228c:	df 91       	pop	r29
    228e:	cf 91       	pop	r28
    2290:	08 95       	ret

00002292 <delay_ms>:
    2292:	0e 94 3b 11 	call	0x2276	; 0x2276 <_ZN13OrangutanTime17delayMillisecondsEj>
    2296:	08 95       	ret

00002298 <_ZN12OrangutanSVP11getNextByteEv>:
    2298:	8f ef       	ldi	r24, 0xFF	; 255
    229a:	64 e0       	ldi	r22, 0x04	; 4
    229c:	0e 94 9b 11 	call	0x2336	; 0x2336 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    22a0:	08 95       	ret

000022a2 <_ZN12OrangutanSVP15serialReadStartEv>:
    22a2:	83 e8       	ldi	r24, 0x83	; 131
    22a4:	67 e0       	ldi	r22, 0x07	; 7
    22a6:	0e 94 9b 11 	call	0x2336	; 0x2336 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    22aa:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN12OrangutanSVP11getNextByteEv>
    22ae:	08 95       	ret

000022b0 <_ZN12OrangutanSVP17serialSendIfReadyEc>:
    22b0:	1f 93       	push	r17
    22b2:	18 2f       	mov	r17, r24
    22b4:	98 2f       	mov	r25, r24
    22b6:	90 95       	com	r25
    22b8:	99 1f       	adc	r25, r25
    22ba:	99 27       	eor	r25, r25
    22bc:	99 1f       	adc	r25, r25
    22be:	85 e8       	ldi	r24, 0x85	; 133
    22c0:	89 1b       	sub	r24, r25
    22c2:	65 e0       	ldi	r22, 0x05	; 5
    22c4:	0e 94 9b 11 	call	0x2336	; 0x2336 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    22c8:	81 2f       	mov	r24, r17
    22ca:	8f 77       	andi	r24, 0x7F	; 127
    22cc:	65 e0       	ldi	r22, 0x05	; 5
    22ce:	0e 94 9b 11 	call	0x2336	; 0x2336 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>
    22d2:	1f 91       	pop	r17
    22d4:	08 95       	ret

000022d6 <delayMicroseconds>:
    22d6:	6f 93       	push	r22
    22d8:	64 e0       	ldi	r22, 0x04	; 4
    22da:	6a 95       	dec	r22
    22dc:	f1 f7       	brne	.-4      	; 0x22da <delayMicroseconds+0x4>
    22de:	6f 91       	pop	r22
    22e0:	01 97       	sbiw	r24, 0x01	; 1
    22e2:	c9 f7       	brne	.-14     	; 0x22d6 <delayMicroseconds>
    22e4:	08 95       	ret

000022e6 <_ZN18OrangutanSPIMaster4initEhh>:
    22e6:	a1 e0       	ldi	r26, 0x01	; 1
    22e8:	b0 e0       	ldi	r27, 0x00	; 0
    22ea:	e9 e7       	ldi	r30, 0x79	; 121
    22ec:	f1 e1       	ldi	r31, 0x11	; 17
    22ee:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__prologue_saves__+0x1e>
    22f2:	18 2f       	mov	r17, r24
    22f4:	24 99       	sbic	0x04, 4	; 4
    22f6:	09 c0       	rjmp	.+18     	; 0x230a <_ZN18OrangutanSPIMaster4initEhh+0x24>
    22f8:	2c 99       	sbic	0x05, 4	; 5
    22fa:	07 c0       	rjmp	.+14     	; 0x230a <_ZN18OrangutanSPIMaster4initEhh+0x24>
    22fc:	2c 9a       	sbi	0x05, 4	; 5
    22fe:	8e e1       	ldi	r24, 0x1E	; 30
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	69 83       	std	Y+1, r22	; 0x01
    2304:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <delayMicroseconds>
    2308:	69 81       	ldd	r22, Y+1	; 0x01
    230a:	84 b1       	in	r24, 0x04	; 4
    230c:	80 6a       	ori	r24, 0xA0	; 160
    230e:	84 b9       	out	0x04, r24	; 4
    2310:	26 98       	cbi	0x04, 6	; 4
    2312:	81 2f       	mov	r24, r17
    2314:	83 70       	andi	r24, 0x03	; 3
    2316:	80 65       	ori	r24, 0x50	; 80
    2318:	6c 7a       	andi	r22, 0xAC	; 172
    231a:	86 2b       	or	r24, r22
    231c:	8c bd       	out	0x2c, r24	; 44
    231e:	81 e0       	ldi	r24, 0x01	; 1
    2320:	12 ff       	sbrs	r17, 2
    2322:	80 e0       	ldi	r24, 0x00	; 0
    2324:	8d bd       	out	0x2d, r24	; 45
    2326:	81 e0       	ldi	r24, 0x01	; 1
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	0e 94 3b 11 	call	0x2276	; 0x2276 <_ZN13OrangutanTime17delayMillisecondsEj>
    232e:	21 96       	adiw	r28, 0x01	; 1
    2330:	e3 e0       	ldi	r30, 0x03	; 3
    2332:	0c 94 57 14 	jmp	0x28ae	; 0x28ae <__epilogue_restores__+0x1e>

00002336 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh>:
    2336:	0f 93       	push	r16
    2338:	1f 93       	push	r17
    233a:	08 2f       	mov	r16, r24
    233c:	16 2f       	mov	r17, r22
    233e:	0c b4       	in	r0, 0x2c	; 44
    2340:	06 fc       	sbrc	r0, 6
    2342:	04 c0       	rjmp	.+8      	; 0x234c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x16>
    2344:	80 e0       	ldi	r24, 0x00	; 0
    2346:	64 e0       	ldi	r22, 0x04	; 4
    2348:	0e 94 73 11 	call	0x22e6	; 0x22e6 <_ZN18OrangutanSPIMaster4initEhh>
    234c:	0c b4       	in	r0, 0x2c	; 44
    234e:	04 fc       	sbrc	r0, 4
    2350:	03 c0       	rjmp	.+6      	; 0x2358 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x22>
    2352:	8c b5       	in	r24, 0x2c	; 44
    2354:	80 61       	ori	r24, 0x10	; 16
    2356:	8c bd       	out	0x2c, r24	; 44
    2358:	0e bd       	out	0x2e, r16	; 46
    235a:	03 c0       	rjmp	.+6      	; 0x2362 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x2c>
    235c:	0c b4       	in	r0, 0x2c	; 44
    235e:	04 fe       	sbrs	r0, 4
    2360:	0b c0       	rjmp	.+22     	; 0x2378 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x42>
    2362:	0d b4       	in	r0, 0x2d	; 45
    2364:	07 fe       	sbrs	r0, 7
    2366:	fa cf       	rjmp	.-12     	; 0x235c <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x26>
    2368:	11 23       	and	r17, r17
    236a:	21 f0       	breq	.+8      	; 0x2374 <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x3e>
    236c:	81 2f       	mov	r24, r17
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <delayMicroseconds>
    2374:	8e b5       	in	r24, 0x2e	; 46
    2376:	01 c0       	rjmp	.+2      	; 0x237a <_ZN18OrangutanSPIMaster16transmitAndDelayEhh+0x44>
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	1f 91       	pop	r17
    237c:	0f 91       	pop	r16
    237e:	08 95       	ret

00002380 <__subsf3>:
    2380:	50 58       	subi	r21, 0x80	; 128

00002382 <__addsf3>:
    2382:	bb 27       	eor	r27, r27
    2384:	aa 27       	eor	r26, r26
    2386:	0e d0       	rcall	.+28     	; 0x23a4 <__addsf3x>
    2388:	75 c1       	rjmp	.+746    	; 0x2674 <__fp_round>
    238a:	66 d1       	rcall	.+716    	; 0x2658 <__fp_pscA>
    238c:	30 f0       	brcs	.+12     	; 0x239a <__addsf3+0x18>
    238e:	6b d1       	rcall	.+726    	; 0x2666 <__fp_pscB>
    2390:	20 f0       	brcs	.+8      	; 0x239a <__addsf3+0x18>
    2392:	31 f4       	brne	.+12     	; 0x23a0 <__addsf3+0x1e>
    2394:	9f 3f       	cpi	r25, 0xFF	; 255
    2396:	11 f4       	brne	.+4      	; 0x239c <__addsf3+0x1a>
    2398:	1e f4       	brtc	.+6      	; 0x23a0 <__addsf3+0x1e>
    239a:	5b c1       	rjmp	.+694    	; 0x2652 <__fp_nan>
    239c:	0e f4       	brtc	.+2      	; 0x23a0 <__addsf3+0x1e>
    239e:	e0 95       	com	r30
    23a0:	e7 fb       	bst	r30, 7
    23a2:	51 c1       	rjmp	.+674    	; 0x2646 <__fp_inf>

000023a4 <__addsf3x>:
    23a4:	e9 2f       	mov	r30, r25
    23a6:	77 d1       	rcall	.+750    	; 0x2696 <__fp_split3>
    23a8:	80 f3       	brcs	.-32     	; 0x238a <__addsf3+0x8>
    23aa:	ba 17       	cp	r27, r26
    23ac:	62 07       	cpc	r22, r18
    23ae:	73 07       	cpc	r23, r19
    23b0:	84 07       	cpc	r24, r20
    23b2:	95 07       	cpc	r25, r21
    23b4:	18 f0       	brcs	.+6      	; 0x23bc <__addsf3x+0x18>
    23b6:	71 f4       	brne	.+28     	; 0x23d4 <__addsf3x+0x30>
    23b8:	9e f5       	brtc	.+102    	; 0x2420 <__addsf3x+0x7c>
    23ba:	8f c1       	rjmp	.+798    	; 0x26da <__fp_zero>
    23bc:	0e f4       	brtc	.+2      	; 0x23c0 <__addsf3x+0x1c>
    23be:	e0 95       	com	r30
    23c0:	0b 2e       	mov	r0, r27
    23c2:	ba 2f       	mov	r27, r26
    23c4:	a0 2d       	mov	r26, r0
    23c6:	0b 01       	movw	r0, r22
    23c8:	b9 01       	movw	r22, r18
    23ca:	90 01       	movw	r18, r0
    23cc:	0c 01       	movw	r0, r24
    23ce:	ca 01       	movw	r24, r20
    23d0:	a0 01       	movw	r20, r0
    23d2:	11 24       	eor	r1, r1
    23d4:	ff 27       	eor	r31, r31
    23d6:	59 1b       	sub	r21, r25
    23d8:	99 f0       	breq	.+38     	; 0x2400 <__addsf3x+0x5c>
    23da:	59 3f       	cpi	r21, 0xF9	; 249
    23dc:	50 f4       	brcc	.+20     	; 0x23f2 <__addsf3x+0x4e>
    23de:	50 3e       	cpi	r21, 0xE0	; 224
    23e0:	68 f1       	brcs	.+90     	; 0x243c <__addsf3x+0x98>
    23e2:	1a 16       	cp	r1, r26
    23e4:	f0 40       	sbci	r31, 0x00	; 0
    23e6:	a2 2f       	mov	r26, r18
    23e8:	23 2f       	mov	r18, r19
    23ea:	34 2f       	mov	r19, r20
    23ec:	44 27       	eor	r20, r20
    23ee:	58 5f       	subi	r21, 0xF8	; 248
    23f0:	f3 cf       	rjmp	.-26     	; 0x23d8 <__addsf3x+0x34>
    23f2:	46 95       	lsr	r20
    23f4:	37 95       	ror	r19
    23f6:	27 95       	ror	r18
    23f8:	a7 95       	ror	r26
    23fa:	f0 40       	sbci	r31, 0x00	; 0
    23fc:	53 95       	inc	r21
    23fe:	c9 f7       	brne	.-14     	; 0x23f2 <__addsf3x+0x4e>
    2400:	7e f4       	brtc	.+30     	; 0x2420 <__addsf3x+0x7c>
    2402:	1f 16       	cp	r1, r31
    2404:	ba 0b       	sbc	r27, r26
    2406:	62 0b       	sbc	r22, r18
    2408:	73 0b       	sbc	r23, r19
    240a:	84 0b       	sbc	r24, r20
    240c:	ba f0       	brmi	.+46     	; 0x243c <__addsf3x+0x98>
    240e:	91 50       	subi	r25, 0x01	; 1
    2410:	a1 f0       	breq	.+40     	; 0x243a <__addsf3x+0x96>
    2412:	ff 0f       	add	r31, r31
    2414:	bb 1f       	adc	r27, r27
    2416:	66 1f       	adc	r22, r22
    2418:	77 1f       	adc	r23, r23
    241a:	88 1f       	adc	r24, r24
    241c:	c2 f7       	brpl	.-16     	; 0x240e <__addsf3x+0x6a>
    241e:	0e c0       	rjmp	.+28     	; 0x243c <__addsf3x+0x98>
    2420:	ba 0f       	add	r27, r26
    2422:	62 1f       	adc	r22, r18
    2424:	73 1f       	adc	r23, r19
    2426:	84 1f       	adc	r24, r20
    2428:	48 f4       	brcc	.+18     	; 0x243c <__addsf3x+0x98>
    242a:	87 95       	ror	r24
    242c:	77 95       	ror	r23
    242e:	67 95       	ror	r22
    2430:	b7 95       	ror	r27
    2432:	f7 95       	ror	r31
    2434:	9e 3f       	cpi	r25, 0xFE	; 254
    2436:	08 f0       	brcs	.+2      	; 0x243a <__addsf3x+0x96>
    2438:	b3 cf       	rjmp	.-154    	; 0x23a0 <__addsf3+0x1e>
    243a:	93 95       	inc	r25
    243c:	88 0f       	add	r24, r24
    243e:	08 f0       	brcs	.+2      	; 0x2442 <__addsf3x+0x9e>
    2440:	99 27       	eor	r25, r25
    2442:	ee 0f       	add	r30, r30
    2444:	97 95       	ror	r25
    2446:	87 95       	ror	r24
    2448:	08 95       	ret

0000244a <__cmpsf2>:
    244a:	d9 d0       	rcall	.+434    	; 0x25fe <__fp_cmp>
    244c:	08 f4       	brcc	.+2      	; 0x2450 <__cmpsf2+0x6>
    244e:	81 e0       	ldi	r24, 0x01	; 1
    2450:	08 95       	ret

00002452 <__divsf3>:
    2452:	0c d0       	rcall	.+24     	; 0x246c <__divsf3x>
    2454:	0f c1       	rjmp	.+542    	; 0x2674 <__fp_round>
    2456:	07 d1       	rcall	.+526    	; 0x2666 <__fp_pscB>
    2458:	40 f0       	brcs	.+16     	; 0x246a <__divsf3+0x18>
    245a:	fe d0       	rcall	.+508    	; 0x2658 <__fp_pscA>
    245c:	30 f0       	brcs	.+12     	; 0x246a <__divsf3+0x18>
    245e:	21 f4       	brne	.+8      	; 0x2468 <__divsf3+0x16>
    2460:	5f 3f       	cpi	r21, 0xFF	; 255
    2462:	19 f0       	breq	.+6      	; 0x246a <__divsf3+0x18>
    2464:	f0 c0       	rjmp	.+480    	; 0x2646 <__fp_inf>
    2466:	51 11       	cpse	r21, r1
    2468:	39 c1       	rjmp	.+626    	; 0x26dc <__fp_szero>
    246a:	f3 c0       	rjmp	.+486    	; 0x2652 <__fp_nan>

0000246c <__divsf3x>:
    246c:	14 d1       	rcall	.+552    	; 0x2696 <__fp_split3>
    246e:	98 f3       	brcs	.-26     	; 0x2456 <__divsf3+0x4>

00002470 <__divsf3_pse>:
    2470:	99 23       	and	r25, r25
    2472:	c9 f3       	breq	.-14     	; 0x2466 <__divsf3+0x14>
    2474:	55 23       	and	r21, r21
    2476:	b1 f3       	breq	.-20     	; 0x2464 <__divsf3+0x12>
    2478:	95 1b       	sub	r25, r21
    247a:	55 0b       	sbc	r21, r21
    247c:	bb 27       	eor	r27, r27
    247e:	aa 27       	eor	r26, r26
    2480:	62 17       	cp	r22, r18
    2482:	73 07       	cpc	r23, r19
    2484:	84 07       	cpc	r24, r20
    2486:	38 f0       	brcs	.+14     	; 0x2496 <__divsf3_pse+0x26>
    2488:	9f 5f       	subi	r25, 0xFF	; 255
    248a:	5f 4f       	sbci	r21, 0xFF	; 255
    248c:	22 0f       	add	r18, r18
    248e:	33 1f       	adc	r19, r19
    2490:	44 1f       	adc	r20, r20
    2492:	aa 1f       	adc	r26, r26
    2494:	a9 f3       	breq	.-22     	; 0x2480 <__divsf3_pse+0x10>
    2496:	33 d0       	rcall	.+102    	; 0x24fe <__divsf3_pse+0x8e>
    2498:	0e 2e       	mov	r0, r30
    249a:	3a f0       	brmi	.+14     	; 0x24aa <__divsf3_pse+0x3a>
    249c:	e0 e8       	ldi	r30, 0x80	; 128
    249e:	30 d0       	rcall	.+96     	; 0x2500 <__divsf3_pse+0x90>
    24a0:	91 50       	subi	r25, 0x01	; 1
    24a2:	50 40       	sbci	r21, 0x00	; 0
    24a4:	e6 95       	lsr	r30
    24a6:	00 1c       	adc	r0, r0
    24a8:	ca f7       	brpl	.-14     	; 0x249c <__divsf3_pse+0x2c>
    24aa:	29 d0       	rcall	.+82     	; 0x24fe <__divsf3_pse+0x8e>
    24ac:	fe 2f       	mov	r31, r30
    24ae:	27 d0       	rcall	.+78     	; 0x24fe <__divsf3_pse+0x8e>
    24b0:	66 0f       	add	r22, r22
    24b2:	77 1f       	adc	r23, r23
    24b4:	88 1f       	adc	r24, r24
    24b6:	bb 1f       	adc	r27, r27
    24b8:	26 17       	cp	r18, r22
    24ba:	37 07       	cpc	r19, r23
    24bc:	48 07       	cpc	r20, r24
    24be:	ab 07       	cpc	r26, r27
    24c0:	b0 e8       	ldi	r27, 0x80	; 128
    24c2:	09 f0       	breq	.+2      	; 0x24c6 <__divsf3_pse+0x56>
    24c4:	bb 0b       	sbc	r27, r27
    24c6:	80 2d       	mov	r24, r0
    24c8:	bf 01       	movw	r22, r30
    24ca:	ff 27       	eor	r31, r31
    24cc:	93 58       	subi	r25, 0x83	; 131
    24ce:	5f 4f       	sbci	r21, 0xFF	; 255
    24d0:	2a f0       	brmi	.+10     	; 0x24dc <__divsf3_pse+0x6c>
    24d2:	9e 3f       	cpi	r25, 0xFE	; 254
    24d4:	51 05       	cpc	r21, r1
    24d6:	68 f0       	brcs	.+26     	; 0x24f2 <__divsf3_pse+0x82>
    24d8:	b6 c0       	rjmp	.+364    	; 0x2646 <__fp_inf>
    24da:	00 c1       	rjmp	.+512    	; 0x26dc <__fp_szero>
    24dc:	5f 3f       	cpi	r21, 0xFF	; 255
    24de:	ec f3       	brlt	.-6      	; 0x24da <__divsf3_pse+0x6a>
    24e0:	98 3e       	cpi	r25, 0xE8	; 232
    24e2:	dc f3       	brlt	.-10     	; 0x24da <__divsf3_pse+0x6a>
    24e4:	86 95       	lsr	r24
    24e6:	77 95       	ror	r23
    24e8:	67 95       	ror	r22
    24ea:	b7 95       	ror	r27
    24ec:	f7 95       	ror	r31
    24ee:	9f 5f       	subi	r25, 0xFF	; 255
    24f0:	c9 f7       	brne	.-14     	; 0x24e4 <__divsf3_pse+0x74>
    24f2:	88 0f       	add	r24, r24
    24f4:	91 1d       	adc	r25, r1
    24f6:	96 95       	lsr	r25
    24f8:	87 95       	ror	r24
    24fa:	97 f9       	bld	r25, 7
    24fc:	08 95       	ret
    24fe:	e1 e0       	ldi	r30, 0x01	; 1
    2500:	66 0f       	add	r22, r22
    2502:	77 1f       	adc	r23, r23
    2504:	88 1f       	adc	r24, r24
    2506:	bb 1f       	adc	r27, r27
    2508:	62 17       	cp	r22, r18
    250a:	73 07       	cpc	r23, r19
    250c:	84 07       	cpc	r24, r20
    250e:	ba 07       	cpc	r27, r26
    2510:	20 f0       	brcs	.+8      	; 0x251a <__divsf3_pse+0xaa>
    2512:	62 1b       	sub	r22, r18
    2514:	73 0b       	sbc	r23, r19
    2516:	84 0b       	sbc	r24, r20
    2518:	ba 0b       	sbc	r27, r26
    251a:	ee 1f       	adc	r30, r30
    251c:	88 f7       	brcc	.-30     	; 0x2500 <__divsf3_pse+0x90>
    251e:	e0 95       	com	r30
    2520:	08 95       	ret

00002522 <__fixsfsi>:
    2522:	04 d0       	rcall	.+8      	; 0x252c <__fixunssfsi>
    2524:	68 94       	set
    2526:	b1 11       	cpse	r27, r1
    2528:	d9 c0       	rjmp	.+434    	; 0x26dc <__fp_szero>
    252a:	08 95       	ret

0000252c <__fixunssfsi>:
    252c:	bc d0       	rcall	.+376    	; 0x26a6 <__fp_splitA>
    252e:	88 f0       	brcs	.+34     	; 0x2552 <__fixunssfsi+0x26>
    2530:	9f 57       	subi	r25, 0x7F	; 127
    2532:	90 f0       	brcs	.+36     	; 0x2558 <__fixunssfsi+0x2c>
    2534:	b9 2f       	mov	r27, r25
    2536:	99 27       	eor	r25, r25
    2538:	b7 51       	subi	r27, 0x17	; 23
    253a:	a0 f0       	brcs	.+40     	; 0x2564 <__fixunssfsi+0x38>
    253c:	d1 f0       	breq	.+52     	; 0x2572 <__fixunssfsi+0x46>
    253e:	66 0f       	add	r22, r22
    2540:	77 1f       	adc	r23, r23
    2542:	88 1f       	adc	r24, r24
    2544:	99 1f       	adc	r25, r25
    2546:	1a f0       	brmi	.+6      	; 0x254e <__fixunssfsi+0x22>
    2548:	ba 95       	dec	r27
    254a:	c9 f7       	brne	.-14     	; 0x253e <__fixunssfsi+0x12>
    254c:	12 c0       	rjmp	.+36     	; 0x2572 <__fixunssfsi+0x46>
    254e:	b1 30       	cpi	r27, 0x01	; 1
    2550:	81 f0       	breq	.+32     	; 0x2572 <__fixunssfsi+0x46>
    2552:	c3 d0       	rcall	.+390    	; 0x26da <__fp_zero>
    2554:	b1 e0       	ldi	r27, 0x01	; 1
    2556:	08 95       	ret
    2558:	c0 c0       	rjmp	.+384    	; 0x26da <__fp_zero>
    255a:	67 2f       	mov	r22, r23
    255c:	78 2f       	mov	r23, r24
    255e:	88 27       	eor	r24, r24
    2560:	b8 5f       	subi	r27, 0xF8	; 248
    2562:	39 f0       	breq	.+14     	; 0x2572 <__fixunssfsi+0x46>
    2564:	b9 3f       	cpi	r27, 0xF9	; 249
    2566:	cc f3       	brlt	.-14     	; 0x255a <__fixunssfsi+0x2e>
    2568:	86 95       	lsr	r24
    256a:	77 95       	ror	r23
    256c:	67 95       	ror	r22
    256e:	b3 95       	inc	r27
    2570:	d9 f7       	brne	.-10     	; 0x2568 <__fixunssfsi+0x3c>
    2572:	3e f4       	brtc	.+14     	; 0x2582 <__fixunssfsi+0x56>
    2574:	90 95       	com	r25
    2576:	80 95       	com	r24
    2578:	70 95       	com	r23
    257a:	61 95       	neg	r22
    257c:	7f 4f       	sbci	r23, 0xFF	; 255
    257e:	8f 4f       	sbci	r24, 0xFF	; 255
    2580:	9f 4f       	sbci	r25, 0xFF	; 255
    2582:	08 95       	ret

00002584 <__floatunsisf>:
    2584:	e8 94       	clt
    2586:	09 c0       	rjmp	.+18     	; 0x259a <__floatsisf+0x12>

00002588 <__floatsisf>:
    2588:	97 fb       	bst	r25, 7
    258a:	3e f4       	brtc	.+14     	; 0x259a <__floatsisf+0x12>
    258c:	90 95       	com	r25
    258e:	80 95       	com	r24
    2590:	70 95       	com	r23
    2592:	61 95       	neg	r22
    2594:	7f 4f       	sbci	r23, 0xFF	; 255
    2596:	8f 4f       	sbci	r24, 0xFF	; 255
    2598:	9f 4f       	sbci	r25, 0xFF	; 255
    259a:	99 23       	and	r25, r25
    259c:	a9 f0       	breq	.+42     	; 0x25c8 <__floatsisf+0x40>
    259e:	f9 2f       	mov	r31, r25
    25a0:	96 e9       	ldi	r25, 0x96	; 150
    25a2:	bb 27       	eor	r27, r27
    25a4:	93 95       	inc	r25
    25a6:	f6 95       	lsr	r31
    25a8:	87 95       	ror	r24
    25aa:	77 95       	ror	r23
    25ac:	67 95       	ror	r22
    25ae:	b7 95       	ror	r27
    25b0:	f1 11       	cpse	r31, r1
    25b2:	f8 cf       	rjmp	.-16     	; 0x25a4 <__floatsisf+0x1c>
    25b4:	fa f4       	brpl	.+62     	; 0x25f4 <__floatsisf+0x6c>
    25b6:	bb 0f       	add	r27, r27
    25b8:	11 f4       	brne	.+4      	; 0x25be <__floatsisf+0x36>
    25ba:	60 ff       	sbrs	r22, 0
    25bc:	1b c0       	rjmp	.+54     	; 0x25f4 <__floatsisf+0x6c>
    25be:	6f 5f       	subi	r22, 0xFF	; 255
    25c0:	7f 4f       	sbci	r23, 0xFF	; 255
    25c2:	8f 4f       	sbci	r24, 0xFF	; 255
    25c4:	9f 4f       	sbci	r25, 0xFF	; 255
    25c6:	16 c0       	rjmp	.+44     	; 0x25f4 <__floatsisf+0x6c>
    25c8:	88 23       	and	r24, r24
    25ca:	11 f0       	breq	.+4      	; 0x25d0 <__floatsisf+0x48>
    25cc:	96 e9       	ldi	r25, 0x96	; 150
    25ce:	11 c0       	rjmp	.+34     	; 0x25f2 <__floatsisf+0x6a>
    25d0:	77 23       	and	r23, r23
    25d2:	21 f0       	breq	.+8      	; 0x25dc <__floatsisf+0x54>
    25d4:	9e e8       	ldi	r25, 0x8E	; 142
    25d6:	87 2f       	mov	r24, r23
    25d8:	76 2f       	mov	r23, r22
    25da:	05 c0       	rjmp	.+10     	; 0x25e6 <__floatsisf+0x5e>
    25dc:	66 23       	and	r22, r22
    25de:	71 f0       	breq	.+28     	; 0x25fc <__floatsisf+0x74>
    25e0:	96 e8       	ldi	r25, 0x86	; 134
    25e2:	86 2f       	mov	r24, r22
    25e4:	70 e0       	ldi	r23, 0x00	; 0
    25e6:	60 e0       	ldi	r22, 0x00	; 0
    25e8:	2a f0       	brmi	.+10     	; 0x25f4 <__floatsisf+0x6c>
    25ea:	9a 95       	dec	r25
    25ec:	66 0f       	add	r22, r22
    25ee:	77 1f       	adc	r23, r23
    25f0:	88 1f       	adc	r24, r24
    25f2:	da f7       	brpl	.-10     	; 0x25ea <__floatsisf+0x62>
    25f4:	88 0f       	add	r24, r24
    25f6:	96 95       	lsr	r25
    25f8:	87 95       	ror	r24
    25fa:	97 f9       	bld	r25, 7
    25fc:	08 95       	ret

000025fe <__fp_cmp>:
    25fe:	99 0f       	add	r25, r25
    2600:	00 08       	sbc	r0, r0
    2602:	55 0f       	add	r21, r21
    2604:	aa 0b       	sbc	r26, r26
    2606:	e0 e8       	ldi	r30, 0x80	; 128
    2608:	fe ef       	ldi	r31, 0xFE	; 254
    260a:	16 16       	cp	r1, r22
    260c:	17 06       	cpc	r1, r23
    260e:	e8 07       	cpc	r30, r24
    2610:	f9 07       	cpc	r31, r25
    2612:	c0 f0       	brcs	.+48     	; 0x2644 <__fp_cmp+0x46>
    2614:	12 16       	cp	r1, r18
    2616:	13 06       	cpc	r1, r19
    2618:	e4 07       	cpc	r30, r20
    261a:	f5 07       	cpc	r31, r21
    261c:	98 f0       	brcs	.+38     	; 0x2644 <__fp_cmp+0x46>
    261e:	62 1b       	sub	r22, r18
    2620:	73 0b       	sbc	r23, r19
    2622:	84 0b       	sbc	r24, r20
    2624:	95 0b       	sbc	r25, r21
    2626:	39 f4       	brne	.+14     	; 0x2636 <__fp_cmp+0x38>
    2628:	0a 26       	eor	r0, r26
    262a:	61 f0       	breq	.+24     	; 0x2644 <__fp_cmp+0x46>
    262c:	23 2b       	or	r18, r19
    262e:	24 2b       	or	r18, r20
    2630:	25 2b       	or	r18, r21
    2632:	21 f4       	brne	.+8      	; 0x263c <__fp_cmp+0x3e>
    2634:	08 95       	ret
    2636:	0a 26       	eor	r0, r26
    2638:	09 f4       	brne	.+2      	; 0x263c <__fp_cmp+0x3e>
    263a:	a1 40       	sbci	r26, 0x01	; 1
    263c:	a6 95       	lsr	r26
    263e:	8f ef       	ldi	r24, 0xFF	; 255
    2640:	81 1d       	adc	r24, r1
    2642:	81 1d       	adc	r24, r1
    2644:	08 95       	ret

00002646 <__fp_inf>:
    2646:	97 f9       	bld	r25, 7
    2648:	9f 67       	ori	r25, 0x7F	; 127
    264a:	80 e8       	ldi	r24, 0x80	; 128
    264c:	70 e0       	ldi	r23, 0x00	; 0
    264e:	60 e0       	ldi	r22, 0x00	; 0
    2650:	08 95       	ret

00002652 <__fp_nan>:
    2652:	9f ef       	ldi	r25, 0xFF	; 255
    2654:	80 ec       	ldi	r24, 0xC0	; 192
    2656:	08 95       	ret

00002658 <__fp_pscA>:
    2658:	00 24       	eor	r0, r0
    265a:	0a 94       	dec	r0
    265c:	16 16       	cp	r1, r22
    265e:	17 06       	cpc	r1, r23
    2660:	18 06       	cpc	r1, r24
    2662:	09 06       	cpc	r0, r25
    2664:	08 95       	ret

00002666 <__fp_pscB>:
    2666:	00 24       	eor	r0, r0
    2668:	0a 94       	dec	r0
    266a:	12 16       	cp	r1, r18
    266c:	13 06       	cpc	r1, r19
    266e:	14 06       	cpc	r1, r20
    2670:	05 06       	cpc	r0, r21
    2672:	08 95       	ret

00002674 <__fp_round>:
    2674:	09 2e       	mov	r0, r25
    2676:	03 94       	inc	r0
    2678:	00 0c       	add	r0, r0
    267a:	11 f4       	brne	.+4      	; 0x2680 <__fp_round+0xc>
    267c:	88 23       	and	r24, r24
    267e:	52 f0       	brmi	.+20     	; 0x2694 <__fp_round+0x20>
    2680:	bb 0f       	add	r27, r27
    2682:	40 f4       	brcc	.+16     	; 0x2694 <__fp_round+0x20>
    2684:	bf 2b       	or	r27, r31
    2686:	11 f4       	brne	.+4      	; 0x268c <__fp_round+0x18>
    2688:	60 ff       	sbrs	r22, 0
    268a:	04 c0       	rjmp	.+8      	; 0x2694 <__fp_round+0x20>
    268c:	6f 5f       	subi	r22, 0xFF	; 255
    268e:	7f 4f       	sbci	r23, 0xFF	; 255
    2690:	8f 4f       	sbci	r24, 0xFF	; 255
    2692:	9f 4f       	sbci	r25, 0xFF	; 255
    2694:	08 95       	ret

00002696 <__fp_split3>:
    2696:	57 fd       	sbrc	r21, 7
    2698:	90 58       	subi	r25, 0x80	; 128
    269a:	44 0f       	add	r20, r20
    269c:	55 1f       	adc	r21, r21
    269e:	59 f0       	breq	.+22     	; 0x26b6 <__fp_splitA+0x10>
    26a0:	5f 3f       	cpi	r21, 0xFF	; 255
    26a2:	71 f0       	breq	.+28     	; 0x26c0 <__fp_splitA+0x1a>
    26a4:	47 95       	ror	r20

000026a6 <__fp_splitA>:
    26a6:	88 0f       	add	r24, r24
    26a8:	97 fb       	bst	r25, 7
    26aa:	99 1f       	adc	r25, r25
    26ac:	61 f0       	breq	.+24     	; 0x26c6 <__fp_splitA+0x20>
    26ae:	9f 3f       	cpi	r25, 0xFF	; 255
    26b0:	79 f0       	breq	.+30     	; 0x26d0 <__fp_splitA+0x2a>
    26b2:	87 95       	ror	r24
    26b4:	08 95       	ret
    26b6:	12 16       	cp	r1, r18
    26b8:	13 06       	cpc	r1, r19
    26ba:	14 06       	cpc	r1, r20
    26bc:	55 1f       	adc	r21, r21
    26be:	f2 cf       	rjmp	.-28     	; 0x26a4 <__fp_split3+0xe>
    26c0:	46 95       	lsr	r20
    26c2:	f1 df       	rcall	.-30     	; 0x26a6 <__fp_splitA>
    26c4:	08 c0       	rjmp	.+16     	; 0x26d6 <__fp_splitA+0x30>
    26c6:	16 16       	cp	r1, r22
    26c8:	17 06       	cpc	r1, r23
    26ca:	18 06       	cpc	r1, r24
    26cc:	99 1f       	adc	r25, r25
    26ce:	f1 cf       	rjmp	.-30     	; 0x26b2 <__fp_splitA+0xc>
    26d0:	86 95       	lsr	r24
    26d2:	71 05       	cpc	r23, r1
    26d4:	61 05       	cpc	r22, r1
    26d6:	08 94       	sec
    26d8:	08 95       	ret

000026da <__fp_zero>:
    26da:	e8 94       	clt

000026dc <__fp_szero>:
    26dc:	bb 27       	eor	r27, r27
    26de:	66 27       	eor	r22, r22
    26e0:	77 27       	eor	r23, r23
    26e2:	cb 01       	movw	r24, r22
    26e4:	97 f9       	bld	r25, 7
    26e6:	08 95       	ret

000026e8 <__gesf2>:
    26e8:	8a df       	rcall	.-236    	; 0x25fe <__fp_cmp>
    26ea:	08 f4       	brcc	.+2      	; 0x26ee <__gesf2+0x6>
    26ec:	8f ef       	ldi	r24, 0xFF	; 255
    26ee:	08 95       	ret

000026f0 <__mulsf3>:
    26f0:	0b d0       	rcall	.+22     	; 0x2708 <__mulsf3x>
    26f2:	c0 cf       	rjmp	.-128    	; 0x2674 <__fp_round>
    26f4:	b1 df       	rcall	.-158    	; 0x2658 <__fp_pscA>
    26f6:	28 f0       	brcs	.+10     	; 0x2702 <__mulsf3+0x12>
    26f8:	b6 df       	rcall	.-148    	; 0x2666 <__fp_pscB>
    26fa:	18 f0       	brcs	.+6      	; 0x2702 <__mulsf3+0x12>
    26fc:	95 23       	and	r25, r21
    26fe:	09 f0       	breq	.+2      	; 0x2702 <__mulsf3+0x12>
    2700:	a2 cf       	rjmp	.-188    	; 0x2646 <__fp_inf>
    2702:	a7 cf       	rjmp	.-178    	; 0x2652 <__fp_nan>
    2704:	11 24       	eor	r1, r1
    2706:	ea cf       	rjmp	.-44     	; 0x26dc <__fp_szero>

00002708 <__mulsf3x>:
    2708:	c6 df       	rcall	.-116    	; 0x2696 <__fp_split3>
    270a:	a0 f3       	brcs	.-24     	; 0x26f4 <__mulsf3+0x4>

0000270c <__mulsf3_pse>:
    270c:	95 9f       	mul	r25, r21
    270e:	d1 f3       	breq	.-12     	; 0x2704 <__mulsf3+0x14>
    2710:	95 0f       	add	r25, r21
    2712:	50 e0       	ldi	r21, 0x00	; 0
    2714:	55 1f       	adc	r21, r21
    2716:	62 9f       	mul	r22, r18
    2718:	f0 01       	movw	r30, r0
    271a:	72 9f       	mul	r23, r18
    271c:	bb 27       	eor	r27, r27
    271e:	f0 0d       	add	r31, r0
    2720:	b1 1d       	adc	r27, r1
    2722:	63 9f       	mul	r22, r19
    2724:	aa 27       	eor	r26, r26
    2726:	f0 0d       	add	r31, r0
    2728:	b1 1d       	adc	r27, r1
    272a:	aa 1f       	adc	r26, r26
    272c:	64 9f       	mul	r22, r20
    272e:	66 27       	eor	r22, r22
    2730:	b0 0d       	add	r27, r0
    2732:	a1 1d       	adc	r26, r1
    2734:	66 1f       	adc	r22, r22
    2736:	82 9f       	mul	r24, r18
    2738:	22 27       	eor	r18, r18
    273a:	b0 0d       	add	r27, r0
    273c:	a1 1d       	adc	r26, r1
    273e:	62 1f       	adc	r22, r18
    2740:	73 9f       	mul	r23, r19
    2742:	b0 0d       	add	r27, r0
    2744:	a1 1d       	adc	r26, r1
    2746:	62 1f       	adc	r22, r18
    2748:	83 9f       	mul	r24, r19
    274a:	a0 0d       	add	r26, r0
    274c:	61 1d       	adc	r22, r1
    274e:	22 1f       	adc	r18, r18
    2750:	74 9f       	mul	r23, r20
    2752:	33 27       	eor	r19, r19
    2754:	a0 0d       	add	r26, r0
    2756:	61 1d       	adc	r22, r1
    2758:	23 1f       	adc	r18, r19
    275a:	84 9f       	mul	r24, r20
    275c:	60 0d       	add	r22, r0
    275e:	21 1d       	adc	r18, r1
    2760:	82 2f       	mov	r24, r18
    2762:	76 2f       	mov	r23, r22
    2764:	6a 2f       	mov	r22, r26
    2766:	11 24       	eor	r1, r1
    2768:	9f 57       	subi	r25, 0x7F	; 127
    276a:	50 40       	sbci	r21, 0x00	; 0
    276c:	8a f0       	brmi	.+34     	; 0x2790 <__mulsf3_pse+0x84>
    276e:	e1 f0       	breq	.+56     	; 0x27a8 <__mulsf3_pse+0x9c>
    2770:	88 23       	and	r24, r24
    2772:	4a f0       	brmi	.+18     	; 0x2786 <__mulsf3_pse+0x7a>
    2774:	ee 0f       	add	r30, r30
    2776:	ff 1f       	adc	r31, r31
    2778:	bb 1f       	adc	r27, r27
    277a:	66 1f       	adc	r22, r22
    277c:	77 1f       	adc	r23, r23
    277e:	88 1f       	adc	r24, r24
    2780:	91 50       	subi	r25, 0x01	; 1
    2782:	50 40       	sbci	r21, 0x00	; 0
    2784:	a9 f7       	brne	.-22     	; 0x2770 <__mulsf3_pse+0x64>
    2786:	9e 3f       	cpi	r25, 0xFE	; 254
    2788:	51 05       	cpc	r21, r1
    278a:	70 f0       	brcs	.+28     	; 0x27a8 <__mulsf3_pse+0x9c>
    278c:	5c cf       	rjmp	.-328    	; 0x2646 <__fp_inf>
    278e:	a6 cf       	rjmp	.-180    	; 0x26dc <__fp_szero>
    2790:	5f 3f       	cpi	r21, 0xFF	; 255
    2792:	ec f3       	brlt	.-6      	; 0x278e <__mulsf3_pse+0x82>
    2794:	98 3e       	cpi	r25, 0xE8	; 232
    2796:	dc f3       	brlt	.-10     	; 0x278e <__mulsf3_pse+0x82>
    2798:	86 95       	lsr	r24
    279a:	77 95       	ror	r23
    279c:	67 95       	ror	r22
    279e:	b7 95       	ror	r27
    27a0:	f7 95       	ror	r31
    27a2:	e7 95       	ror	r30
    27a4:	9f 5f       	subi	r25, 0xFF	; 255
    27a6:	c1 f7       	brne	.-16     	; 0x2798 <__mulsf3_pse+0x8c>
    27a8:	fe 2b       	or	r31, r30
    27aa:	88 0f       	add	r24, r24
    27ac:	91 1d       	adc	r25, r1
    27ae:	96 95       	lsr	r25
    27b0:	87 95       	ror	r24
    27b2:	97 f9       	bld	r25, 7
    27b4:	08 95       	ret

000027b6 <__mulsi3>:
    27b6:	db 01       	movw	r26, r22
    27b8:	8f 93       	push	r24
    27ba:	9f 93       	push	r25
    27bc:	0e 94 21 14 	call	0x2842	; 0x2842 <__muluhisi3>
    27c0:	bf 91       	pop	r27
    27c2:	af 91       	pop	r26
    27c4:	a2 9f       	mul	r26, r18
    27c6:	80 0d       	add	r24, r0
    27c8:	91 1d       	adc	r25, r1
    27ca:	a3 9f       	mul	r26, r19
    27cc:	90 0d       	add	r25, r0
    27ce:	b2 9f       	mul	r27, r18
    27d0:	90 0d       	add	r25, r0
    27d2:	11 24       	eor	r1, r1
    27d4:	08 95       	ret

000027d6 <__divmodhi4>:
    27d6:	97 fb       	bst	r25, 7
    27d8:	07 2e       	mov	r0, r23
    27da:	16 f4       	brtc	.+4      	; 0x27e0 <__divmodhi4+0xa>
    27dc:	00 94       	com	r0
    27de:	07 d0       	rcall	.+14     	; 0x27ee <__divmodhi4_neg1>
    27e0:	77 fd       	sbrc	r23, 7
    27e2:	09 d0       	rcall	.+18     	; 0x27f6 <__divmodhi4_neg2>
    27e4:	0e 94 63 14 	call	0x28c6	; 0x28c6 <__udivmodhi4>
    27e8:	07 fc       	sbrc	r0, 7
    27ea:	05 d0       	rcall	.+10     	; 0x27f6 <__divmodhi4_neg2>
    27ec:	3e f4       	brtc	.+14     	; 0x27fc <__divmodhi4_exit>

000027ee <__divmodhi4_neg1>:
    27ee:	90 95       	com	r25
    27f0:	81 95       	neg	r24
    27f2:	9f 4f       	sbci	r25, 0xFF	; 255
    27f4:	08 95       	ret

000027f6 <__divmodhi4_neg2>:
    27f6:	70 95       	com	r23
    27f8:	61 95       	neg	r22
    27fa:	7f 4f       	sbci	r23, 0xFF	; 255

000027fc <__divmodhi4_exit>:
    27fc:	08 95       	ret

000027fe <__udivmodsi4>:
    27fe:	a1 e2       	ldi	r26, 0x21	; 33
    2800:	1a 2e       	mov	r1, r26
    2802:	aa 1b       	sub	r26, r26
    2804:	bb 1b       	sub	r27, r27
    2806:	fd 01       	movw	r30, r26
    2808:	0d c0       	rjmp	.+26     	; 0x2824 <__udivmodsi4_ep>

0000280a <__udivmodsi4_loop>:
    280a:	aa 1f       	adc	r26, r26
    280c:	bb 1f       	adc	r27, r27
    280e:	ee 1f       	adc	r30, r30
    2810:	ff 1f       	adc	r31, r31
    2812:	a2 17       	cp	r26, r18
    2814:	b3 07       	cpc	r27, r19
    2816:	e4 07       	cpc	r30, r20
    2818:	f5 07       	cpc	r31, r21
    281a:	20 f0       	brcs	.+8      	; 0x2824 <__udivmodsi4_ep>
    281c:	a2 1b       	sub	r26, r18
    281e:	b3 0b       	sbc	r27, r19
    2820:	e4 0b       	sbc	r30, r20
    2822:	f5 0b       	sbc	r31, r21

00002824 <__udivmodsi4_ep>:
    2824:	66 1f       	adc	r22, r22
    2826:	77 1f       	adc	r23, r23
    2828:	88 1f       	adc	r24, r24
    282a:	99 1f       	adc	r25, r25
    282c:	1a 94       	dec	r1
    282e:	69 f7       	brne	.-38     	; 0x280a <__udivmodsi4_loop>
    2830:	60 95       	com	r22
    2832:	70 95       	com	r23
    2834:	80 95       	com	r24
    2836:	90 95       	com	r25
    2838:	9b 01       	movw	r18, r22
    283a:	ac 01       	movw	r20, r24
    283c:	bd 01       	movw	r22, r26
    283e:	cf 01       	movw	r24, r30
    2840:	08 95       	ret

00002842 <__muluhisi3>:
    2842:	0e 94 77 14 	call	0x28ee	; 0x28ee <__umulhisi3>
    2846:	a5 9f       	mul	r26, r21
    2848:	90 0d       	add	r25, r0
    284a:	b4 9f       	mul	r27, r20
    284c:	90 0d       	add	r25, r0
    284e:	a4 9f       	mul	r26, r20
    2850:	80 0d       	add	r24, r0
    2852:	91 1d       	adc	r25, r1
    2854:	11 24       	eor	r1, r1
    2856:	08 95       	ret

00002858 <__prologue_saves__>:
    2858:	2f 92       	push	r2
    285a:	3f 92       	push	r3
    285c:	4f 92       	push	r4
    285e:	5f 92       	push	r5
    2860:	6f 92       	push	r6
    2862:	7f 92       	push	r7
    2864:	8f 92       	push	r8
    2866:	9f 92       	push	r9
    2868:	af 92       	push	r10
    286a:	bf 92       	push	r11
    286c:	cf 92       	push	r12
    286e:	df 92       	push	r13
    2870:	ef 92       	push	r14
    2872:	ff 92       	push	r15
    2874:	0f 93       	push	r16
    2876:	1f 93       	push	r17
    2878:	cf 93       	push	r28
    287a:	df 93       	push	r29
    287c:	cd b7       	in	r28, 0x3d	; 61
    287e:	de b7       	in	r29, 0x3e	; 62
    2880:	ca 1b       	sub	r28, r26
    2882:	db 0b       	sbc	r29, r27
    2884:	0f b6       	in	r0, 0x3f	; 63
    2886:	f8 94       	cli
    2888:	de bf       	out	0x3e, r29	; 62
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	cd bf       	out	0x3d, r28	; 61
    288e:	09 94       	ijmp

00002890 <__epilogue_restores__>:
    2890:	2a 88       	ldd	r2, Y+18	; 0x12
    2892:	39 88       	ldd	r3, Y+17	; 0x11
    2894:	48 88       	ldd	r4, Y+16	; 0x10
    2896:	5f 84       	ldd	r5, Y+15	; 0x0f
    2898:	6e 84       	ldd	r6, Y+14	; 0x0e
    289a:	7d 84       	ldd	r7, Y+13	; 0x0d
    289c:	8c 84       	ldd	r8, Y+12	; 0x0c
    289e:	9b 84       	ldd	r9, Y+11	; 0x0b
    28a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    28a2:	b9 84       	ldd	r11, Y+9	; 0x09
    28a4:	c8 84       	ldd	r12, Y+8	; 0x08
    28a6:	df 80       	ldd	r13, Y+7	; 0x07
    28a8:	ee 80       	ldd	r14, Y+6	; 0x06
    28aa:	fd 80       	ldd	r15, Y+5	; 0x05
    28ac:	0c 81       	ldd	r16, Y+4	; 0x04
    28ae:	1b 81       	ldd	r17, Y+3	; 0x03
    28b0:	aa 81       	ldd	r26, Y+2	; 0x02
    28b2:	b9 81       	ldd	r27, Y+1	; 0x01
    28b4:	ce 0f       	add	r28, r30
    28b6:	d1 1d       	adc	r29, r1
    28b8:	0f b6       	in	r0, 0x3f	; 63
    28ba:	f8 94       	cli
    28bc:	de bf       	out	0x3e, r29	; 62
    28be:	0f be       	out	0x3f, r0	; 63
    28c0:	cd bf       	out	0x3d, r28	; 61
    28c2:	ed 01       	movw	r28, r26
    28c4:	08 95       	ret

000028c6 <__udivmodhi4>:
    28c6:	aa 1b       	sub	r26, r26
    28c8:	bb 1b       	sub	r27, r27
    28ca:	51 e1       	ldi	r21, 0x11	; 17
    28cc:	07 c0       	rjmp	.+14     	; 0x28dc <__udivmodhi4_ep>

000028ce <__udivmodhi4_loop>:
    28ce:	aa 1f       	adc	r26, r26
    28d0:	bb 1f       	adc	r27, r27
    28d2:	a6 17       	cp	r26, r22
    28d4:	b7 07       	cpc	r27, r23
    28d6:	10 f0       	brcs	.+4      	; 0x28dc <__udivmodhi4_ep>
    28d8:	a6 1b       	sub	r26, r22
    28da:	b7 0b       	sbc	r27, r23

000028dc <__udivmodhi4_ep>:
    28dc:	88 1f       	adc	r24, r24
    28de:	99 1f       	adc	r25, r25
    28e0:	5a 95       	dec	r21
    28e2:	a9 f7       	brne	.-22     	; 0x28ce <__udivmodhi4_loop>
    28e4:	80 95       	com	r24
    28e6:	90 95       	com	r25
    28e8:	bc 01       	movw	r22, r24
    28ea:	cd 01       	movw	r24, r26
    28ec:	08 95       	ret

000028ee <__umulhisi3>:
    28ee:	a2 9f       	mul	r26, r18
    28f0:	b0 01       	movw	r22, r0
    28f2:	b3 9f       	mul	r27, r19
    28f4:	c0 01       	movw	r24, r0
    28f6:	a3 9f       	mul	r26, r19
    28f8:	70 0d       	add	r23, r0
    28fa:	81 1d       	adc	r24, r1
    28fc:	11 24       	eor	r1, r1
    28fe:	91 1d       	adc	r25, r1
    2900:	b2 9f       	mul	r27, r18
    2902:	70 0d       	add	r23, r0
    2904:	81 1d       	adc	r24, r1
    2906:	11 24       	eor	r1, r1
    2908:	91 1d       	adc	r25, r1
    290a:	08 95       	ret

0000290c <calloc>:
    290c:	0f 93       	push	r16
    290e:	1f 93       	push	r17
    2910:	cf 93       	push	r28
    2912:	df 93       	push	r29
    2914:	86 9f       	mul	r24, r22
    2916:	80 01       	movw	r16, r0
    2918:	87 9f       	mul	r24, r23
    291a:	10 0d       	add	r17, r0
    291c:	96 9f       	mul	r25, r22
    291e:	10 0d       	add	r17, r0
    2920:	11 24       	eor	r1, r1
    2922:	c8 01       	movw	r24, r16
    2924:	0e 94 a2 14 	call	0x2944	; 0x2944 <malloc>
    2928:	ec 01       	movw	r28, r24
    292a:	00 97       	sbiw	r24, 0x00	; 0
    292c:	29 f0       	breq	.+10     	; 0x2938 <calloc+0x2c>
    292e:	a8 01       	movw	r20, r16
    2930:	60 e0       	ldi	r22, 0x00	; 0
    2932:	70 e0       	ldi	r23, 0x00	; 0
    2934:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <memset>
    2938:	ce 01       	movw	r24, r28
    293a:	df 91       	pop	r29
    293c:	cf 91       	pop	r28
    293e:	1f 91       	pop	r17
    2940:	0f 91       	pop	r16
    2942:	08 95       	ret

00002944 <malloc>:
    2944:	cf 93       	push	r28
    2946:	df 93       	push	r29
    2948:	82 30       	cpi	r24, 0x02	; 2
    294a:	91 05       	cpc	r25, r1
    294c:	10 f4       	brcc	.+4      	; 0x2952 <malloc+0xe>
    294e:	82 e0       	ldi	r24, 0x02	; 2
    2950:	90 e0       	ldi	r25, 0x00	; 0
    2952:	e0 91 90 02 	lds	r30, 0x0290
    2956:	f0 91 91 02 	lds	r31, 0x0291
    295a:	20 e0       	ldi	r18, 0x00	; 0
    295c:	30 e0       	ldi	r19, 0x00	; 0
    295e:	a0 e0       	ldi	r26, 0x00	; 0
    2960:	b0 e0       	ldi	r27, 0x00	; 0
    2962:	30 97       	sbiw	r30, 0x00	; 0
    2964:	39 f1       	breq	.+78     	; 0x29b4 <malloc+0x70>
    2966:	40 81       	ld	r20, Z
    2968:	51 81       	ldd	r21, Z+1	; 0x01
    296a:	48 17       	cp	r20, r24
    296c:	59 07       	cpc	r21, r25
    296e:	b8 f0       	brcs	.+46     	; 0x299e <malloc+0x5a>
    2970:	48 17       	cp	r20, r24
    2972:	59 07       	cpc	r21, r25
    2974:	71 f4       	brne	.+28     	; 0x2992 <malloc+0x4e>
    2976:	82 81       	ldd	r24, Z+2	; 0x02
    2978:	93 81       	ldd	r25, Z+3	; 0x03
    297a:	10 97       	sbiw	r26, 0x00	; 0
    297c:	29 f0       	breq	.+10     	; 0x2988 <malloc+0x44>
    297e:	13 96       	adiw	r26, 0x03	; 3
    2980:	9c 93       	st	X, r25
    2982:	8e 93       	st	-X, r24
    2984:	12 97       	sbiw	r26, 0x02	; 2
    2986:	2c c0       	rjmp	.+88     	; 0x29e0 <malloc+0x9c>
    2988:	90 93 91 02 	sts	0x0291, r25
    298c:	80 93 90 02 	sts	0x0290, r24
    2990:	27 c0       	rjmp	.+78     	; 0x29e0 <malloc+0x9c>
    2992:	21 15       	cp	r18, r1
    2994:	31 05       	cpc	r19, r1
    2996:	31 f0       	breq	.+12     	; 0x29a4 <malloc+0x60>
    2998:	42 17       	cp	r20, r18
    299a:	53 07       	cpc	r21, r19
    299c:	18 f0       	brcs	.+6      	; 0x29a4 <malloc+0x60>
    299e:	a9 01       	movw	r20, r18
    29a0:	db 01       	movw	r26, r22
    29a2:	01 c0       	rjmp	.+2      	; 0x29a6 <malloc+0x62>
    29a4:	ef 01       	movw	r28, r30
    29a6:	9a 01       	movw	r18, r20
    29a8:	bd 01       	movw	r22, r26
    29aa:	df 01       	movw	r26, r30
    29ac:	02 80       	ldd	r0, Z+2	; 0x02
    29ae:	f3 81       	ldd	r31, Z+3	; 0x03
    29b0:	e0 2d       	mov	r30, r0
    29b2:	d7 cf       	rjmp	.-82     	; 0x2962 <malloc+0x1e>
    29b4:	21 15       	cp	r18, r1
    29b6:	31 05       	cpc	r19, r1
    29b8:	f9 f0       	breq	.+62     	; 0x29f8 <malloc+0xb4>
    29ba:	28 1b       	sub	r18, r24
    29bc:	39 0b       	sbc	r19, r25
    29be:	24 30       	cpi	r18, 0x04	; 4
    29c0:	31 05       	cpc	r19, r1
    29c2:	80 f4       	brcc	.+32     	; 0x29e4 <malloc+0xa0>
    29c4:	8a 81       	ldd	r24, Y+2	; 0x02
    29c6:	9b 81       	ldd	r25, Y+3	; 0x03
    29c8:	61 15       	cp	r22, r1
    29ca:	71 05       	cpc	r23, r1
    29cc:	21 f0       	breq	.+8      	; 0x29d6 <malloc+0x92>
    29ce:	fb 01       	movw	r30, r22
    29d0:	93 83       	std	Z+3, r25	; 0x03
    29d2:	82 83       	std	Z+2, r24	; 0x02
    29d4:	04 c0       	rjmp	.+8      	; 0x29de <malloc+0x9a>
    29d6:	90 93 91 02 	sts	0x0291, r25
    29da:	80 93 90 02 	sts	0x0290, r24
    29de:	fe 01       	movw	r30, r28
    29e0:	32 96       	adiw	r30, 0x02	; 2
    29e2:	44 c0       	rjmp	.+136    	; 0x2a6c <malloc+0x128>
    29e4:	fe 01       	movw	r30, r28
    29e6:	e2 0f       	add	r30, r18
    29e8:	f3 1f       	adc	r31, r19
    29ea:	81 93       	st	Z+, r24
    29ec:	91 93       	st	Z+, r25
    29ee:	22 50       	subi	r18, 0x02	; 2
    29f0:	31 09       	sbc	r19, r1
    29f2:	39 83       	std	Y+1, r19	; 0x01
    29f4:	28 83       	st	Y, r18
    29f6:	3a c0       	rjmp	.+116    	; 0x2a6c <malloc+0x128>
    29f8:	20 91 8e 02 	lds	r18, 0x028E
    29fc:	30 91 8f 02 	lds	r19, 0x028F
    2a00:	23 2b       	or	r18, r19
    2a02:	41 f4       	brne	.+16     	; 0x2a14 <malloc+0xd0>
    2a04:	20 91 22 01 	lds	r18, 0x0122
    2a08:	30 91 23 01 	lds	r19, 0x0123
    2a0c:	30 93 8f 02 	sts	0x028F, r19
    2a10:	20 93 8e 02 	sts	0x028E, r18
    2a14:	20 91 20 01 	lds	r18, 0x0120
    2a18:	30 91 21 01 	lds	r19, 0x0121
    2a1c:	21 15       	cp	r18, r1
    2a1e:	31 05       	cpc	r19, r1
    2a20:	41 f4       	brne	.+16     	; 0x2a32 <malloc+0xee>
    2a22:	2d b7       	in	r18, 0x3d	; 61
    2a24:	3e b7       	in	r19, 0x3e	; 62
    2a26:	40 91 24 01 	lds	r20, 0x0124
    2a2a:	50 91 25 01 	lds	r21, 0x0125
    2a2e:	24 1b       	sub	r18, r20
    2a30:	35 0b       	sbc	r19, r21
    2a32:	e0 91 8e 02 	lds	r30, 0x028E
    2a36:	f0 91 8f 02 	lds	r31, 0x028F
    2a3a:	e2 17       	cp	r30, r18
    2a3c:	f3 07       	cpc	r31, r19
    2a3e:	a0 f4       	brcc	.+40     	; 0x2a68 <malloc+0x124>
    2a40:	2e 1b       	sub	r18, r30
    2a42:	3f 0b       	sbc	r19, r31
    2a44:	28 17       	cp	r18, r24
    2a46:	39 07       	cpc	r19, r25
    2a48:	78 f0       	brcs	.+30     	; 0x2a68 <malloc+0x124>
    2a4a:	ac 01       	movw	r20, r24
    2a4c:	4e 5f       	subi	r20, 0xFE	; 254
    2a4e:	5f 4f       	sbci	r21, 0xFF	; 255
    2a50:	24 17       	cp	r18, r20
    2a52:	35 07       	cpc	r19, r21
    2a54:	48 f0       	brcs	.+18     	; 0x2a68 <malloc+0x124>
    2a56:	4e 0f       	add	r20, r30
    2a58:	5f 1f       	adc	r21, r31
    2a5a:	50 93 8f 02 	sts	0x028F, r21
    2a5e:	40 93 8e 02 	sts	0x028E, r20
    2a62:	81 93       	st	Z+, r24
    2a64:	91 93       	st	Z+, r25
    2a66:	02 c0       	rjmp	.+4      	; 0x2a6c <malloc+0x128>
    2a68:	e0 e0       	ldi	r30, 0x00	; 0
    2a6a:	f0 e0       	ldi	r31, 0x00	; 0
    2a6c:	cf 01       	movw	r24, r30
    2a6e:	df 91       	pop	r29
    2a70:	cf 91       	pop	r28
    2a72:	08 95       	ret

00002a74 <free>:
    2a74:	cf 93       	push	r28
    2a76:	df 93       	push	r29
    2a78:	00 97       	sbiw	r24, 0x00	; 0
    2a7a:	09 f4       	brne	.+2      	; 0x2a7e <free+0xa>
    2a7c:	87 c0       	rjmp	.+270    	; 0x2b8c <free+0x118>
    2a7e:	fc 01       	movw	r30, r24
    2a80:	32 97       	sbiw	r30, 0x02	; 2
    2a82:	13 82       	std	Z+3, r1	; 0x03
    2a84:	12 82       	std	Z+2, r1	; 0x02
    2a86:	c0 91 90 02 	lds	r28, 0x0290
    2a8a:	d0 91 91 02 	lds	r29, 0x0291
    2a8e:	20 97       	sbiw	r28, 0x00	; 0
    2a90:	81 f4       	brne	.+32     	; 0x2ab2 <free+0x3e>
    2a92:	20 81       	ld	r18, Z
    2a94:	31 81       	ldd	r19, Z+1	; 0x01
    2a96:	28 0f       	add	r18, r24
    2a98:	39 1f       	adc	r19, r25
    2a9a:	80 91 8e 02 	lds	r24, 0x028E
    2a9e:	90 91 8f 02 	lds	r25, 0x028F
    2aa2:	82 17       	cp	r24, r18
    2aa4:	93 07       	cpc	r25, r19
    2aa6:	79 f5       	brne	.+94     	; 0x2b06 <free+0x92>
    2aa8:	f0 93 8f 02 	sts	0x028F, r31
    2aac:	e0 93 8e 02 	sts	0x028E, r30
    2ab0:	6d c0       	rjmp	.+218    	; 0x2b8c <free+0x118>
    2ab2:	de 01       	movw	r26, r28
    2ab4:	20 e0       	ldi	r18, 0x00	; 0
    2ab6:	30 e0       	ldi	r19, 0x00	; 0
    2ab8:	ae 17       	cp	r26, r30
    2aba:	bf 07       	cpc	r27, r31
    2abc:	50 f4       	brcc	.+20     	; 0x2ad2 <free+0x5e>
    2abe:	12 96       	adiw	r26, 0x02	; 2
    2ac0:	4d 91       	ld	r20, X+
    2ac2:	5c 91       	ld	r21, X
    2ac4:	13 97       	sbiw	r26, 0x03	; 3
    2ac6:	9d 01       	movw	r18, r26
    2ac8:	41 15       	cp	r20, r1
    2aca:	51 05       	cpc	r21, r1
    2acc:	09 f1       	breq	.+66     	; 0x2b10 <free+0x9c>
    2ace:	da 01       	movw	r26, r20
    2ad0:	f3 cf       	rjmp	.-26     	; 0x2ab8 <free+0x44>
    2ad2:	b3 83       	std	Z+3, r27	; 0x03
    2ad4:	a2 83       	std	Z+2, r26	; 0x02
    2ad6:	40 81       	ld	r20, Z
    2ad8:	51 81       	ldd	r21, Z+1	; 0x01
    2ada:	84 0f       	add	r24, r20
    2adc:	95 1f       	adc	r25, r21
    2ade:	8a 17       	cp	r24, r26
    2ae0:	9b 07       	cpc	r25, r27
    2ae2:	71 f4       	brne	.+28     	; 0x2b00 <free+0x8c>
    2ae4:	8d 91       	ld	r24, X+
    2ae6:	9c 91       	ld	r25, X
    2ae8:	11 97       	sbiw	r26, 0x01	; 1
    2aea:	84 0f       	add	r24, r20
    2aec:	95 1f       	adc	r25, r21
    2aee:	02 96       	adiw	r24, 0x02	; 2
    2af0:	91 83       	std	Z+1, r25	; 0x01
    2af2:	80 83       	st	Z, r24
    2af4:	12 96       	adiw	r26, 0x02	; 2
    2af6:	8d 91       	ld	r24, X+
    2af8:	9c 91       	ld	r25, X
    2afa:	13 97       	sbiw	r26, 0x03	; 3
    2afc:	93 83       	std	Z+3, r25	; 0x03
    2afe:	82 83       	std	Z+2, r24	; 0x02
    2b00:	21 15       	cp	r18, r1
    2b02:	31 05       	cpc	r19, r1
    2b04:	29 f4       	brne	.+10     	; 0x2b10 <free+0x9c>
    2b06:	f0 93 91 02 	sts	0x0291, r31
    2b0a:	e0 93 90 02 	sts	0x0290, r30
    2b0e:	3e c0       	rjmp	.+124    	; 0x2b8c <free+0x118>
    2b10:	d9 01       	movw	r26, r18
    2b12:	13 96       	adiw	r26, 0x03	; 3
    2b14:	fc 93       	st	X, r31
    2b16:	ee 93       	st	-X, r30
    2b18:	12 97       	sbiw	r26, 0x02	; 2
    2b1a:	4d 91       	ld	r20, X+
    2b1c:	5d 91       	ld	r21, X+
    2b1e:	a4 0f       	add	r26, r20
    2b20:	b5 1f       	adc	r27, r21
    2b22:	ea 17       	cp	r30, r26
    2b24:	fb 07       	cpc	r31, r27
    2b26:	79 f4       	brne	.+30     	; 0x2b46 <free+0xd2>
    2b28:	80 81       	ld	r24, Z
    2b2a:	91 81       	ldd	r25, Z+1	; 0x01
    2b2c:	84 0f       	add	r24, r20
    2b2e:	95 1f       	adc	r25, r21
    2b30:	02 96       	adiw	r24, 0x02	; 2
    2b32:	d9 01       	movw	r26, r18
    2b34:	11 96       	adiw	r26, 0x01	; 1
    2b36:	9c 93       	st	X, r25
    2b38:	8e 93       	st	-X, r24
    2b3a:	82 81       	ldd	r24, Z+2	; 0x02
    2b3c:	93 81       	ldd	r25, Z+3	; 0x03
    2b3e:	13 96       	adiw	r26, 0x03	; 3
    2b40:	9c 93       	st	X, r25
    2b42:	8e 93       	st	-X, r24
    2b44:	12 97       	sbiw	r26, 0x02	; 2
    2b46:	e0 e0       	ldi	r30, 0x00	; 0
    2b48:	f0 e0       	ldi	r31, 0x00	; 0
    2b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b4c:	9b 81       	ldd	r25, Y+3	; 0x03
    2b4e:	00 97       	sbiw	r24, 0x00	; 0
    2b50:	19 f0       	breq	.+6      	; 0x2b58 <free+0xe4>
    2b52:	fe 01       	movw	r30, r28
    2b54:	ec 01       	movw	r28, r24
    2b56:	f9 cf       	rjmp	.-14     	; 0x2b4a <free+0xd6>
    2b58:	ce 01       	movw	r24, r28
    2b5a:	02 96       	adiw	r24, 0x02	; 2
    2b5c:	28 81       	ld	r18, Y
    2b5e:	39 81       	ldd	r19, Y+1	; 0x01
    2b60:	82 0f       	add	r24, r18
    2b62:	93 1f       	adc	r25, r19
    2b64:	20 91 8e 02 	lds	r18, 0x028E
    2b68:	30 91 8f 02 	lds	r19, 0x028F
    2b6c:	28 17       	cp	r18, r24
    2b6e:	39 07       	cpc	r19, r25
    2b70:	69 f4       	brne	.+26     	; 0x2b8c <free+0x118>
    2b72:	30 97       	sbiw	r30, 0x00	; 0
    2b74:	29 f4       	brne	.+10     	; 0x2b80 <free+0x10c>
    2b76:	10 92 91 02 	sts	0x0291, r1
    2b7a:	10 92 90 02 	sts	0x0290, r1
    2b7e:	02 c0       	rjmp	.+4      	; 0x2b84 <free+0x110>
    2b80:	13 82       	std	Z+3, r1	; 0x03
    2b82:	12 82       	std	Z+2, r1	; 0x02
    2b84:	d0 93 8f 02 	sts	0x028F, r29
    2b88:	c0 93 8e 02 	sts	0x028E, r28
    2b8c:	df 91       	pop	r29
    2b8e:	cf 91       	pop	r28
    2b90:	08 95       	ret

00002b92 <memset>:
    2b92:	dc 01       	movw	r26, r24
    2b94:	01 c0       	rjmp	.+2      	; 0x2b98 <memset+0x6>
    2b96:	6d 93       	st	X+, r22
    2b98:	41 50       	subi	r20, 0x01	; 1
    2b9a:	50 40       	sbci	r21, 0x00	; 0
    2b9c:	e0 f7       	brcc	.-8      	; 0x2b96 <memset+0x4>
    2b9e:	08 95       	ret

00002ba0 <fdevopen>:
    2ba0:	0f 93       	push	r16
    2ba2:	1f 93       	push	r17
    2ba4:	cf 93       	push	r28
    2ba6:	df 93       	push	r29
    2ba8:	ec 01       	movw	r28, r24
    2baa:	8b 01       	movw	r16, r22
    2bac:	00 97       	sbiw	r24, 0x00	; 0
    2bae:	31 f4       	brne	.+12     	; 0x2bbc <fdevopen+0x1c>
    2bb0:	61 15       	cp	r22, r1
    2bb2:	71 05       	cpc	r23, r1
    2bb4:	19 f4       	brne	.+6      	; 0x2bbc <fdevopen+0x1c>
    2bb6:	80 e0       	ldi	r24, 0x00	; 0
    2bb8:	90 e0       	ldi	r25, 0x00	; 0
    2bba:	38 c0       	rjmp	.+112    	; 0x2c2c <fdevopen+0x8c>
    2bbc:	6e e0       	ldi	r22, 0x0E	; 14
    2bbe:	70 e0       	ldi	r23, 0x00	; 0
    2bc0:	81 e0       	ldi	r24, 0x01	; 1
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	0e 94 86 14 	call	0x290c	; 0x290c <calloc>
    2bc8:	fc 01       	movw	r30, r24
    2bca:	00 97       	sbiw	r24, 0x00	; 0
    2bcc:	a1 f3       	breq	.-24     	; 0x2bb6 <fdevopen+0x16>
    2bce:	80 e8       	ldi	r24, 0x80	; 128
    2bd0:	83 83       	std	Z+3, r24	; 0x03
    2bd2:	01 15       	cp	r16, r1
    2bd4:	11 05       	cpc	r17, r1
    2bd6:	71 f0       	breq	.+28     	; 0x2bf4 <fdevopen+0x54>
    2bd8:	13 87       	std	Z+11, r17	; 0x0b
    2bda:	02 87       	std	Z+10, r16	; 0x0a
    2bdc:	81 e8       	ldi	r24, 0x81	; 129
    2bde:	83 83       	std	Z+3, r24	; 0x03
    2be0:	80 91 92 02 	lds	r24, 0x0292
    2be4:	90 91 93 02 	lds	r25, 0x0293
    2be8:	89 2b       	or	r24, r25
    2bea:	21 f4       	brne	.+8      	; 0x2bf4 <fdevopen+0x54>
    2bec:	f0 93 93 02 	sts	0x0293, r31
    2bf0:	e0 93 92 02 	sts	0x0292, r30
    2bf4:	20 97       	sbiw	r28, 0x00	; 0
    2bf6:	c9 f0       	breq	.+50     	; 0x2c2a <fdevopen+0x8a>
    2bf8:	d1 87       	std	Z+9, r29	; 0x09
    2bfa:	c0 87       	std	Z+8, r28	; 0x08
    2bfc:	83 81       	ldd	r24, Z+3	; 0x03
    2bfe:	82 60       	ori	r24, 0x02	; 2
    2c00:	83 83       	std	Z+3, r24	; 0x03
    2c02:	80 91 94 02 	lds	r24, 0x0294
    2c06:	90 91 95 02 	lds	r25, 0x0295
    2c0a:	89 2b       	or	r24, r25
    2c0c:	71 f4       	brne	.+28     	; 0x2c2a <fdevopen+0x8a>
    2c0e:	f0 93 95 02 	sts	0x0295, r31
    2c12:	e0 93 94 02 	sts	0x0294, r30
    2c16:	80 91 96 02 	lds	r24, 0x0296
    2c1a:	90 91 97 02 	lds	r25, 0x0297
    2c1e:	89 2b       	or	r24, r25
    2c20:	21 f4       	brne	.+8      	; 0x2c2a <fdevopen+0x8a>
    2c22:	f0 93 97 02 	sts	0x0297, r31
    2c26:	e0 93 96 02 	sts	0x0296, r30
    2c2a:	cf 01       	movw	r24, r30
    2c2c:	df 91       	pop	r29
    2c2e:	cf 91       	pop	r28
    2c30:	1f 91       	pop	r17
    2c32:	0f 91       	pop	r16
    2c34:	08 95       	ret

00002c36 <printf>:
    2c36:	cf 93       	push	r28
    2c38:	df 93       	push	r29
    2c3a:	cd b7       	in	r28, 0x3d	; 61
    2c3c:	de b7       	in	r29, 0x3e	; 62
    2c3e:	fe 01       	movw	r30, r28
    2c40:	35 96       	adiw	r30, 0x05	; 5
    2c42:	61 91       	ld	r22, Z+
    2c44:	71 91       	ld	r23, Z+
    2c46:	af 01       	movw	r20, r30
    2c48:	80 91 94 02 	lds	r24, 0x0294
    2c4c:	90 91 95 02 	lds	r25, 0x0295
    2c50:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <vfprintf>
    2c54:	df 91       	pop	r29
    2c56:	cf 91       	pop	r28
    2c58:	08 95       	ret

00002c5a <sprintf>:
    2c5a:	0f 93       	push	r16
    2c5c:	1f 93       	push	r17
    2c5e:	cf 93       	push	r28
    2c60:	df 93       	push	r29
    2c62:	cd b7       	in	r28, 0x3d	; 61
    2c64:	de b7       	in	r29, 0x3e	; 62
    2c66:	2e 97       	sbiw	r28, 0x0e	; 14
    2c68:	0f b6       	in	r0, 0x3f	; 63
    2c6a:	f8 94       	cli
    2c6c:	de bf       	out	0x3e, r29	; 62
    2c6e:	0f be       	out	0x3f, r0	; 63
    2c70:	cd bf       	out	0x3d, r28	; 61
    2c72:	0d 89       	ldd	r16, Y+21	; 0x15
    2c74:	1e 89       	ldd	r17, Y+22	; 0x16
    2c76:	86 e0       	ldi	r24, 0x06	; 6
    2c78:	8c 83       	std	Y+4, r24	; 0x04
    2c7a:	1a 83       	std	Y+2, r17	; 0x02
    2c7c:	09 83       	std	Y+1, r16	; 0x01
    2c7e:	8f ef       	ldi	r24, 0xFF	; 255
    2c80:	9f e7       	ldi	r25, 0x7F	; 127
    2c82:	9e 83       	std	Y+6, r25	; 0x06
    2c84:	8d 83       	std	Y+5, r24	; 0x05
    2c86:	ae 01       	movw	r20, r28
    2c88:	47 5e       	subi	r20, 0xE7	; 231
    2c8a:	5f 4f       	sbci	r21, 0xFF	; 255
    2c8c:	6f 89       	ldd	r22, Y+23	; 0x17
    2c8e:	78 8d       	ldd	r23, Y+24	; 0x18
    2c90:	ce 01       	movw	r24, r28
    2c92:	01 96       	adiw	r24, 0x01	; 1
    2c94:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <vfprintf>
    2c98:	ef 81       	ldd	r30, Y+7	; 0x07
    2c9a:	f8 85       	ldd	r31, Y+8	; 0x08
    2c9c:	e0 0f       	add	r30, r16
    2c9e:	f1 1f       	adc	r31, r17
    2ca0:	10 82       	st	Z, r1
    2ca2:	2e 96       	adiw	r28, 0x0e	; 14
    2ca4:	0f b6       	in	r0, 0x3f	; 63
    2ca6:	f8 94       	cli
    2ca8:	de bf       	out	0x3e, r29	; 62
    2caa:	0f be       	out	0x3f, r0	; 63
    2cac:	cd bf       	out	0x3d, r28	; 61
    2cae:	df 91       	pop	r29
    2cb0:	cf 91       	pop	r28
    2cb2:	1f 91       	pop	r17
    2cb4:	0f 91       	pop	r16
    2cb6:	08 95       	ret

00002cb8 <sscanf>:
    2cb8:	cf 93       	push	r28
    2cba:	df 93       	push	r29
    2cbc:	cd b7       	in	r28, 0x3d	; 61
    2cbe:	de b7       	in	r29, 0x3e	; 62
    2cc0:	2e 97       	sbiw	r28, 0x0e	; 14
    2cc2:	0f b6       	in	r0, 0x3f	; 63
    2cc4:	f8 94       	cli
    2cc6:	de bf       	out	0x3e, r29	; 62
    2cc8:	0f be       	out	0x3f, r0	; 63
    2cca:	cd bf       	out	0x3d, r28	; 61
    2ccc:	85 e0       	ldi	r24, 0x05	; 5
    2cce:	8c 83       	std	Y+4, r24	; 0x04
    2cd0:	8b 89       	ldd	r24, Y+19	; 0x13
    2cd2:	9c 89       	ldd	r25, Y+20	; 0x14
    2cd4:	9a 83       	std	Y+2, r25	; 0x02
    2cd6:	89 83       	std	Y+1, r24	; 0x01
    2cd8:	ae 01       	movw	r20, r28
    2cda:	49 5e       	subi	r20, 0xE9	; 233
    2cdc:	5f 4f       	sbci	r21, 0xFF	; 255
    2cde:	6d 89       	ldd	r22, Y+21	; 0x15
    2ce0:	7e 89       	ldd	r23, Y+22	; 0x16
    2ce2:	ce 01       	movw	r24, r28
    2ce4:	01 96       	adiw	r24, 0x01	; 1
    2ce6:	0e 94 16 1a 	call	0x342c	; 0x342c <vfscanf>
    2cea:	2e 96       	adiw	r28, 0x0e	; 14
    2cec:	0f b6       	in	r0, 0x3f	; 63
    2cee:	f8 94       	cli
    2cf0:	de bf       	out	0x3e, r29	; 62
    2cf2:	0f be       	out	0x3f, r0	; 63
    2cf4:	cd bf       	out	0x3d, r28	; 61
    2cf6:	df 91       	pop	r29
    2cf8:	cf 91       	pop	r28
    2cfa:	08 95       	ret

00002cfc <vfprintf>:
    2cfc:	2f 92       	push	r2
    2cfe:	3f 92       	push	r3
    2d00:	4f 92       	push	r4
    2d02:	5f 92       	push	r5
    2d04:	6f 92       	push	r6
    2d06:	7f 92       	push	r7
    2d08:	8f 92       	push	r8
    2d0a:	9f 92       	push	r9
    2d0c:	af 92       	push	r10
    2d0e:	bf 92       	push	r11
    2d10:	cf 92       	push	r12
    2d12:	df 92       	push	r13
    2d14:	ef 92       	push	r14
    2d16:	ff 92       	push	r15
    2d18:	0f 93       	push	r16
    2d1a:	1f 93       	push	r17
    2d1c:	cf 93       	push	r28
    2d1e:	df 93       	push	r29
    2d20:	cd b7       	in	r28, 0x3d	; 61
    2d22:	de b7       	in	r29, 0x3e	; 62
    2d24:	2c 97       	sbiw	r28, 0x0c	; 12
    2d26:	0f b6       	in	r0, 0x3f	; 63
    2d28:	f8 94       	cli
    2d2a:	de bf       	out	0x3e, r29	; 62
    2d2c:	0f be       	out	0x3f, r0	; 63
    2d2e:	cd bf       	out	0x3d, r28	; 61
    2d30:	7c 01       	movw	r14, r24
    2d32:	6b 01       	movw	r12, r22
    2d34:	8a 01       	movw	r16, r20
    2d36:	fc 01       	movw	r30, r24
    2d38:	17 82       	std	Z+7, r1	; 0x07
    2d3a:	16 82       	std	Z+6, r1	; 0x06
    2d3c:	83 81       	ldd	r24, Z+3	; 0x03
    2d3e:	81 ff       	sbrs	r24, 1
    2d40:	bd c1       	rjmp	.+890    	; 0x30bc <vfprintf+0x3c0>
    2d42:	ce 01       	movw	r24, r28
    2d44:	01 96       	adiw	r24, 0x01	; 1
    2d46:	4c 01       	movw	r8, r24
    2d48:	f7 01       	movw	r30, r14
    2d4a:	93 81       	ldd	r25, Z+3	; 0x03
    2d4c:	f6 01       	movw	r30, r12
    2d4e:	93 fd       	sbrc	r25, 3
    2d50:	85 91       	lpm	r24, Z+
    2d52:	93 ff       	sbrs	r25, 3
    2d54:	81 91       	ld	r24, Z+
    2d56:	6f 01       	movw	r12, r30
    2d58:	88 23       	and	r24, r24
    2d5a:	09 f4       	brne	.+2      	; 0x2d5e <vfprintf+0x62>
    2d5c:	ab c1       	rjmp	.+854    	; 0x30b4 <vfprintf+0x3b8>
    2d5e:	85 32       	cpi	r24, 0x25	; 37
    2d60:	39 f4       	brne	.+14     	; 0x2d70 <vfprintf+0x74>
    2d62:	93 fd       	sbrc	r25, 3
    2d64:	85 91       	lpm	r24, Z+
    2d66:	93 ff       	sbrs	r25, 3
    2d68:	81 91       	ld	r24, Z+
    2d6a:	6f 01       	movw	r12, r30
    2d6c:	85 32       	cpi	r24, 0x25	; 37
    2d6e:	29 f4       	brne	.+10     	; 0x2d7a <vfprintf+0x7e>
    2d70:	b7 01       	movw	r22, r14
    2d72:	90 e0       	ldi	r25, 0x00	; 0
    2d74:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    2d78:	e7 cf       	rjmp	.-50     	; 0x2d48 <vfprintf+0x4c>
    2d7a:	51 2c       	mov	r5, r1
    2d7c:	31 2c       	mov	r3, r1
    2d7e:	20 e0       	ldi	r18, 0x00	; 0
    2d80:	20 32       	cpi	r18, 0x20	; 32
    2d82:	a0 f4       	brcc	.+40     	; 0x2dac <vfprintf+0xb0>
    2d84:	8b 32       	cpi	r24, 0x2B	; 43
    2d86:	69 f0       	breq	.+26     	; 0x2da2 <vfprintf+0xa6>
    2d88:	30 f4       	brcc	.+12     	; 0x2d96 <vfprintf+0x9a>
    2d8a:	80 32       	cpi	r24, 0x20	; 32
    2d8c:	59 f0       	breq	.+22     	; 0x2da4 <vfprintf+0xa8>
    2d8e:	83 32       	cpi	r24, 0x23	; 35
    2d90:	69 f4       	brne	.+26     	; 0x2dac <vfprintf+0xb0>
    2d92:	20 61       	ori	r18, 0x10	; 16
    2d94:	2c c0       	rjmp	.+88     	; 0x2dee <vfprintf+0xf2>
    2d96:	8d 32       	cpi	r24, 0x2D	; 45
    2d98:	39 f0       	breq	.+14     	; 0x2da8 <vfprintf+0xac>
    2d9a:	80 33       	cpi	r24, 0x30	; 48
    2d9c:	39 f4       	brne	.+14     	; 0x2dac <vfprintf+0xb0>
    2d9e:	21 60       	ori	r18, 0x01	; 1
    2da0:	26 c0       	rjmp	.+76     	; 0x2dee <vfprintf+0xf2>
    2da2:	22 60       	ori	r18, 0x02	; 2
    2da4:	24 60       	ori	r18, 0x04	; 4
    2da6:	23 c0       	rjmp	.+70     	; 0x2dee <vfprintf+0xf2>
    2da8:	28 60       	ori	r18, 0x08	; 8
    2daa:	21 c0       	rjmp	.+66     	; 0x2dee <vfprintf+0xf2>
    2dac:	27 fd       	sbrc	r18, 7
    2dae:	27 c0       	rjmp	.+78     	; 0x2dfe <vfprintf+0x102>
    2db0:	30 ed       	ldi	r19, 0xD0	; 208
    2db2:	38 0f       	add	r19, r24
    2db4:	3a 30       	cpi	r19, 0x0A	; 10
    2db6:	78 f4       	brcc	.+30     	; 0x2dd6 <vfprintf+0xda>
    2db8:	26 ff       	sbrs	r18, 6
    2dba:	06 c0       	rjmp	.+12     	; 0x2dc8 <vfprintf+0xcc>
    2dbc:	fa e0       	ldi	r31, 0x0A	; 10
    2dbe:	5f 9e       	mul	r5, r31
    2dc0:	30 0d       	add	r19, r0
    2dc2:	11 24       	eor	r1, r1
    2dc4:	53 2e       	mov	r5, r19
    2dc6:	13 c0       	rjmp	.+38     	; 0x2dee <vfprintf+0xf2>
    2dc8:	8a e0       	ldi	r24, 0x0A	; 10
    2dca:	38 9e       	mul	r3, r24
    2dcc:	30 0d       	add	r19, r0
    2dce:	11 24       	eor	r1, r1
    2dd0:	33 2e       	mov	r3, r19
    2dd2:	20 62       	ori	r18, 0x20	; 32
    2dd4:	0c c0       	rjmp	.+24     	; 0x2dee <vfprintf+0xf2>
    2dd6:	8e 32       	cpi	r24, 0x2E	; 46
    2dd8:	21 f4       	brne	.+8      	; 0x2de2 <vfprintf+0xe6>
    2dda:	26 fd       	sbrc	r18, 6
    2ddc:	6b c1       	rjmp	.+726    	; 0x30b4 <vfprintf+0x3b8>
    2dde:	20 64       	ori	r18, 0x40	; 64
    2de0:	06 c0       	rjmp	.+12     	; 0x2dee <vfprintf+0xf2>
    2de2:	8c 36       	cpi	r24, 0x6C	; 108
    2de4:	11 f4       	brne	.+4      	; 0x2dea <vfprintf+0xee>
    2de6:	20 68       	ori	r18, 0x80	; 128
    2de8:	02 c0       	rjmp	.+4      	; 0x2dee <vfprintf+0xf2>
    2dea:	88 36       	cpi	r24, 0x68	; 104
    2dec:	41 f4       	brne	.+16     	; 0x2dfe <vfprintf+0x102>
    2dee:	f6 01       	movw	r30, r12
    2df0:	93 fd       	sbrc	r25, 3
    2df2:	85 91       	lpm	r24, Z+
    2df4:	93 ff       	sbrs	r25, 3
    2df6:	81 91       	ld	r24, Z+
    2df8:	6f 01       	movw	r12, r30
    2dfa:	81 11       	cpse	r24, r1
    2dfc:	c1 cf       	rjmp	.-126    	; 0x2d80 <vfprintf+0x84>
    2dfe:	98 2f       	mov	r25, r24
    2e00:	9f 7d       	andi	r25, 0xDF	; 223
    2e02:	95 54       	subi	r25, 0x45	; 69
    2e04:	93 30       	cpi	r25, 0x03	; 3
    2e06:	28 f4       	brcc	.+10     	; 0x2e12 <vfprintf+0x116>
    2e08:	0c 5f       	subi	r16, 0xFC	; 252
    2e0a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e0c:	ff e3       	ldi	r31, 0x3F	; 63
    2e0e:	f9 83       	std	Y+1, r31	; 0x01
    2e10:	0d c0       	rjmp	.+26     	; 0x2e2c <vfprintf+0x130>
    2e12:	83 36       	cpi	r24, 0x63	; 99
    2e14:	31 f0       	breq	.+12     	; 0x2e22 <vfprintf+0x126>
    2e16:	83 37       	cpi	r24, 0x73	; 115
    2e18:	71 f0       	breq	.+28     	; 0x2e36 <vfprintf+0x13a>
    2e1a:	83 35       	cpi	r24, 0x53	; 83
    2e1c:	09 f0       	breq	.+2      	; 0x2e20 <vfprintf+0x124>
    2e1e:	5b c0       	rjmp	.+182    	; 0x2ed6 <vfprintf+0x1da>
    2e20:	22 c0       	rjmp	.+68     	; 0x2e66 <vfprintf+0x16a>
    2e22:	f8 01       	movw	r30, r16
    2e24:	80 81       	ld	r24, Z
    2e26:	89 83       	std	Y+1, r24	; 0x01
    2e28:	0e 5f       	subi	r16, 0xFE	; 254
    2e2a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e2c:	44 24       	eor	r4, r4
    2e2e:	43 94       	inc	r4
    2e30:	51 2c       	mov	r5, r1
    2e32:	54 01       	movw	r10, r8
    2e34:	15 c0       	rjmp	.+42     	; 0x2e60 <vfprintf+0x164>
    2e36:	38 01       	movw	r6, r16
    2e38:	f2 e0       	ldi	r31, 0x02	; 2
    2e3a:	6f 0e       	add	r6, r31
    2e3c:	71 1c       	adc	r7, r1
    2e3e:	f8 01       	movw	r30, r16
    2e40:	a0 80       	ld	r10, Z
    2e42:	b1 80       	ldd	r11, Z+1	; 0x01
    2e44:	26 ff       	sbrs	r18, 6
    2e46:	03 c0       	rjmp	.+6      	; 0x2e4e <vfprintf+0x152>
    2e48:	65 2d       	mov	r22, r5
    2e4a:	70 e0       	ldi	r23, 0x00	; 0
    2e4c:	02 c0       	rjmp	.+4      	; 0x2e52 <vfprintf+0x156>
    2e4e:	6f ef       	ldi	r22, 0xFF	; 255
    2e50:	7f ef       	ldi	r23, 0xFF	; 255
    2e52:	c5 01       	movw	r24, r10
    2e54:	2c 87       	std	Y+12, r18	; 0x0c
    2e56:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <strnlen>
    2e5a:	2c 01       	movw	r4, r24
    2e5c:	83 01       	movw	r16, r6
    2e5e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e60:	2f 77       	andi	r18, 0x7F	; 127
    2e62:	22 2e       	mov	r2, r18
    2e64:	17 c0       	rjmp	.+46     	; 0x2e94 <vfprintf+0x198>
    2e66:	38 01       	movw	r6, r16
    2e68:	f2 e0       	ldi	r31, 0x02	; 2
    2e6a:	6f 0e       	add	r6, r31
    2e6c:	71 1c       	adc	r7, r1
    2e6e:	f8 01       	movw	r30, r16
    2e70:	a0 80       	ld	r10, Z
    2e72:	b1 80       	ldd	r11, Z+1	; 0x01
    2e74:	26 ff       	sbrs	r18, 6
    2e76:	03 c0       	rjmp	.+6      	; 0x2e7e <vfprintf+0x182>
    2e78:	65 2d       	mov	r22, r5
    2e7a:	70 e0       	ldi	r23, 0x00	; 0
    2e7c:	02 c0       	rjmp	.+4      	; 0x2e82 <vfprintf+0x186>
    2e7e:	6f ef       	ldi	r22, 0xFF	; 255
    2e80:	7f ef       	ldi	r23, 0xFF	; 255
    2e82:	c5 01       	movw	r24, r10
    2e84:	2c 87       	std	Y+12, r18	; 0x0c
    2e86:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <strnlen_P>
    2e8a:	2c 01       	movw	r4, r24
    2e8c:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e8e:	20 68       	ori	r18, 0x80	; 128
    2e90:	22 2e       	mov	r2, r18
    2e92:	83 01       	movw	r16, r6
    2e94:	23 fc       	sbrc	r2, 3
    2e96:	1b c0       	rjmp	.+54     	; 0x2ece <vfprintf+0x1d2>
    2e98:	83 2d       	mov	r24, r3
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
    2e9c:	48 16       	cp	r4, r24
    2e9e:	59 06       	cpc	r5, r25
    2ea0:	b0 f4       	brcc	.+44     	; 0x2ece <vfprintf+0x1d2>
    2ea2:	b7 01       	movw	r22, r14
    2ea4:	80 e2       	ldi	r24, 0x20	; 32
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    2eac:	3a 94       	dec	r3
    2eae:	f4 cf       	rjmp	.-24     	; 0x2e98 <vfprintf+0x19c>
    2eb0:	f5 01       	movw	r30, r10
    2eb2:	27 fc       	sbrc	r2, 7
    2eb4:	85 91       	lpm	r24, Z+
    2eb6:	27 fe       	sbrs	r2, 7
    2eb8:	81 91       	ld	r24, Z+
    2eba:	5f 01       	movw	r10, r30
    2ebc:	b7 01       	movw	r22, r14
    2ebe:	90 e0       	ldi	r25, 0x00	; 0
    2ec0:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    2ec4:	31 10       	cpse	r3, r1
    2ec6:	3a 94       	dec	r3
    2ec8:	f1 e0       	ldi	r31, 0x01	; 1
    2eca:	4f 1a       	sub	r4, r31
    2ecc:	51 08       	sbc	r5, r1
    2ece:	41 14       	cp	r4, r1
    2ed0:	51 04       	cpc	r5, r1
    2ed2:	71 f7       	brne	.-36     	; 0x2eb0 <vfprintf+0x1b4>
    2ed4:	e5 c0       	rjmp	.+458    	; 0x30a0 <vfprintf+0x3a4>
    2ed6:	84 36       	cpi	r24, 0x64	; 100
    2ed8:	11 f0       	breq	.+4      	; 0x2ede <vfprintf+0x1e2>
    2eda:	89 36       	cpi	r24, 0x69	; 105
    2edc:	39 f5       	brne	.+78     	; 0x2f2c <vfprintf+0x230>
    2ede:	f8 01       	movw	r30, r16
    2ee0:	27 ff       	sbrs	r18, 7
    2ee2:	07 c0       	rjmp	.+14     	; 0x2ef2 <vfprintf+0x1f6>
    2ee4:	60 81       	ld	r22, Z
    2ee6:	71 81       	ldd	r23, Z+1	; 0x01
    2ee8:	82 81       	ldd	r24, Z+2	; 0x02
    2eea:	93 81       	ldd	r25, Z+3	; 0x03
    2eec:	0c 5f       	subi	r16, 0xFC	; 252
    2eee:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef0:	08 c0       	rjmp	.+16     	; 0x2f02 <vfprintf+0x206>
    2ef2:	60 81       	ld	r22, Z
    2ef4:	71 81       	ldd	r23, Z+1	; 0x01
    2ef6:	88 27       	eor	r24, r24
    2ef8:	77 fd       	sbrc	r23, 7
    2efa:	80 95       	com	r24
    2efc:	98 2f       	mov	r25, r24
    2efe:	0e 5f       	subi	r16, 0xFE	; 254
    2f00:	1f 4f       	sbci	r17, 0xFF	; 255
    2f02:	2f 76       	andi	r18, 0x6F	; 111
    2f04:	b2 2e       	mov	r11, r18
    2f06:	97 ff       	sbrs	r25, 7
    2f08:	09 c0       	rjmp	.+18     	; 0x2f1c <vfprintf+0x220>
    2f0a:	90 95       	com	r25
    2f0c:	80 95       	com	r24
    2f0e:	70 95       	com	r23
    2f10:	61 95       	neg	r22
    2f12:	7f 4f       	sbci	r23, 0xFF	; 255
    2f14:	8f 4f       	sbci	r24, 0xFF	; 255
    2f16:	9f 4f       	sbci	r25, 0xFF	; 255
    2f18:	20 68       	ori	r18, 0x80	; 128
    2f1a:	b2 2e       	mov	r11, r18
    2f1c:	2a e0       	ldi	r18, 0x0A	; 10
    2f1e:	30 e0       	ldi	r19, 0x00	; 0
    2f20:	a4 01       	movw	r20, r8
    2f22:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <__ultoa_invert>
    2f26:	a8 2e       	mov	r10, r24
    2f28:	a8 18       	sub	r10, r8
    2f2a:	44 c0       	rjmp	.+136    	; 0x2fb4 <vfprintf+0x2b8>
    2f2c:	85 37       	cpi	r24, 0x75	; 117
    2f2e:	29 f4       	brne	.+10     	; 0x2f3a <vfprintf+0x23e>
    2f30:	2f 7e       	andi	r18, 0xEF	; 239
    2f32:	b2 2e       	mov	r11, r18
    2f34:	2a e0       	ldi	r18, 0x0A	; 10
    2f36:	30 e0       	ldi	r19, 0x00	; 0
    2f38:	25 c0       	rjmp	.+74     	; 0x2f84 <vfprintf+0x288>
    2f3a:	f2 2f       	mov	r31, r18
    2f3c:	f9 7f       	andi	r31, 0xF9	; 249
    2f3e:	bf 2e       	mov	r11, r31
    2f40:	8f 36       	cpi	r24, 0x6F	; 111
    2f42:	c1 f0       	breq	.+48     	; 0x2f74 <vfprintf+0x278>
    2f44:	18 f4       	brcc	.+6      	; 0x2f4c <vfprintf+0x250>
    2f46:	88 35       	cpi	r24, 0x58	; 88
    2f48:	79 f0       	breq	.+30     	; 0x2f68 <vfprintf+0x26c>
    2f4a:	b4 c0       	rjmp	.+360    	; 0x30b4 <vfprintf+0x3b8>
    2f4c:	80 37       	cpi	r24, 0x70	; 112
    2f4e:	19 f0       	breq	.+6      	; 0x2f56 <vfprintf+0x25a>
    2f50:	88 37       	cpi	r24, 0x78	; 120
    2f52:	21 f0       	breq	.+8      	; 0x2f5c <vfprintf+0x260>
    2f54:	af c0       	rjmp	.+350    	; 0x30b4 <vfprintf+0x3b8>
    2f56:	2f 2f       	mov	r18, r31
    2f58:	20 61       	ori	r18, 0x10	; 16
    2f5a:	b2 2e       	mov	r11, r18
    2f5c:	b4 fe       	sbrs	r11, 4
    2f5e:	0d c0       	rjmp	.+26     	; 0x2f7a <vfprintf+0x27e>
    2f60:	8b 2d       	mov	r24, r11
    2f62:	84 60       	ori	r24, 0x04	; 4
    2f64:	b8 2e       	mov	r11, r24
    2f66:	09 c0       	rjmp	.+18     	; 0x2f7a <vfprintf+0x27e>
    2f68:	24 ff       	sbrs	r18, 4
    2f6a:	0a c0       	rjmp	.+20     	; 0x2f80 <vfprintf+0x284>
    2f6c:	9f 2f       	mov	r25, r31
    2f6e:	96 60       	ori	r25, 0x06	; 6
    2f70:	b9 2e       	mov	r11, r25
    2f72:	06 c0       	rjmp	.+12     	; 0x2f80 <vfprintf+0x284>
    2f74:	28 e0       	ldi	r18, 0x08	; 8
    2f76:	30 e0       	ldi	r19, 0x00	; 0
    2f78:	05 c0       	rjmp	.+10     	; 0x2f84 <vfprintf+0x288>
    2f7a:	20 e1       	ldi	r18, 0x10	; 16
    2f7c:	30 e0       	ldi	r19, 0x00	; 0
    2f7e:	02 c0       	rjmp	.+4      	; 0x2f84 <vfprintf+0x288>
    2f80:	20 e1       	ldi	r18, 0x10	; 16
    2f82:	32 e0       	ldi	r19, 0x02	; 2
    2f84:	f8 01       	movw	r30, r16
    2f86:	b7 fe       	sbrs	r11, 7
    2f88:	07 c0       	rjmp	.+14     	; 0x2f98 <vfprintf+0x29c>
    2f8a:	60 81       	ld	r22, Z
    2f8c:	71 81       	ldd	r23, Z+1	; 0x01
    2f8e:	82 81       	ldd	r24, Z+2	; 0x02
    2f90:	93 81       	ldd	r25, Z+3	; 0x03
    2f92:	0c 5f       	subi	r16, 0xFC	; 252
    2f94:	1f 4f       	sbci	r17, 0xFF	; 255
    2f96:	06 c0       	rjmp	.+12     	; 0x2fa4 <vfprintf+0x2a8>
    2f98:	60 81       	ld	r22, Z
    2f9a:	71 81       	ldd	r23, Z+1	; 0x01
    2f9c:	80 e0       	ldi	r24, 0x00	; 0
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	0e 5f       	subi	r16, 0xFE	; 254
    2fa2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fa4:	a4 01       	movw	r20, r8
    2fa6:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <__ultoa_invert>
    2faa:	a8 2e       	mov	r10, r24
    2fac:	a8 18       	sub	r10, r8
    2fae:	fb 2d       	mov	r31, r11
    2fb0:	ff 77       	andi	r31, 0x7F	; 127
    2fb2:	bf 2e       	mov	r11, r31
    2fb4:	b6 fe       	sbrs	r11, 6
    2fb6:	0b c0       	rjmp	.+22     	; 0x2fce <vfprintf+0x2d2>
    2fb8:	2b 2d       	mov	r18, r11
    2fba:	2e 7f       	andi	r18, 0xFE	; 254
    2fbc:	a5 14       	cp	r10, r5
    2fbe:	50 f4       	brcc	.+20     	; 0x2fd4 <vfprintf+0x2d8>
    2fc0:	b4 fe       	sbrs	r11, 4
    2fc2:	0a c0       	rjmp	.+20     	; 0x2fd8 <vfprintf+0x2dc>
    2fc4:	b2 fc       	sbrc	r11, 2
    2fc6:	08 c0       	rjmp	.+16     	; 0x2fd8 <vfprintf+0x2dc>
    2fc8:	2b 2d       	mov	r18, r11
    2fca:	2e 7e       	andi	r18, 0xEE	; 238
    2fcc:	05 c0       	rjmp	.+10     	; 0x2fd8 <vfprintf+0x2dc>
    2fce:	7a 2c       	mov	r7, r10
    2fd0:	2b 2d       	mov	r18, r11
    2fd2:	03 c0       	rjmp	.+6      	; 0x2fda <vfprintf+0x2de>
    2fd4:	7a 2c       	mov	r7, r10
    2fd6:	01 c0       	rjmp	.+2      	; 0x2fda <vfprintf+0x2de>
    2fd8:	75 2c       	mov	r7, r5
    2fda:	24 ff       	sbrs	r18, 4
    2fdc:	0d c0       	rjmp	.+26     	; 0x2ff8 <vfprintf+0x2fc>
    2fde:	fe 01       	movw	r30, r28
    2fe0:	ea 0d       	add	r30, r10
    2fe2:	f1 1d       	adc	r31, r1
    2fe4:	80 81       	ld	r24, Z
    2fe6:	80 33       	cpi	r24, 0x30	; 48
    2fe8:	11 f4       	brne	.+4      	; 0x2fee <vfprintf+0x2f2>
    2fea:	29 7e       	andi	r18, 0xE9	; 233
    2fec:	09 c0       	rjmp	.+18     	; 0x3000 <vfprintf+0x304>
    2fee:	22 ff       	sbrs	r18, 2
    2ff0:	06 c0       	rjmp	.+12     	; 0x2ffe <vfprintf+0x302>
    2ff2:	73 94       	inc	r7
    2ff4:	73 94       	inc	r7
    2ff6:	04 c0       	rjmp	.+8      	; 0x3000 <vfprintf+0x304>
    2ff8:	82 2f       	mov	r24, r18
    2ffa:	86 78       	andi	r24, 0x86	; 134
    2ffc:	09 f0       	breq	.+2      	; 0x3000 <vfprintf+0x304>
    2ffe:	73 94       	inc	r7
    3000:	23 fd       	sbrc	r18, 3
    3002:	13 c0       	rjmp	.+38     	; 0x302a <vfprintf+0x32e>
    3004:	20 ff       	sbrs	r18, 0
    3006:	06 c0       	rjmp	.+12     	; 0x3014 <vfprintf+0x318>
    3008:	5a 2c       	mov	r5, r10
    300a:	73 14       	cp	r7, r3
    300c:	18 f4       	brcc	.+6      	; 0x3014 <vfprintf+0x318>
    300e:	53 0c       	add	r5, r3
    3010:	57 18       	sub	r5, r7
    3012:	73 2c       	mov	r7, r3
    3014:	73 14       	cp	r7, r3
    3016:	68 f4       	brcc	.+26     	; 0x3032 <vfprintf+0x336>
    3018:	b7 01       	movw	r22, r14
    301a:	80 e2       	ldi	r24, 0x20	; 32
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	2c 87       	std	Y+12, r18	; 0x0c
    3020:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    3024:	73 94       	inc	r7
    3026:	2c 85       	ldd	r18, Y+12	; 0x0c
    3028:	f5 cf       	rjmp	.-22     	; 0x3014 <vfprintf+0x318>
    302a:	73 14       	cp	r7, r3
    302c:	10 f4       	brcc	.+4      	; 0x3032 <vfprintf+0x336>
    302e:	37 18       	sub	r3, r7
    3030:	01 c0       	rjmp	.+2      	; 0x3034 <vfprintf+0x338>
    3032:	31 2c       	mov	r3, r1
    3034:	24 ff       	sbrs	r18, 4
    3036:	12 c0       	rjmp	.+36     	; 0x305c <vfprintf+0x360>
    3038:	b7 01       	movw	r22, r14
    303a:	80 e3       	ldi	r24, 0x30	; 48
    303c:	90 e0       	ldi	r25, 0x00	; 0
    303e:	2c 87       	std	Y+12, r18	; 0x0c
    3040:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    3044:	2c 85       	ldd	r18, Y+12	; 0x0c
    3046:	22 ff       	sbrs	r18, 2
    3048:	17 c0       	rjmp	.+46     	; 0x3078 <vfprintf+0x37c>
    304a:	21 ff       	sbrs	r18, 1
    304c:	03 c0       	rjmp	.+6      	; 0x3054 <vfprintf+0x358>
    304e:	88 e5       	ldi	r24, 0x58	; 88
    3050:	90 e0       	ldi	r25, 0x00	; 0
    3052:	02 c0       	rjmp	.+4      	; 0x3058 <vfprintf+0x35c>
    3054:	88 e7       	ldi	r24, 0x78	; 120
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	b7 01       	movw	r22, r14
    305a:	0c c0       	rjmp	.+24     	; 0x3074 <vfprintf+0x378>
    305c:	82 2f       	mov	r24, r18
    305e:	86 78       	andi	r24, 0x86	; 134
    3060:	59 f0       	breq	.+22     	; 0x3078 <vfprintf+0x37c>
    3062:	21 fd       	sbrc	r18, 1
    3064:	02 c0       	rjmp	.+4      	; 0x306a <vfprintf+0x36e>
    3066:	80 e2       	ldi	r24, 0x20	; 32
    3068:	01 c0       	rjmp	.+2      	; 0x306c <vfprintf+0x370>
    306a:	8b e2       	ldi	r24, 0x2B	; 43
    306c:	27 fd       	sbrc	r18, 7
    306e:	8d e2       	ldi	r24, 0x2D	; 45
    3070:	b7 01       	movw	r22, r14
    3072:	90 e0       	ldi	r25, 0x00	; 0
    3074:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    3078:	a5 14       	cp	r10, r5
    307a:	38 f4       	brcc	.+14     	; 0x308a <vfprintf+0x38e>
    307c:	b7 01       	movw	r22, r14
    307e:	80 e3       	ldi	r24, 0x30	; 48
    3080:	90 e0       	ldi	r25, 0x00	; 0
    3082:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    3086:	5a 94       	dec	r5
    3088:	f7 cf       	rjmp	.-18     	; 0x3078 <vfprintf+0x37c>
    308a:	aa 94       	dec	r10
    308c:	f4 01       	movw	r30, r8
    308e:	ea 0d       	add	r30, r10
    3090:	f1 1d       	adc	r31, r1
    3092:	80 81       	ld	r24, Z
    3094:	b7 01       	movw	r22, r14
    3096:	90 e0       	ldi	r25, 0x00	; 0
    3098:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    309c:	a1 10       	cpse	r10, r1
    309e:	f5 cf       	rjmp	.-22     	; 0x308a <vfprintf+0x38e>
    30a0:	33 20       	and	r3, r3
    30a2:	09 f4       	brne	.+2      	; 0x30a6 <vfprintf+0x3aa>
    30a4:	51 ce       	rjmp	.-862    	; 0x2d48 <vfprintf+0x4c>
    30a6:	b7 01       	movw	r22, r14
    30a8:	80 e2       	ldi	r24, 0x20	; 32
    30aa:	90 e0       	ldi	r25, 0x00	; 0
    30ac:	0e 94 b4 1b 	call	0x3768	; 0x3768 <fputc>
    30b0:	3a 94       	dec	r3
    30b2:	f6 cf       	rjmp	.-20     	; 0x30a0 <vfprintf+0x3a4>
    30b4:	f7 01       	movw	r30, r14
    30b6:	86 81       	ldd	r24, Z+6	; 0x06
    30b8:	97 81       	ldd	r25, Z+7	; 0x07
    30ba:	02 c0       	rjmp	.+4      	; 0x30c0 <vfprintf+0x3c4>
    30bc:	8f ef       	ldi	r24, 0xFF	; 255
    30be:	9f ef       	ldi	r25, 0xFF	; 255
    30c0:	2c 96       	adiw	r28, 0x0c	; 12
    30c2:	0f b6       	in	r0, 0x3f	; 63
    30c4:	f8 94       	cli
    30c6:	de bf       	out	0x3e, r29	; 62
    30c8:	0f be       	out	0x3f, r0	; 63
    30ca:	cd bf       	out	0x3d, r28	; 61
    30cc:	df 91       	pop	r29
    30ce:	cf 91       	pop	r28
    30d0:	1f 91       	pop	r17
    30d2:	0f 91       	pop	r16
    30d4:	ff 90       	pop	r15
    30d6:	ef 90       	pop	r14
    30d8:	df 90       	pop	r13
    30da:	cf 90       	pop	r12
    30dc:	bf 90       	pop	r11
    30de:	af 90       	pop	r10
    30e0:	9f 90       	pop	r9
    30e2:	8f 90       	pop	r8
    30e4:	7f 90       	pop	r7
    30e6:	6f 90       	pop	r6
    30e8:	5f 90       	pop	r5
    30ea:	4f 90       	pop	r4
    30ec:	3f 90       	pop	r3
    30ee:	2f 90       	pop	r2
    30f0:	08 95       	ret

000030f2 <putval>:
    30f2:	20 fd       	sbrc	r18, 0
    30f4:	09 c0       	rjmp	.+18     	; 0x3108 <putval+0x16>
    30f6:	fc 01       	movw	r30, r24
    30f8:	23 fd       	sbrc	r18, 3
    30fa:	05 c0       	rjmp	.+10     	; 0x3106 <putval+0x14>
    30fc:	22 ff       	sbrs	r18, 2
    30fe:	02 c0       	rjmp	.+4      	; 0x3104 <putval+0x12>
    3100:	73 83       	std	Z+3, r23	; 0x03
    3102:	62 83       	std	Z+2, r22	; 0x02
    3104:	51 83       	std	Z+1, r21	; 0x01
    3106:	40 83       	st	Z, r20
    3108:	08 95       	ret

0000310a <mulacc>:
    310a:	44 fd       	sbrc	r20, 4
    310c:	10 c0       	rjmp	.+32     	; 0x312e <mulacc+0x24>
    310e:	46 fd       	sbrc	r20, 6
    3110:	10 c0       	rjmp	.+32     	; 0x3132 <mulacc+0x28>
    3112:	db 01       	movw	r26, r22
    3114:	fc 01       	movw	r30, r24
    3116:	aa 0f       	add	r26, r26
    3118:	bb 1f       	adc	r27, r27
    311a:	ee 1f       	adc	r30, r30
    311c:	ff 1f       	adc	r31, r31
    311e:	10 94       	com	r1
    3120:	d1 f7       	brne	.-12     	; 0x3116 <mulacc+0xc>
    3122:	6a 0f       	add	r22, r26
    3124:	7b 1f       	adc	r23, r27
    3126:	8e 1f       	adc	r24, r30
    3128:	9f 1f       	adc	r25, r31
    312a:	31 e0       	ldi	r19, 0x01	; 1
    312c:	03 c0       	rjmp	.+6      	; 0x3134 <mulacc+0x2a>
    312e:	33 e0       	ldi	r19, 0x03	; 3
    3130:	01 c0       	rjmp	.+2      	; 0x3134 <mulacc+0x2a>
    3132:	34 e0       	ldi	r19, 0x04	; 4
    3134:	66 0f       	add	r22, r22
    3136:	77 1f       	adc	r23, r23
    3138:	88 1f       	adc	r24, r24
    313a:	99 1f       	adc	r25, r25
    313c:	31 50       	subi	r19, 0x01	; 1
    313e:	d1 f7       	brne	.-12     	; 0x3134 <mulacc+0x2a>
    3140:	62 0f       	add	r22, r18
    3142:	71 1d       	adc	r23, r1
    3144:	81 1d       	adc	r24, r1
    3146:	91 1d       	adc	r25, r1
    3148:	08 95       	ret

0000314a <skip_spaces>:
    314a:	0f 93       	push	r16
    314c:	1f 93       	push	r17
    314e:	cf 93       	push	r28
    3150:	df 93       	push	r29
    3152:	8c 01       	movw	r16, r24
    3154:	c8 01       	movw	r24, r16
    3156:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    315a:	ec 01       	movw	r28, r24
    315c:	97 fd       	sbrc	r25, 7
    315e:	08 c0       	rjmp	.+16     	; 0x3170 <skip_spaces+0x26>
    3160:	0e 94 4d 1b 	call	0x369a	; 0x369a <isspace>
    3164:	89 2b       	or	r24, r25
    3166:	b1 f7       	brne	.-20     	; 0x3154 <skip_spaces+0xa>
    3168:	b8 01       	movw	r22, r16
    316a:	ce 01       	movw	r24, r28
    316c:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <ungetc>
    3170:	ce 01       	movw	r24, r28
    3172:	df 91       	pop	r29
    3174:	cf 91       	pop	r28
    3176:	1f 91       	pop	r17
    3178:	0f 91       	pop	r16
    317a:	08 95       	ret

0000317c <conv_int>:
    317c:	8f 92       	push	r8
    317e:	9f 92       	push	r9
    3180:	af 92       	push	r10
    3182:	cf 92       	push	r12
    3184:	df 92       	push	r13
    3186:	ef 92       	push	r14
    3188:	ff 92       	push	r15
    318a:	0f 93       	push	r16
    318c:	1f 93       	push	r17
    318e:	cf 93       	push	r28
    3190:	df 93       	push	r29
    3192:	ec 01       	movw	r28, r24
    3194:	a6 2e       	mov	r10, r22
    3196:	4a 01       	movw	r8, r20
    3198:	02 2f       	mov	r16, r18
    319a:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    319e:	ac 01       	movw	r20, r24
    31a0:	55 27       	eor	r21, r21
    31a2:	4b 32       	cpi	r20, 0x2B	; 43
    31a4:	51 05       	cpc	r21, r1
    31a6:	21 f0       	breq	.+8      	; 0x31b0 <conv_int+0x34>
    31a8:	4d 32       	cpi	r20, 0x2D	; 45
    31aa:	51 05       	cpc	r21, r1
    31ac:	51 f4       	brne	.+20     	; 0x31c2 <conv_int+0x46>
    31ae:	00 68       	ori	r16, 0x80	; 128
    31b0:	aa 94       	dec	r10
    31b2:	11 f4       	brne	.+4      	; 0x31b8 <conv_int+0x3c>
    31b4:	80 e0       	ldi	r24, 0x00	; 0
    31b6:	67 c0       	rjmp	.+206    	; 0x3286 <conv_int+0x10a>
    31b8:	ce 01       	movw	r24, r28
    31ba:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    31be:	97 fd       	sbrc	r25, 7
    31c0:	f9 cf       	rjmp	.-14     	; 0x31b4 <conv_int+0x38>
    31c2:	10 2f       	mov	r17, r16
    31c4:	1d 7f       	andi	r17, 0xFD	; 253
    31c6:	30 2f       	mov	r19, r16
    31c8:	30 73       	andi	r19, 0x30	; 48
    31ca:	01 f5       	brne	.+64     	; 0x320c <conv_int+0x90>
    31cc:	80 33       	cpi	r24, 0x30	; 48
    31ce:	f1 f4       	brne	.+60     	; 0x320c <conv_int+0x90>
    31d0:	ff 24       	eor	r15, r15
    31d2:	fa 94       	dec	r15
    31d4:	fa 0c       	add	r15, r10
    31d6:	09 f4       	brne	.+2      	; 0x31da <conv_int+0x5e>
    31d8:	42 c0       	rjmp	.+132    	; 0x325e <conv_int+0xe2>
    31da:	ce 01       	movw	r24, r28
    31dc:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    31e0:	97 fd       	sbrc	r25, 7
    31e2:	3d c0       	rjmp	.+122    	; 0x325e <conv_int+0xe2>
    31e4:	38 2f       	mov	r19, r24
    31e6:	3f 7d       	andi	r19, 0xDF	; 223
    31e8:	38 35       	cpi	r19, 0x58	; 88
    31ea:	51 f4       	brne	.+20     	; 0x3200 <conv_int+0x84>
    31ec:	12 64       	ori	r17, 0x42	; 66
    31ee:	aa 94       	dec	r10
    31f0:	aa 94       	dec	r10
    31f2:	a9 f1       	breq	.+106    	; 0x325e <conv_int+0xe2>
    31f4:	ce 01       	movw	r24, r28
    31f6:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    31fa:	97 ff       	sbrs	r25, 7
    31fc:	07 c0       	rjmp	.+14     	; 0x320c <conv_int+0x90>
    31fe:	2f c0       	rjmp	.+94     	; 0x325e <conv_int+0xe2>
    3200:	06 ff       	sbrs	r16, 6
    3202:	02 c0       	rjmp	.+4      	; 0x3208 <conv_int+0x8c>
    3204:	12 60       	ori	r17, 0x02	; 2
    3206:	01 c0       	rjmp	.+2      	; 0x320a <conv_int+0x8e>
    3208:	12 61       	ori	r17, 0x12	; 18
    320a:	af 2c       	mov	r10, r15
    320c:	c1 2c       	mov	r12, r1
    320e:	d1 2c       	mov	r13, r1
    3210:	76 01       	movw	r14, r12
    3212:	20 ed       	ldi	r18, 0xD0	; 208
    3214:	28 0f       	add	r18, r24
    3216:	28 30       	cpi	r18, 0x08	; 8
    3218:	80 f0       	brcs	.+32     	; 0x323a <conv_int+0xbe>
    321a:	14 ff       	sbrs	r17, 4
    321c:	04 c0       	rjmp	.+8      	; 0x3226 <conv_int+0xaa>
    321e:	be 01       	movw	r22, r28
    3220:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <ungetc>
    3224:	19 c0       	rjmp	.+50     	; 0x3258 <conv_int+0xdc>
    3226:	2a 30       	cpi	r18, 0x0A	; 10
    3228:	40 f0       	brcs	.+16     	; 0x323a <conv_int+0xbe>
    322a:	16 ff       	sbrs	r17, 6
    322c:	f8 cf       	rjmp	.-16     	; 0x321e <conv_int+0xa2>
    322e:	2f 7d       	andi	r18, 0xDF	; 223
    3230:	3f ee       	ldi	r19, 0xEF	; 239
    3232:	32 0f       	add	r19, r18
    3234:	36 30       	cpi	r19, 0x06	; 6
    3236:	98 f7       	brcc	.-26     	; 0x321e <conv_int+0xa2>
    3238:	27 50       	subi	r18, 0x07	; 7
    323a:	41 2f       	mov	r20, r17
    323c:	c7 01       	movw	r24, r14
    323e:	b6 01       	movw	r22, r12
    3240:	0e 94 85 18 	call	0x310a	; 0x310a <mulacc>
    3244:	6b 01       	movw	r12, r22
    3246:	7c 01       	movw	r14, r24
    3248:	12 60       	ori	r17, 0x02	; 2
    324a:	aa 94       	dec	r10
    324c:	59 f0       	breq	.+22     	; 0x3264 <conv_int+0xe8>
    324e:	ce 01       	movw	r24, r28
    3250:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    3254:	97 ff       	sbrs	r25, 7
    3256:	dd cf       	rjmp	.-70     	; 0x3212 <conv_int+0x96>
    3258:	11 fd       	sbrc	r17, 1
    325a:	04 c0       	rjmp	.+8      	; 0x3264 <conv_int+0xe8>
    325c:	ab cf       	rjmp	.-170    	; 0x31b4 <conv_int+0x38>
    325e:	c1 2c       	mov	r12, r1
    3260:	d1 2c       	mov	r13, r1
    3262:	76 01       	movw	r14, r12
    3264:	17 ff       	sbrs	r17, 7
    3266:	08 c0       	rjmp	.+16     	; 0x3278 <conv_int+0xfc>
    3268:	f0 94       	com	r15
    326a:	e0 94       	com	r14
    326c:	d0 94       	com	r13
    326e:	c0 94       	com	r12
    3270:	c1 1c       	adc	r12, r1
    3272:	d1 1c       	adc	r13, r1
    3274:	e1 1c       	adc	r14, r1
    3276:	f1 1c       	adc	r15, r1
    3278:	21 2f       	mov	r18, r17
    327a:	b7 01       	movw	r22, r14
    327c:	a6 01       	movw	r20, r12
    327e:	c4 01       	movw	r24, r8
    3280:	0e 94 79 18 	call	0x30f2	; 0x30f2 <putval>
    3284:	81 e0       	ldi	r24, 0x01	; 1
    3286:	df 91       	pop	r29
    3288:	cf 91       	pop	r28
    328a:	1f 91       	pop	r17
    328c:	0f 91       	pop	r16
    328e:	ff 90       	pop	r15
    3290:	ef 90       	pop	r14
    3292:	df 90       	pop	r13
    3294:	cf 90       	pop	r12
    3296:	af 90       	pop	r10
    3298:	9f 90       	pop	r9
    329a:	8f 90       	pop	r8
    329c:	08 95       	ret

0000329e <conv_brk>:
    329e:	7f 92       	push	r7
    32a0:	8f 92       	push	r8
    32a2:	9f 92       	push	r9
    32a4:	af 92       	push	r10
    32a6:	bf 92       	push	r11
    32a8:	cf 92       	push	r12
    32aa:	df 92       	push	r13
    32ac:	ef 92       	push	r14
    32ae:	ff 92       	push	r15
    32b0:	0f 93       	push	r16
    32b2:	1f 93       	push	r17
    32b4:	cf 93       	push	r28
    32b6:	df 93       	push	r29
    32b8:	cd b7       	in	r28, 0x3d	; 61
    32ba:	de b7       	in	r29, 0x3e	; 62
    32bc:	a1 97       	sbiw	r28, 0x21	; 33
    32be:	0f b6       	in	r0, 0x3f	; 63
    32c0:	f8 94       	cli
    32c2:	de bf       	out	0x3e, r29	; 62
    32c4:	0f be       	out	0x3f, r0	; 63
    32c6:	cd bf       	out	0x3d, r28	; 61
    32c8:	5c 01       	movw	r10, r24
    32ca:	7a 01       	movw	r14, r20
    32cc:	8e 01       	movw	r16, r28
    32ce:	0f 5f       	subi	r16, 0xFF	; 255
    32d0:	1f 4f       	sbci	r17, 0xFF	; 255
    32d2:	68 01       	movw	r12, r16
    32d4:	80 e2       	ldi	r24, 0x20	; 32
    32d6:	d8 01       	movw	r26, r16
    32d8:	1d 92       	st	X+, r1
    32da:	8a 95       	dec	r24
    32dc:	e9 f7       	brne	.-6      	; 0x32d8 <conv_brk+0x3a>
    32de:	f5 01       	movw	r30, r10
    32e0:	73 80       	ldd	r7, Z+3	; 0x03
    32e2:	40 e0       	ldi	r20, 0x00	; 0
    32e4:	50 e0       	ldi	r21, 0x00	; 0
    32e6:	81 2c       	mov	r8, r1
    32e8:	b0 e0       	ldi	r27, 0x00	; 0
    32ea:	91 2c       	mov	r9, r1
    32ec:	81 e0       	ldi	r24, 0x01	; 1
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	f9 01       	movw	r30, r18
    32f2:	73 fc       	sbrc	r7, 3
    32f4:	a5 91       	lpm	r26, Z+
    32f6:	73 fe       	sbrs	r7, 3
    32f8:	a1 91       	ld	r26, Z+
    32fa:	8f 01       	movw	r16, r30
    32fc:	7a 2f       	mov	r23, r26
    32fe:	9f 01       	movw	r18, r30
    3300:	a1 11       	cpse	r26, r1
    3302:	03 c0       	rjmp	.+6      	; 0x330a <conv_brk+0x6c>
    3304:	80 e0       	ldi	r24, 0x00	; 0
    3306:	90 e0       	ldi	r25, 0x00	; 0
    3308:	7d c0       	rjmp	.+250    	; 0x3404 <conv_brk+0x166>
    330a:	ae 35       	cpi	r26, 0x5E	; 94
    330c:	19 f4       	brne	.+6      	; 0x3314 <conv_brk+0x76>
    330e:	41 15       	cp	r20, r1
    3310:	51 05       	cpc	r21, r1
    3312:	59 f1       	breq	.+86     	; 0x336a <conv_brk+0xcc>
    3314:	e9 2d       	mov	r30, r9
    3316:	f0 e0       	ldi	r31, 0x00	; 0
    3318:	e4 17       	cp	r30, r20
    331a:	f5 07       	cpc	r31, r21
    331c:	3c f4       	brge	.+14     	; 0x332c <conv_brk+0x8e>
    331e:	ad 35       	cpi	r26, 0x5D	; 93
    3320:	69 f1       	breq	.+90     	; 0x337c <conv_brk+0xde>
    3322:	ad 32       	cpi	r26, 0x2D	; 45
    3324:	19 f4       	brne	.+6      	; 0x332c <conv_brk+0x8e>
    3326:	bb 23       	and	r27, r27
    3328:	19 f1       	breq	.+70     	; 0x3370 <conv_brk+0xd2>
    332a:	03 c0       	rjmp	.+6      	; 0x3332 <conv_brk+0x94>
    332c:	b1 11       	cpse	r27, r1
    332e:	01 c0       	rjmp	.+2      	; 0x3332 <conv_brk+0x94>
    3330:	8a 2e       	mov	r8, r26
    3332:	e7 2f       	mov	r30, r23
    3334:	e6 95       	lsr	r30
    3336:	e6 95       	lsr	r30
    3338:	e6 95       	lsr	r30
    333a:	86 01       	movw	r16, r12
    333c:	0e 0f       	add	r16, r30
    333e:	11 1d       	adc	r17, r1
    3340:	f8 01       	movw	r30, r16
    3342:	a7 2f       	mov	r26, r23
    3344:	a7 70       	andi	r26, 0x07	; 7
    3346:	8c 01       	movw	r16, r24
    3348:	02 c0       	rjmp	.+4      	; 0x334e <conv_brk+0xb0>
    334a:	00 0f       	add	r16, r16
    334c:	11 1f       	adc	r17, r17
    334e:	aa 95       	dec	r26
    3350:	e2 f7       	brpl	.-8      	; 0x334a <conv_brk+0xac>
    3352:	d8 01       	movw	r26, r16
    3354:	b0 81       	ld	r27, Z
    3356:	ba 2b       	or	r27, r26
    3358:	b0 83       	st	Z, r27
    335a:	78 15       	cp	r23, r8
    335c:	59 f0       	breq	.+22     	; 0x3374 <conv_brk+0xd6>
    335e:	78 15       	cp	r23, r8
    3360:	10 f4       	brcc	.+4      	; 0x3366 <conv_brk+0xc8>
    3362:	7f 5f       	subi	r23, 0xFF	; 255
    3364:	e6 cf       	rjmp	.-52     	; 0x3332 <conv_brk+0x94>
    3366:	71 50       	subi	r23, 0x01	; 1
    3368:	e4 cf       	rjmp	.-56     	; 0x3332 <conv_brk+0x94>
    336a:	99 24       	eor	r9, r9
    336c:	93 94       	inc	r9
    336e:	03 c0       	rjmp	.+6      	; 0x3376 <conv_brk+0xd8>
    3370:	b1 e0       	ldi	r27, 0x01	; 1
    3372:	01 c0       	rjmp	.+2      	; 0x3376 <conv_brk+0xd8>
    3374:	b0 e0       	ldi	r27, 0x00	; 0
    3376:	4f 5f       	subi	r20, 0xFF	; 255
    3378:	5f 4f       	sbci	r21, 0xFF	; 255
    337a:	ba cf       	rjmp	.-140    	; 0x32f0 <conv_brk+0x52>
    337c:	bb 23       	and	r27, r27
    337e:	19 f0       	breq	.+6      	; 0x3386 <conv_brk+0xe8>
    3380:	8e 81       	ldd	r24, Y+6	; 0x06
    3382:	80 62       	ori	r24, 0x20	; 32
    3384:	8e 83       	std	Y+6, r24	; 0x06
    3386:	91 10       	cpse	r9, r1
    3388:	03 c0       	rjmp	.+6      	; 0x3390 <conv_brk+0xf2>
    338a:	99 24       	eor	r9, r9
    338c:	93 94       	inc	r9
    338e:	15 c0       	rjmp	.+42     	; 0x33ba <conv_brk+0x11c>
    3390:	f6 01       	movw	r30, r12
    3392:	ce 01       	movw	r24, r28
    3394:	81 96       	adiw	r24, 0x21	; 33
    3396:	20 81       	ld	r18, Z
    3398:	20 95       	com	r18
    339a:	21 93       	st	Z+, r18
    339c:	e8 17       	cp	r30, r24
    339e:	f9 07       	cpc	r31, r25
    33a0:	d1 f7       	brne	.-12     	; 0x3396 <conv_brk+0xf8>
    33a2:	f3 cf       	rjmp	.-26     	; 0x338a <conv_brk+0xec>
    33a4:	e1 14       	cp	r14, r1
    33a6:	f1 04       	cpc	r15, r1
    33a8:	29 f0       	breq	.+10     	; 0x33b4 <conv_brk+0x116>
    33aa:	d7 01       	movw	r26, r14
    33ac:	8c 93       	st	X, r24
    33ae:	f7 01       	movw	r30, r14
    33b0:	31 96       	adiw	r30, 0x01	; 1
    33b2:	7f 01       	movw	r14, r30
    33b4:	61 50       	subi	r22, 0x01	; 1
    33b6:	01 f1       	breq	.+64     	; 0x33f8 <conv_brk+0x15a>
    33b8:	91 2c       	mov	r9, r1
    33ba:	c5 01       	movw	r24, r10
    33bc:	69 a3       	std	Y+33, r22	; 0x21
    33be:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    33c2:	69 a1       	ldd	r22, Y+33	; 0x21
    33c4:	97 fd       	sbrc	r25, 7
    33c6:	16 c0       	rjmp	.+44     	; 0x33f4 <conv_brk+0x156>
    33c8:	28 2f       	mov	r18, r24
    33ca:	26 95       	lsr	r18
    33cc:	26 95       	lsr	r18
    33ce:	26 95       	lsr	r18
    33d0:	f6 01       	movw	r30, r12
    33d2:	e2 0f       	add	r30, r18
    33d4:	f1 1d       	adc	r31, r1
    33d6:	20 81       	ld	r18, Z
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	ac 01       	movw	r20, r24
    33dc:	47 70       	andi	r20, 0x07	; 7
    33de:	55 27       	eor	r21, r21
    33e0:	02 c0       	rjmp	.+4      	; 0x33e6 <conv_brk+0x148>
    33e2:	35 95       	asr	r19
    33e4:	27 95       	ror	r18
    33e6:	4a 95       	dec	r20
    33e8:	e2 f7       	brpl	.-8      	; 0x33e2 <conv_brk+0x144>
    33ea:	20 fd       	sbrc	r18, 0
    33ec:	db cf       	rjmp	.-74     	; 0x33a4 <conv_brk+0x106>
    33ee:	b5 01       	movw	r22, r10
    33f0:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <ungetc>
    33f4:	91 10       	cpse	r9, r1
    33f6:	86 cf       	rjmp	.-244    	; 0x3304 <conv_brk+0x66>
    33f8:	e1 14       	cp	r14, r1
    33fa:	f1 04       	cpc	r15, r1
    33fc:	11 f0       	breq	.+4      	; 0x3402 <conv_brk+0x164>
    33fe:	d7 01       	movw	r26, r14
    3400:	1c 92       	st	X, r1
    3402:	c8 01       	movw	r24, r16
    3404:	a1 96       	adiw	r28, 0x21	; 33
    3406:	0f b6       	in	r0, 0x3f	; 63
    3408:	f8 94       	cli
    340a:	de bf       	out	0x3e, r29	; 62
    340c:	0f be       	out	0x3f, r0	; 63
    340e:	cd bf       	out	0x3d, r28	; 61
    3410:	df 91       	pop	r29
    3412:	cf 91       	pop	r28
    3414:	1f 91       	pop	r17
    3416:	0f 91       	pop	r16
    3418:	ff 90       	pop	r15
    341a:	ef 90       	pop	r14
    341c:	df 90       	pop	r13
    341e:	cf 90       	pop	r12
    3420:	bf 90       	pop	r11
    3422:	af 90       	pop	r10
    3424:	9f 90       	pop	r9
    3426:	8f 90       	pop	r8
    3428:	7f 90       	pop	r7
    342a:	08 95       	ret

0000342c <vfscanf>:
    342c:	4f 92       	push	r4
    342e:	5f 92       	push	r5
    3430:	7f 92       	push	r7
    3432:	8f 92       	push	r8
    3434:	9f 92       	push	r9
    3436:	af 92       	push	r10
    3438:	bf 92       	push	r11
    343a:	cf 92       	push	r12
    343c:	df 92       	push	r13
    343e:	ef 92       	push	r14
    3440:	ff 92       	push	r15
    3442:	0f 93       	push	r16
    3444:	1f 93       	push	r17
    3446:	cf 93       	push	r28
    3448:	df 93       	push	r29
    344a:	1f 92       	push	r1
    344c:	cd b7       	in	r28, 0x3d	; 61
    344e:	de b7       	in	r29, 0x3e	; 62
    3450:	8c 01       	movw	r16, r24
    3452:	2b 01       	movw	r4, r22
    3454:	7a 01       	movw	r14, r20
    3456:	fc 01       	movw	r30, r24
    3458:	17 82       	std	Z+7, r1	; 0x07
    345a:	16 82       	std	Z+6, r1	; 0x06
    345c:	a1 2c       	mov	r10, r1
    345e:	f8 01       	movw	r30, r16
    3460:	d3 80       	ldd	r13, Z+3	; 0x03
    3462:	f2 01       	movw	r30, r4
    3464:	d3 fc       	sbrc	r13, 3
    3466:	85 91       	lpm	r24, Z+
    3468:	d3 fe       	sbrs	r13, 3
    346a:	81 91       	ld	r24, Z+
    346c:	38 2f       	mov	r19, r24
    346e:	2f 01       	movw	r4, r30
    3470:	88 23       	and	r24, r24
    3472:	09 f4       	brne	.+2      	; 0x3476 <vfscanf+0x4a>
    3474:	fc c0       	rjmp	.+504    	; 0x366e <vfscanf+0x242>
    3476:	90 e0       	ldi	r25, 0x00	; 0
    3478:	39 83       	std	Y+1, r19	; 0x01
    347a:	0e 94 4d 1b 	call	0x369a	; 0x369a <isspace>
    347e:	39 81       	ldd	r19, Y+1	; 0x01
    3480:	89 2b       	or	r24, r25
    3482:	21 f0       	breq	.+8      	; 0x348c <vfscanf+0x60>
    3484:	c8 01       	movw	r24, r16
    3486:	0e 94 a5 18 	call	0x314a	; 0x314a <skip_spaces>
    348a:	e9 cf       	rjmp	.-46     	; 0x345e <vfscanf+0x32>
    348c:	35 32       	cpi	r19, 0x25	; 37
    348e:	41 f4       	brne	.+16     	; 0x34a0 <vfscanf+0x74>
    3490:	f2 01       	movw	r30, r4
    3492:	d3 fc       	sbrc	r13, 3
    3494:	35 91       	lpm	r19, Z+
    3496:	d3 fe       	sbrs	r13, 3
    3498:	31 91       	ld	r19, Z+
    349a:	2f 01       	movw	r4, r30
    349c:	35 32       	cpi	r19, 0x25	; 37
    349e:	69 f4       	brne	.+26     	; 0x34ba <vfscanf+0x8e>
    34a0:	c8 01       	movw	r24, r16
    34a2:	39 83       	std	Y+1, r19	; 0x01
    34a4:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    34a8:	39 81       	ldd	r19, Y+1	; 0x01
    34aa:	97 fd       	sbrc	r25, 7
    34ac:	de c0       	rjmp	.+444    	; 0x366a <vfscanf+0x23e>
    34ae:	38 17       	cp	r19, r24
    34b0:	b1 f2       	breq	.-84     	; 0x345e <vfscanf+0x32>
    34b2:	b8 01       	movw	r22, r16
    34b4:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <ungetc>
    34b8:	da c0       	rjmp	.+436    	; 0x366e <vfscanf+0x242>
    34ba:	3a 32       	cpi	r19, 0x2A	; 42
    34bc:	41 f4       	brne	.+16     	; 0x34ce <vfscanf+0xa2>
    34be:	d3 fc       	sbrc	r13, 3
    34c0:	35 91       	lpm	r19, Z+
    34c2:	d3 fe       	sbrs	r13, 3
    34c4:	31 91       	ld	r19, Z+
    34c6:	2f 01       	movw	r4, r30
    34c8:	bb 24       	eor	r11, r11
    34ca:	b3 94       	inc	r11
    34cc:	01 c0       	rjmp	.+2      	; 0x34d0 <vfscanf+0xa4>
    34ce:	b1 2c       	mov	r11, r1
    34d0:	71 2c       	mov	r7, r1
    34d2:	20 ed       	ldi	r18, 0xD0	; 208
    34d4:	23 0f       	add	r18, r19
    34d6:	2a 30       	cpi	r18, 0x0A	; 10
    34d8:	90 f4       	brcc	.+36     	; 0x34fe <vfscanf+0xd2>
    34da:	fb 2d       	mov	r31, r11
    34dc:	f2 60       	ori	r31, 0x02	; 2
    34de:	bf 2e       	mov	r11, r31
    34e0:	67 2d       	mov	r22, r7
    34e2:	70 e0       	ldi	r23, 0x00	; 0
    34e4:	80 e0       	ldi	r24, 0x00	; 0
    34e6:	90 e0       	ldi	r25, 0x00	; 0
    34e8:	40 e2       	ldi	r20, 0x20	; 32
    34ea:	0e 94 85 18 	call	0x310a	; 0x310a <mulacc>
    34ee:	76 2e       	mov	r7, r22
    34f0:	f2 01       	movw	r30, r4
    34f2:	d3 fc       	sbrc	r13, 3
    34f4:	35 91       	lpm	r19, Z+
    34f6:	d3 fe       	sbrs	r13, 3
    34f8:	31 91       	ld	r19, Z+
    34fa:	2f 01       	movw	r4, r30
    34fc:	ea cf       	rjmp	.-44     	; 0x34d2 <vfscanf+0xa6>
    34fe:	b1 fe       	sbrs	r11, 1
    3500:	03 c0       	rjmp	.+6      	; 0x3508 <vfscanf+0xdc>
    3502:	71 10       	cpse	r7, r1
    3504:	03 c0       	rjmp	.+6      	; 0x350c <vfscanf+0xe0>
    3506:	b3 c0       	rjmp	.+358    	; 0x366e <vfscanf+0x242>
    3508:	77 24       	eor	r7, r7
    350a:	7a 94       	dec	r7
    350c:	38 36       	cpi	r19, 0x68	; 104
    350e:	19 f0       	breq	.+6      	; 0x3516 <vfscanf+0xea>
    3510:	3c 36       	cpi	r19, 0x6C	; 108
    3512:	61 f0       	breq	.+24     	; 0x352c <vfscanf+0x100>
    3514:	14 c0       	rjmp	.+40     	; 0x353e <vfscanf+0x112>
    3516:	f2 01       	movw	r30, r4
    3518:	d3 fc       	sbrc	r13, 3
    351a:	35 91       	lpm	r19, Z+
    351c:	d3 fe       	sbrs	r13, 3
    351e:	31 91       	ld	r19, Z+
    3520:	2f 01       	movw	r4, r30
    3522:	38 36       	cpi	r19, 0x68	; 104
    3524:	61 f4       	brne	.+24     	; 0x353e <vfscanf+0x112>
    3526:	fb 2d       	mov	r31, r11
    3528:	f8 60       	ori	r31, 0x08	; 8
    352a:	bf 2e       	mov	r11, r31
    352c:	8b 2d       	mov	r24, r11
    352e:	84 60       	ori	r24, 0x04	; 4
    3530:	b8 2e       	mov	r11, r24
    3532:	f2 01       	movw	r30, r4
    3534:	d3 fc       	sbrc	r13, 3
    3536:	35 91       	lpm	r19, Z+
    3538:	d3 fe       	sbrs	r13, 3
    353a:	31 91       	ld	r19, Z+
    353c:	2f 01       	movw	r4, r30
    353e:	33 23       	and	r19, r19
    3540:	09 f4       	brne	.+2      	; 0x3544 <vfscanf+0x118>
    3542:	95 c0       	rjmp	.+298    	; 0x366e <vfscanf+0x242>
    3544:	63 2f       	mov	r22, r19
    3546:	70 e0       	ldi	r23, 0x00	; 0
    3548:	8c e8       	ldi	r24, 0x8C	; 140
    354a:	90 e0       	ldi	r25, 0x00	; 0
    354c:	39 83       	std	Y+1, r19	; 0x01
    354e:	0e 94 55 1b 	call	0x36aa	; 0x36aa <strchr_P>
    3552:	39 81       	ldd	r19, Y+1	; 0x01
    3554:	89 2b       	or	r24, r25
    3556:	09 f4       	brne	.+2      	; 0x355a <vfscanf+0x12e>
    3558:	8a c0       	rjmp	.+276    	; 0x366e <vfscanf+0x242>
    355a:	b0 fc       	sbrc	r11, 0
    355c:	07 c0       	rjmp	.+14     	; 0x356c <vfscanf+0x140>
    355e:	f7 01       	movw	r30, r14
    3560:	c0 80       	ld	r12, Z
    3562:	d1 80       	ldd	r13, Z+1	; 0x01
    3564:	c7 01       	movw	r24, r14
    3566:	02 96       	adiw	r24, 0x02	; 2
    3568:	7c 01       	movw	r14, r24
    356a:	02 c0       	rjmp	.+4      	; 0x3570 <vfscanf+0x144>
    356c:	c1 2c       	mov	r12, r1
    356e:	d1 2c       	mov	r13, r1
    3570:	3e 36       	cpi	r19, 0x6E	; 110
    3572:	51 f4       	brne	.+20     	; 0x3588 <vfscanf+0x15c>
    3574:	f8 01       	movw	r30, r16
    3576:	46 81       	ldd	r20, Z+6	; 0x06
    3578:	57 81       	ldd	r21, Z+7	; 0x07
    357a:	60 e0       	ldi	r22, 0x00	; 0
    357c:	70 e0       	ldi	r23, 0x00	; 0
    357e:	2b 2d       	mov	r18, r11
    3580:	c6 01       	movw	r24, r12
    3582:	0e 94 79 18 	call	0x30f2	; 0x30f2 <putval>
    3586:	6b cf       	rjmp	.-298    	; 0x345e <vfscanf+0x32>
    3588:	33 36       	cpi	r19, 0x63	; 99
    358a:	a1 f4       	brne	.+40     	; 0x35b4 <vfscanf+0x188>
    358c:	b1 fc       	sbrc	r11, 1
    358e:	02 c0       	rjmp	.+4      	; 0x3594 <vfscanf+0x168>
    3590:	77 24       	eor	r7, r7
    3592:	73 94       	inc	r7
    3594:	c8 01       	movw	r24, r16
    3596:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    359a:	97 fd       	sbrc	r25, 7
    359c:	66 c0       	rjmp	.+204    	; 0x366a <vfscanf+0x23e>
    359e:	c1 14       	cp	r12, r1
    35a0:	d1 04       	cpc	r13, r1
    35a2:	29 f0       	breq	.+10     	; 0x35ae <vfscanf+0x182>
    35a4:	f6 01       	movw	r30, r12
    35a6:	80 83       	st	Z, r24
    35a8:	c6 01       	movw	r24, r12
    35aa:	01 96       	adiw	r24, 0x01	; 1
    35ac:	6c 01       	movw	r12, r24
    35ae:	7a 94       	dec	r7
    35b0:	89 f7       	brne	.-30     	; 0x3594 <vfscanf+0x168>
    35b2:	57 c0       	rjmp	.+174    	; 0x3662 <vfscanf+0x236>
    35b4:	3b 35       	cpi	r19, 0x5B	; 91
    35b6:	59 f4       	brne	.+22     	; 0x35ce <vfscanf+0x1a2>
    35b8:	92 01       	movw	r18, r4
    35ba:	a6 01       	movw	r20, r12
    35bc:	67 2d       	mov	r22, r7
    35be:	c8 01       	movw	r24, r16
    35c0:	0e 94 4f 19 	call	0x329e	; 0x329e <conv_brk>
    35c4:	2c 01       	movw	r4, r24
    35c6:	00 97       	sbiw	r24, 0x00	; 0
    35c8:	09 f0       	breq	.+2      	; 0x35cc <vfscanf+0x1a0>
    35ca:	4b c0       	rjmp	.+150    	; 0x3662 <vfscanf+0x236>
    35cc:	45 c0       	rjmp	.+138    	; 0x3658 <vfscanf+0x22c>
    35ce:	c8 01       	movw	r24, r16
    35d0:	39 83       	std	Y+1, r19	; 0x01
    35d2:	0e 94 a5 18 	call	0x314a	; 0x314a <skip_spaces>
    35d6:	39 81       	ldd	r19, Y+1	; 0x01
    35d8:	97 fd       	sbrc	r25, 7
    35da:	47 c0       	rjmp	.+142    	; 0x366a <vfscanf+0x23e>
    35dc:	3f 36       	cpi	r19, 0x6F	; 111
    35de:	69 f1       	breq	.+90     	; 0x363a <vfscanf+0x20e>
    35e0:	28 f4       	brcc	.+10     	; 0x35ec <vfscanf+0x1c0>
    35e2:	34 36       	cpi	r19, 0x64	; 100
    35e4:	31 f1       	breq	.+76     	; 0x3632 <vfscanf+0x206>
    35e6:	39 36       	cpi	r19, 0x69	; 105
    35e8:	79 f1       	breq	.+94     	; 0x3648 <vfscanf+0x21c>
    35ea:	2b c0       	rjmp	.+86     	; 0x3642 <vfscanf+0x216>
    35ec:	33 37       	cpi	r19, 0x73	; 115
    35ee:	69 f0       	breq	.+26     	; 0x360a <vfscanf+0x1de>
    35f0:	35 37       	cpi	r19, 0x75	; 117
    35f2:	f9 f0       	breq	.+62     	; 0x3632 <vfscanf+0x206>
    35f4:	26 c0       	rjmp	.+76     	; 0x3642 <vfscanf+0x216>
    35f6:	c1 14       	cp	r12, r1
    35f8:	d1 04       	cpc	r13, r1
    35fa:	29 f0       	breq	.+10     	; 0x3606 <vfscanf+0x1da>
    35fc:	f6 01       	movw	r30, r12
    35fe:	80 82       	st	Z, r8
    3600:	c6 01       	movw	r24, r12
    3602:	01 96       	adiw	r24, 0x01	; 1
    3604:	6c 01       	movw	r12, r24
    3606:	7a 94       	dec	r7
    3608:	71 f0       	breq	.+28     	; 0x3626 <vfscanf+0x1fa>
    360a:	c8 01       	movw	r24, r16
    360c:	0e 94 76 1b 	call	0x36ec	; 0x36ec <fgetc>
    3610:	4c 01       	movw	r8, r24
    3612:	97 fd       	sbrc	r25, 7
    3614:	08 c0       	rjmp	.+16     	; 0x3626 <vfscanf+0x1fa>
    3616:	0e 94 4d 1b 	call	0x369a	; 0x369a <isspace>
    361a:	89 2b       	or	r24, r25
    361c:	61 f3       	breq	.-40     	; 0x35f6 <vfscanf+0x1ca>
    361e:	b8 01       	movw	r22, r16
    3620:	c4 01       	movw	r24, r8
    3622:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <ungetc>
    3626:	c1 14       	cp	r12, r1
    3628:	d1 04       	cpc	r13, r1
    362a:	d9 f0       	breq	.+54     	; 0x3662 <vfscanf+0x236>
    362c:	f6 01       	movw	r30, r12
    362e:	10 82       	st	Z, r1
    3630:	18 c0       	rjmp	.+48     	; 0x3662 <vfscanf+0x236>
    3632:	fb 2d       	mov	r31, r11
    3634:	f0 62       	ori	r31, 0x20	; 32
    3636:	bf 2e       	mov	r11, r31
    3638:	07 c0       	rjmp	.+14     	; 0x3648 <vfscanf+0x21c>
    363a:	8b 2d       	mov	r24, r11
    363c:	80 61       	ori	r24, 0x10	; 16
    363e:	b8 2e       	mov	r11, r24
    3640:	03 c0       	rjmp	.+6      	; 0x3648 <vfscanf+0x21c>
    3642:	9b 2d       	mov	r25, r11
    3644:	90 64       	ori	r25, 0x40	; 64
    3646:	b9 2e       	mov	r11, r25
    3648:	2b 2d       	mov	r18, r11
    364a:	a6 01       	movw	r20, r12
    364c:	67 2d       	mov	r22, r7
    364e:	c8 01       	movw	r24, r16
    3650:	0e 94 be 18 	call	0x317c	; 0x317c <conv_int>
    3654:	81 11       	cpse	r24, r1
    3656:	05 c0       	rjmp	.+10     	; 0x3662 <vfscanf+0x236>
    3658:	f8 01       	movw	r30, r16
    365a:	83 81       	ldd	r24, Z+3	; 0x03
    365c:	80 73       	andi	r24, 0x30	; 48
    365e:	29 f4       	brne	.+10     	; 0x366a <vfscanf+0x23e>
    3660:	06 c0       	rjmp	.+12     	; 0x366e <vfscanf+0x242>
    3662:	b0 fc       	sbrc	r11, 0
    3664:	fc ce       	rjmp	.-520    	; 0x345e <vfscanf+0x32>
    3666:	a3 94       	inc	r10
    3668:	fa ce       	rjmp	.-524    	; 0x345e <vfscanf+0x32>
    366a:	aa 20       	and	r10, r10
    366c:	19 f0       	breq	.+6      	; 0x3674 <vfscanf+0x248>
    366e:	8a 2d       	mov	r24, r10
    3670:	90 e0       	ldi	r25, 0x00	; 0
    3672:	02 c0       	rjmp	.+4      	; 0x3678 <vfscanf+0x24c>
    3674:	8f ef       	ldi	r24, 0xFF	; 255
    3676:	9f ef       	ldi	r25, 0xFF	; 255
    3678:	0f 90       	pop	r0
    367a:	df 91       	pop	r29
    367c:	cf 91       	pop	r28
    367e:	1f 91       	pop	r17
    3680:	0f 91       	pop	r16
    3682:	ff 90       	pop	r15
    3684:	ef 90       	pop	r14
    3686:	df 90       	pop	r13
    3688:	cf 90       	pop	r12
    368a:	bf 90       	pop	r11
    368c:	af 90       	pop	r10
    368e:	9f 90       	pop	r9
    3690:	8f 90       	pop	r8
    3692:	7f 90       	pop	r7
    3694:	5f 90       	pop	r5
    3696:	4f 90       	pop	r4
    3698:	08 95       	ret

0000369a <isspace>:
    369a:	91 11       	cpse	r25, r1
    369c:	0e c1       	rjmp	.+540    	; 0x38ba <__ctype_isfalse>
    369e:	80 32       	cpi	r24, 0x20	; 32
    36a0:	19 f0       	breq	.+6      	; 0x36a8 <isspace+0xe>
    36a2:	89 50       	subi	r24, 0x09	; 9
    36a4:	85 50       	subi	r24, 0x05	; 5
    36a6:	d0 f7       	brcc	.-12     	; 0x369c <isspace+0x2>
    36a8:	08 95       	ret

000036aa <strchr_P>:
    36aa:	fc 01       	movw	r30, r24
    36ac:	05 90       	lpm	r0, Z+
    36ae:	06 16       	cp	r0, r22
    36b0:	21 f0       	breq	.+8      	; 0x36ba <strchr_P+0x10>
    36b2:	00 20       	and	r0, r0
    36b4:	d9 f7       	brne	.-10     	; 0x36ac <strchr_P+0x2>
    36b6:	c0 01       	movw	r24, r0
    36b8:	08 95       	ret
    36ba:	31 97       	sbiw	r30, 0x01	; 1
    36bc:	cf 01       	movw	r24, r30
    36be:	08 95       	ret

000036c0 <strnlen_P>:
    36c0:	fc 01       	movw	r30, r24
    36c2:	05 90       	lpm	r0, Z+
    36c4:	61 50       	subi	r22, 0x01	; 1
    36c6:	70 40       	sbci	r23, 0x00	; 0
    36c8:	01 10       	cpse	r0, r1
    36ca:	d8 f7       	brcc	.-10     	; 0x36c2 <strnlen_P+0x2>
    36cc:	80 95       	com	r24
    36ce:	90 95       	com	r25
    36d0:	8e 0f       	add	r24, r30
    36d2:	9f 1f       	adc	r25, r31
    36d4:	08 95       	ret

000036d6 <strnlen>:
    36d6:	fc 01       	movw	r30, r24
    36d8:	61 50       	subi	r22, 0x01	; 1
    36da:	70 40       	sbci	r23, 0x00	; 0
    36dc:	01 90       	ld	r0, Z+
    36de:	01 10       	cpse	r0, r1
    36e0:	d8 f7       	brcc	.-10     	; 0x36d8 <strnlen+0x2>
    36e2:	80 95       	com	r24
    36e4:	90 95       	com	r25
    36e6:	8e 0f       	add	r24, r30
    36e8:	9f 1f       	adc	r25, r31
    36ea:	08 95       	ret

000036ec <fgetc>:
    36ec:	cf 93       	push	r28
    36ee:	df 93       	push	r29
    36f0:	ec 01       	movw	r28, r24
    36f2:	2b 81       	ldd	r18, Y+3	; 0x03
    36f4:	20 ff       	sbrs	r18, 0
    36f6:	33 c0       	rjmp	.+102    	; 0x375e <fgetc+0x72>
    36f8:	26 ff       	sbrs	r18, 6
    36fa:	0a c0       	rjmp	.+20     	; 0x3710 <fgetc+0x24>
    36fc:	2f 7b       	andi	r18, 0xBF	; 191
    36fe:	2b 83       	std	Y+3, r18	; 0x03
    3700:	8e 81       	ldd	r24, Y+6	; 0x06
    3702:	9f 81       	ldd	r25, Y+7	; 0x07
    3704:	01 96       	adiw	r24, 0x01	; 1
    3706:	9f 83       	std	Y+7, r25	; 0x07
    3708:	8e 83       	std	Y+6, r24	; 0x06
    370a:	8a 81       	ldd	r24, Y+2	; 0x02
    370c:	90 e0       	ldi	r25, 0x00	; 0
    370e:	29 c0       	rjmp	.+82     	; 0x3762 <fgetc+0x76>
    3710:	22 ff       	sbrs	r18, 2
    3712:	0f c0       	rjmp	.+30     	; 0x3732 <fgetc+0x46>
    3714:	e8 81       	ld	r30, Y
    3716:	f9 81       	ldd	r31, Y+1	; 0x01
    3718:	80 81       	ld	r24, Z
    371a:	99 27       	eor	r25, r25
    371c:	87 fd       	sbrc	r24, 7
    371e:	90 95       	com	r25
    3720:	00 97       	sbiw	r24, 0x00	; 0
    3722:	19 f4       	brne	.+6      	; 0x372a <fgetc+0x3e>
    3724:	20 62       	ori	r18, 0x20	; 32
    3726:	2b 83       	std	Y+3, r18	; 0x03
    3728:	1a c0       	rjmp	.+52     	; 0x375e <fgetc+0x72>
    372a:	31 96       	adiw	r30, 0x01	; 1
    372c:	f9 83       	std	Y+1, r31	; 0x01
    372e:	e8 83       	st	Y, r30
    3730:	0e c0       	rjmp	.+28     	; 0x374e <fgetc+0x62>
    3732:	ea 85       	ldd	r30, Y+10	; 0x0a
    3734:	fb 85       	ldd	r31, Y+11	; 0x0b
    3736:	09 95       	icall
    3738:	97 ff       	sbrs	r25, 7
    373a:	09 c0       	rjmp	.+18     	; 0x374e <fgetc+0x62>
    373c:	2b 81       	ldd	r18, Y+3	; 0x03
    373e:	01 96       	adiw	r24, 0x01	; 1
    3740:	11 f4       	brne	.+4      	; 0x3746 <fgetc+0x5a>
    3742:	80 e1       	ldi	r24, 0x10	; 16
    3744:	01 c0       	rjmp	.+2      	; 0x3748 <fgetc+0x5c>
    3746:	80 e2       	ldi	r24, 0x20	; 32
    3748:	82 2b       	or	r24, r18
    374a:	8b 83       	std	Y+3, r24	; 0x03
    374c:	08 c0       	rjmp	.+16     	; 0x375e <fgetc+0x72>
    374e:	2e 81       	ldd	r18, Y+6	; 0x06
    3750:	3f 81       	ldd	r19, Y+7	; 0x07
    3752:	2f 5f       	subi	r18, 0xFF	; 255
    3754:	3f 4f       	sbci	r19, 0xFF	; 255
    3756:	3f 83       	std	Y+7, r19	; 0x07
    3758:	2e 83       	std	Y+6, r18	; 0x06
    375a:	99 27       	eor	r25, r25
    375c:	02 c0       	rjmp	.+4      	; 0x3762 <fgetc+0x76>
    375e:	8f ef       	ldi	r24, 0xFF	; 255
    3760:	9f ef       	ldi	r25, 0xFF	; 255
    3762:	df 91       	pop	r29
    3764:	cf 91       	pop	r28
    3766:	08 95       	ret

00003768 <fputc>:
    3768:	0f 93       	push	r16
    376a:	1f 93       	push	r17
    376c:	cf 93       	push	r28
    376e:	df 93       	push	r29
    3770:	18 2f       	mov	r17, r24
    3772:	09 2f       	mov	r16, r25
    3774:	eb 01       	movw	r28, r22
    3776:	8b 81       	ldd	r24, Y+3	; 0x03
    3778:	81 fd       	sbrc	r24, 1
    377a:	03 c0       	rjmp	.+6      	; 0x3782 <fputc+0x1a>
    377c:	8f ef       	ldi	r24, 0xFF	; 255
    377e:	9f ef       	ldi	r25, 0xFF	; 255
    3780:	20 c0       	rjmp	.+64     	; 0x37c2 <fputc+0x5a>
    3782:	82 ff       	sbrs	r24, 2
    3784:	10 c0       	rjmp	.+32     	; 0x37a6 <fputc+0x3e>
    3786:	4e 81       	ldd	r20, Y+6	; 0x06
    3788:	5f 81       	ldd	r21, Y+7	; 0x07
    378a:	2c 81       	ldd	r18, Y+4	; 0x04
    378c:	3d 81       	ldd	r19, Y+5	; 0x05
    378e:	42 17       	cp	r20, r18
    3790:	53 07       	cpc	r21, r19
    3792:	7c f4       	brge	.+30     	; 0x37b2 <fputc+0x4a>
    3794:	e8 81       	ld	r30, Y
    3796:	f9 81       	ldd	r31, Y+1	; 0x01
    3798:	9f 01       	movw	r18, r30
    379a:	2f 5f       	subi	r18, 0xFF	; 255
    379c:	3f 4f       	sbci	r19, 0xFF	; 255
    379e:	39 83       	std	Y+1, r19	; 0x01
    37a0:	28 83       	st	Y, r18
    37a2:	10 83       	st	Z, r17
    37a4:	06 c0       	rjmp	.+12     	; 0x37b2 <fputc+0x4a>
    37a6:	e8 85       	ldd	r30, Y+8	; 0x08
    37a8:	f9 85       	ldd	r31, Y+9	; 0x09
    37aa:	81 2f       	mov	r24, r17
    37ac:	09 95       	icall
    37ae:	89 2b       	or	r24, r25
    37b0:	29 f7       	brne	.-54     	; 0x377c <fputc+0x14>
    37b2:	2e 81       	ldd	r18, Y+6	; 0x06
    37b4:	3f 81       	ldd	r19, Y+7	; 0x07
    37b6:	2f 5f       	subi	r18, 0xFF	; 255
    37b8:	3f 4f       	sbci	r19, 0xFF	; 255
    37ba:	3f 83       	std	Y+7, r19	; 0x07
    37bc:	2e 83       	std	Y+6, r18	; 0x06
    37be:	81 2f       	mov	r24, r17
    37c0:	90 2f       	mov	r25, r16
    37c2:	df 91       	pop	r29
    37c4:	cf 91       	pop	r28
    37c6:	1f 91       	pop	r17
    37c8:	0f 91       	pop	r16
    37ca:	08 95       	ret

000037cc <ungetc>:
    37cc:	fb 01       	movw	r30, r22
    37ce:	23 81       	ldd	r18, Z+3	; 0x03
    37d0:	20 ff       	sbrs	r18, 0
    37d2:	12 c0       	rjmp	.+36     	; 0x37f8 <ungetc+0x2c>
    37d4:	26 fd       	sbrc	r18, 6
    37d6:	10 c0       	rjmp	.+32     	; 0x37f8 <ungetc+0x2c>
    37d8:	8f 3f       	cpi	r24, 0xFF	; 255
    37da:	3f ef       	ldi	r19, 0xFF	; 255
    37dc:	93 07       	cpc	r25, r19
    37de:	61 f0       	breq	.+24     	; 0x37f8 <ungetc+0x2c>
    37e0:	82 83       	std	Z+2, r24	; 0x02
    37e2:	2f 7d       	andi	r18, 0xDF	; 223
    37e4:	20 64       	ori	r18, 0x40	; 64
    37e6:	23 83       	std	Z+3, r18	; 0x03
    37e8:	26 81       	ldd	r18, Z+6	; 0x06
    37ea:	37 81       	ldd	r19, Z+7	; 0x07
    37ec:	21 50       	subi	r18, 0x01	; 1
    37ee:	31 09       	sbc	r19, r1
    37f0:	37 83       	std	Z+7, r19	; 0x07
    37f2:	26 83       	std	Z+6, r18	; 0x06
    37f4:	99 27       	eor	r25, r25
    37f6:	08 95       	ret
    37f8:	8f ef       	ldi	r24, 0xFF	; 255
    37fa:	9f ef       	ldi	r25, 0xFF	; 255
    37fc:	08 95       	ret

000037fe <__ultoa_invert>:
    37fe:	fa 01       	movw	r30, r20
    3800:	aa 27       	eor	r26, r26
    3802:	28 30       	cpi	r18, 0x08	; 8
    3804:	51 f1       	breq	.+84     	; 0x385a <__ultoa_invert+0x5c>
    3806:	20 31       	cpi	r18, 0x10	; 16
    3808:	81 f1       	breq	.+96     	; 0x386a <__ultoa_invert+0x6c>
    380a:	e8 94       	clt
    380c:	6f 93       	push	r22
    380e:	6e 7f       	andi	r22, 0xFE	; 254
    3810:	6e 5f       	subi	r22, 0xFE	; 254
    3812:	7f 4f       	sbci	r23, 0xFF	; 255
    3814:	8f 4f       	sbci	r24, 0xFF	; 255
    3816:	9f 4f       	sbci	r25, 0xFF	; 255
    3818:	af 4f       	sbci	r26, 0xFF	; 255
    381a:	b1 e0       	ldi	r27, 0x01	; 1
    381c:	3e d0       	rcall	.+124    	; 0x389a <__ultoa_invert+0x9c>
    381e:	b4 e0       	ldi	r27, 0x04	; 4
    3820:	3c d0       	rcall	.+120    	; 0x389a <__ultoa_invert+0x9c>
    3822:	67 0f       	add	r22, r23
    3824:	78 1f       	adc	r23, r24
    3826:	89 1f       	adc	r24, r25
    3828:	9a 1f       	adc	r25, r26
    382a:	a1 1d       	adc	r26, r1
    382c:	68 0f       	add	r22, r24
    382e:	79 1f       	adc	r23, r25
    3830:	8a 1f       	adc	r24, r26
    3832:	91 1d       	adc	r25, r1
    3834:	a1 1d       	adc	r26, r1
    3836:	6a 0f       	add	r22, r26
    3838:	71 1d       	adc	r23, r1
    383a:	81 1d       	adc	r24, r1
    383c:	91 1d       	adc	r25, r1
    383e:	a1 1d       	adc	r26, r1
    3840:	20 d0       	rcall	.+64     	; 0x3882 <__ultoa_invert+0x84>
    3842:	09 f4       	brne	.+2      	; 0x3846 <__ultoa_invert+0x48>
    3844:	68 94       	set
    3846:	3f 91       	pop	r19
    3848:	2a e0       	ldi	r18, 0x0A	; 10
    384a:	26 9f       	mul	r18, r22
    384c:	11 24       	eor	r1, r1
    384e:	30 19       	sub	r19, r0
    3850:	30 5d       	subi	r19, 0xD0	; 208
    3852:	31 93       	st	Z+, r19
    3854:	de f6       	brtc	.-74     	; 0x380c <__ultoa_invert+0xe>
    3856:	cf 01       	movw	r24, r30
    3858:	08 95       	ret
    385a:	46 2f       	mov	r20, r22
    385c:	47 70       	andi	r20, 0x07	; 7
    385e:	40 5d       	subi	r20, 0xD0	; 208
    3860:	41 93       	st	Z+, r20
    3862:	b3 e0       	ldi	r27, 0x03	; 3
    3864:	0f d0       	rcall	.+30     	; 0x3884 <__ultoa_invert+0x86>
    3866:	c9 f7       	brne	.-14     	; 0x385a <__ultoa_invert+0x5c>
    3868:	f6 cf       	rjmp	.-20     	; 0x3856 <__ultoa_invert+0x58>
    386a:	46 2f       	mov	r20, r22
    386c:	4f 70       	andi	r20, 0x0F	; 15
    386e:	40 5d       	subi	r20, 0xD0	; 208
    3870:	4a 33       	cpi	r20, 0x3A	; 58
    3872:	18 f0       	brcs	.+6      	; 0x387a <__ultoa_invert+0x7c>
    3874:	49 5d       	subi	r20, 0xD9	; 217
    3876:	31 fd       	sbrc	r19, 1
    3878:	40 52       	subi	r20, 0x20	; 32
    387a:	41 93       	st	Z+, r20
    387c:	02 d0       	rcall	.+4      	; 0x3882 <__ultoa_invert+0x84>
    387e:	a9 f7       	brne	.-22     	; 0x386a <__ultoa_invert+0x6c>
    3880:	ea cf       	rjmp	.-44     	; 0x3856 <__ultoa_invert+0x58>
    3882:	b4 e0       	ldi	r27, 0x04	; 4
    3884:	a6 95       	lsr	r26
    3886:	97 95       	ror	r25
    3888:	87 95       	ror	r24
    388a:	77 95       	ror	r23
    388c:	67 95       	ror	r22
    388e:	ba 95       	dec	r27
    3890:	c9 f7       	brne	.-14     	; 0x3884 <__ultoa_invert+0x86>
    3892:	00 97       	sbiw	r24, 0x00	; 0
    3894:	61 05       	cpc	r22, r1
    3896:	71 05       	cpc	r23, r1
    3898:	08 95       	ret
    389a:	9b 01       	movw	r18, r22
    389c:	ac 01       	movw	r20, r24
    389e:	0a 2e       	mov	r0, r26
    38a0:	06 94       	lsr	r0
    38a2:	57 95       	ror	r21
    38a4:	47 95       	ror	r20
    38a6:	37 95       	ror	r19
    38a8:	27 95       	ror	r18
    38aa:	ba 95       	dec	r27
    38ac:	c9 f7       	brne	.-14     	; 0x38a0 <__ultoa_invert+0xa2>
    38ae:	62 0f       	add	r22, r18
    38b0:	73 1f       	adc	r23, r19
    38b2:	84 1f       	adc	r24, r20
    38b4:	95 1f       	adc	r25, r21
    38b6:	a0 1d       	adc	r26, r0
    38b8:	08 95       	ret

000038ba <__ctype_isfalse>:
    38ba:	99 27       	eor	r25, r25
    38bc:	88 27       	eor	r24, r24

000038be <__ctype_istrue>:
    38be:	08 95       	ret

000038c0 <_exit>:
    38c0:	f8 94       	cli

000038c2 <__stop_program>:
    38c2:	ff cf       	rjmp	.-2      	; 0x38c2 <__stop_program>
